import{t as h}from"./viewUtil-f5666042.js";class A{static distinct(e,r){const s={};return e.filter(n=>{let t=n;return r instanceof Function?t=r(n):r!=null&&(t=n[r]),s[t]?!1:(t!=null&&(s[t]=1),!0)})}static arrayToObj(e,r,s){return Array.isArray(e)?e.reduce((n,t)=>{const o=r instanceof Function?r(t):t[r];return n[o]=s?t[s]:t,n},{}):e}static chunkArray(e,r=1e3){const s=[];let n=[];for(let t=0;t<e.length;t++)n.push(e[t]),(t+1)%r==0&&(s.push(n),n=[]);return n.length>0&&s.push(n),s}static clone(e){return e.map(r=>({...r}))}static cloneWithProps(e,...r){return!e||!Array.isArray(e)?e:e.map(s=>{const n={};for(const t of r)n[t]=s[t];return n})}static getMax(e,r){let s=0;for(const n of e)s=Math.max(s,r(n));return s}static sum(e,...r){return e.reduce((n,t)=>{let o=0;for(const i of r)o+=s(t,i);return n+o},0);function s(n,t){let o=n;if(o&&t)for(const i of t.split("."))o=o==null?void 0:o[i];return h(o)}}static grouping(e,r){const{keyGenerator:s,groupGenerator:n,keepSingle:t,valueGenerator:o}=r,i=[],p={};for(const u of e){const f=s(u);let c=u;if(o&&(c=o(u)),f){const a=p[f];if(a)Array.isArray(a)?a.push(c):a.addChild(c);else{const l=n(f,u);Array.isArray(l)?l.push(c):l.addChild(c),i.push(l),p[f]=l}}else i.push(u)}if(t)return i;for(let u=0;u<i.length;u++){const c=i[u].childs;c&&c.length==1&&i.splice(u,1,c[0])}return i}static isMultipleResult(e){if(!Array.isArray(e))return!1;for(const r of e)if(Array.isArray(r)&&r.length>0)return!0}}export{A};
