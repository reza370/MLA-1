{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://rainbow-csv/./contrib/wcwidth/combining.js","webpack://rainbow-csv/./contrib/wcwidth/index.js","webpack://rainbow-csv/./fast_load_utils.js","webpack://rainbow-csv/./node_modules/call-bind/callBound.js","webpack://rainbow-csv/./node_modules/call-bind/index.js","webpack://rainbow-csv/./node_modules/for-each/index.js","webpack://rainbow-csv/./node_modules/function-bind/implementation.js","webpack://rainbow-csv/./node_modules/function-bind/index.js","webpack://rainbow-csv/./node_modules/get-intrinsic/index.js","webpack://rainbow-csv/./node_modules/gopd/index.js","webpack://rainbow-csv/./node_modules/has-symbols/index.js","webpack://rainbow-csv/./node_modules/has-symbols/shams.js","webpack://rainbow-csv/./node_modules/has-tostringtag/shams.js","webpack://rainbow-csv/./node_modules/has/src/index.js","webpack://rainbow-csv/./node_modules/inherits/inherits_browser.js","webpack://rainbow-csv/./node_modules/is-arguments/index.js","webpack://rainbow-csv/./node_modules/is-callable/index.js","webpack://rainbow-csv/./node_modules/is-generator-function/index.js","webpack://rainbow-csv/./node_modules/is-typed-array/index.js","webpack://rainbow-csv/./node_modules/process/browser.js","webpack://rainbow-csv/./node_modules/util/support/isBufferBrowser.js","webpack://rainbow-csv/./node_modules/util/support/types.js","webpack://rainbow-csv/./node_modules/util/util.js","webpack://rainbow-csv/./node_modules/which-typed-array/index.js","webpack://rainbow-csv/./rainbow_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/csv_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql_csv.js","webpack://rainbow-csv/external commonjs \"vscode\"","webpack://rainbow-csv/./node_modules/available-typed-arrays/index.js","webpack://rainbow-csv/webpack/bootstrap","webpack://rainbow-csv/webpack/runtime/global","webpack://rainbow-csv/./extension.js"],"sourcesContent":["module.exports = [\n    [ 0x0300, 0x036F ], [ 0x0483, 0x0486 ], [ 0x0488, 0x0489 ],\n    [ 0x0591, 0x05BD ], [ 0x05BF, 0x05BF ], [ 0x05C1, 0x05C2 ],\n    [ 0x05C4, 0x05C5 ], [ 0x05C7, 0x05C7 ], [ 0x0600, 0x0603 ],\n    [ 0x0610, 0x0615 ], [ 0x064B, 0x065E ], [ 0x0670, 0x0670 ],\n    [ 0x06D6, 0x06E4 ], [ 0x06E7, 0x06E8 ], [ 0x06EA, 0x06ED ],\n    [ 0x070F, 0x070F ], [ 0x0711, 0x0711 ], [ 0x0730, 0x074A ],\n    [ 0x07A6, 0x07B0 ], [ 0x07EB, 0x07F3 ], [ 0x0901, 0x0902 ],\n    [ 0x093C, 0x093C ], [ 0x0941, 0x0948 ], [ 0x094D, 0x094D ],\n    [ 0x0951, 0x0954 ], [ 0x0962, 0x0963 ], [ 0x0981, 0x0981 ],\n    [ 0x09BC, 0x09BC ], [ 0x09C1, 0x09C4 ], [ 0x09CD, 0x09CD ],\n    [ 0x09E2, 0x09E3 ], [ 0x0A01, 0x0A02 ], [ 0x0A3C, 0x0A3C ],\n    [ 0x0A41, 0x0A42 ], [ 0x0A47, 0x0A48 ], [ 0x0A4B, 0x0A4D ],\n    [ 0x0A70, 0x0A71 ], [ 0x0A81, 0x0A82 ], [ 0x0ABC, 0x0ABC ],\n    [ 0x0AC1, 0x0AC5 ], [ 0x0AC7, 0x0AC8 ], [ 0x0ACD, 0x0ACD ],\n    [ 0x0AE2, 0x0AE3 ], [ 0x0B01, 0x0B01 ], [ 0x0B3C, 0x0B3C ],\n    [ 0x0B3F, 0x0B3F ], [ 0x0B41, 0x0B43 ], [ 0x0B4D, 0x0B4D ],\n    [ 0x0B56, 0x0B56 ], [ 0x0B82, 0x0B82 ], [ 0x0BC0, 0x0BC0 ],\n    [ 0x0BCD, 0x0BCD ], [ 0x0C3E, 0x0C40 ], [ 0x0C46, 0x0C48 ],\n    [ 0x0C4A, 0x0C4D ], [ 0x0C55, 0x0C56 ], [ 0x0CBC, 0x0CBC ],\n    [ 0x0CBF, 0x0CBF ], [ 0x0CC6, 0x0CC6 ], [ 0x0CCC, 0x0CCD ],\n    [ 0x0CE2, 0x0CE3 ], [ 0x0D41, 0x0D43 ], [ 0x0D4D, 0x0D4D ],\n    [ 0x0DCA, 0x0DCA ], [ 0x0DD2, 0x0DD4 ], [ 0x0DD6, 0x0DD6 ],\n    [ 0x0E31, 0x0E31 ], [ 0x0E34, 0x0E3A ], [ 0x0E47, 0x0E4E ],\n    [ 0x0EB1, 0x0EB1 ], [ 0x0EB4, 0x0EB9 ], [ 0x0EBB, 0x0EBC ],\n    [ 0x0EC8, 0x0ECD ], [ 0x0F18, 0x0F19 ], [ 0x0F35, 0x0F35 ],\n    [ 0x0F37, 0x0F37 ], [ 0x0F39, 0x0F39 ], [ 0x0F71, 0x0F7E ],\n    [ 0x0F80, 0x0F84 ], [ 0x0F86, 0x0F87 ], [ 0x0F90, 0x0F97 ],\n    [ 0x0F99, 0x0FBC ], [ 0x0FC6, 0x0FC6 ], [ 0x102D, 0x1030 ],\n    [ 0x1032, 0x1032 ], [ 0x1036, 0x1037 ], [ 0x1039, 0x1039 ],\n    [ 0x1058, 0x1059 ], [ 0x1160, 0x11FF ], [ 0x135F, 0x135F ],\n    [ 0x1712, 0x1714 ], [ 0x1732, 0x1734 ], [ 0x1752, 0x1753 ],\n    [ 0x1772, 0x1773 ], [ 0x17B4, 0x17B5 ], [ 0x17B7, 0x17BD ],\n    [ 0x17C6, 0x17C6 ], [ 0x17C9, 0x17D3 ], [ 0x17DD, 0x17DD ],\n    [ 0x180B, 0x180D ], [ 0x18A9, 0x18A9 ], [ 0x1920, 0x1922 ],\n    [ 0x1927, 0x1928 ], [ 0x1932, 0x1932 ], [ 0x1939, 0x193B ],\n    [ 0x1A17, 0x1A18 ], [ 0x1B00, 0x1B03 ], [ 0x1B34, 0x1B34 ],\n    [ 0x1B36, 0x1B3A ], [ 0x1B3C, 0x1B3C ], [ 0x1B42, 0x1B42 ],\n    [ 0x1B6B, 0x1B73 ], [ 0x1DC0, 0x1DCA ], [ 0x1DFE, 0x1DFF ],\n    [ 0x200B, 0x200F ], [ 0x202A, 0x202E ], [ 0x2060, 0x2063 ],\n    [ 0x206A, 0x206F ], [ 0x20D0, 0x20EF ], [ 0x302A, 0x302F ],\n    [ 0x3099, 0x309A ], [ 0xA806, 0xA806 ], [ 0xA80B, 0xA80B ],\n    [ 0xA825, 0xA826 ], [ 0xFB1E, 0xFB1E ], [ 0xFE00, 0xFE0F ],\n    [ 0xFE20, 0xFE23 ], [ 0xFEFF, 0xFEFF ], [ 0xFFF9, 0xFFFB ],\n    [ 0x10A01, 0x10A03 ], [ 0x10A05, 0x10A06 ], [ 0x10A0C, 0x10A0F ],\n    [ 0x10A38, 0x10A3A ], [ 0x10A3F, 0x10A3F ], [ 0x1D167, 0x1D169 ],\n    [ 0x1D173, 0x1D182 ], [ 0x1D185, 0x1D18B ], [ 0x1D1AA, 0x1D1AD ],\n    [ 0x1D242, 0x1D244 ], [ 0xE0001, 0xE0001 ], [ 0xE0020, 0xE007F ],\n    [ 0xE0100, 0xE01EF ]\n]\n","\"use strict\"\n\nvar combining = require('./combining')\n\nvar DEFAULTS = {\n  nul: 0,\n  control: 0\n}\n\nmodule.exports = function wcwidth(str) {\n  return wcswidth(str, DEFAULTS)\n}\n\n/*\n *  The following functions define the column width of an ISO 10646\n *  character as follows:\n *  - The null character (U+0000) has a column width of 0.\n *  - Other C0/C1 control characters and DEL will lead to a return value\n *    of -1.\n *  - Non-spacing and enclosing combining characters (general category\n *    code Mn or Me in the\n *    Unicode database) have a column width of 0.\n *  - SOFT HYPHEN (U+00AD) has a column width of 1.\n *  - Other format characters (general category code Cf in the Unicode\n *    database) and ZERO WIDTH\n *    SPACE (U+200B) have a column width of 0.\n *  - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)\n *    have a column width of 0.\n *  - Spacing characters in the East Asian Wide (W) or East Asian\n *    Full-width (F) category as\n *    defined in Unicode Technical Report #11 have a column width of 2.\n *  - All remaining characters (including all printable ISO 8859-1 and\n *    WGL4 characters, Unicode control characters, etc.) have a column\n *    width of 1.\n *  This implementation assumes that characters are encoded in ISO 10646.\n*/\n\nfunction wcswidth(str, opts) {\n  if (typeof str !== 'string') return wcwidth(str, opts)\n\n  var s = 0\n  for (var i = 0; i < str.length; i++) {\n    var n = wcwidth(str.charCodeAt(i), opts)\n    if (n < 0) return -1\n    s += n\n  }\n\n  return s\n}\n\nfunction wcwidth(ucs, opts) {\n  // test for 8-bit control characters\n  if (ucs === 0) return opts.nul\n  if (ucs < 32 || (ucs >= 0x7f && ucs < 0xa0)) return opts.control\n\n  // binary search in table of non-spacing characters\n  if (bisearch(ucs)) return 0\n\n  // if we arrive here, ucs is not a combining or C0/C1 control character\n  return 1 +\n      (ucs >= 0x1100 &&\n       (ucs <= 0x115f ||                       // Hangul Jamo init. consonants\n        ucs == 0x2329 || ucs == 0x232a ||\n        (ucs >= 0x2e80 && ucs <= 0xa4cf &&\n         ucs != 0x303f) ||                     // CJK ... Yi\n        (ucs >= 0xac00 && ucs <= 0xd7a3) ||    // Hangul Syllables\n        (ucs >= 0xf900 && ucs <= 0xfaff) ||    // CJK Compatibility Ideographs\n        (ucs >= 0xfe10 && ucs <= 0xfe19) ||    // Vertical forms\n        (ucs >= 0xfe30 && ucs <= 0xfe6f) ||    // CJK Compatibility Forms\n        (ucs >= 0xff00 && ucs <= 0xff60) ||    // Fullwidth Forms\n        (ucs >= 0xffe0 && ucs <= 0xffe6) ||\n        (ucs >= 0x20000 && ucs <= 0x2fffd) ||\n        (ucs >= 0x30000 && ucs <= 0x3fffd)));\n}\n\nfunction bisearch(ucs) {\n  var min = 0\n  var max = combining.length - 1\n  var mid\n\n  if (ucs < combining[0][0] || ucs > combining[max][1]) return false\n\n  while (max >= min) {\n    mid = Math.floor((min + max) / 2)\n    if (ucs > combining[mid][1]) min = mid + 1\n    else if (ucs < combining[mid][0]) max = mid - 1\n    else return true\n  }\n\n  return false\n}\n","// This file stores only functionality that is required for idle operation of Rainbow CSV i.e. autodetection only.\n// We want to avoid loading/parsing a lot of JS code in cases where we don't have any CSV files to work with.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\nclass RecordTextConsumer {\n    // The only purpose of this class is to avoid code duplication when dealing with leftover lines in line_aggregator (the second `consume` call).\n    constructor(delim, policy, stop_on_warning, collect_records, preserve_quotes_and_whitespaces, detect_trailing_spaces, min_num_fields_for_autodetection) {\n        this.delim = delim;\n        this.policy = policy;\n        this.stop_on_warning = stop_on_warning;\n        this.first_defective_line = null;\n        this.records = collect_records ? [] : null;\n        this.collect_records = collect_records;\n        this.num_records_parsed = 0;\n        this.fields_info = new Map();\n        this.first_trailing_space_line = null;\n        this.detect_trailing_spaces = detect_trailing_spaces;\n        this.preserve_quotes_and_whitespaces = preserve_quotes_and_whitespaces;\n        this.min_num_fields_for_autodetection = min_num_fields_for_autodetection;\n    }\n\n    consume(record_text, record_start_line) {\n        let [record, warning] = csv_utils.smart_split(record_text, this.delim, this.policy, this.preserve_quotes_and_whitespaces);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = record_start_line;\n            }\n            if (this.stop_on_warning)\n                return /*can_continue=*/false;\n        }\n        if (this.detect_trailing_spaces && this.first_trailing_space_line === null) {\n            for (let field of record) {\n                if (field.length && (field.charAt(0) == ' ' || field.charAt(field.length - 1) == ' ')) {\n                    this.first_trailing_space_line = record_start_line;\n                }\n            }\n        }\n        if (!this.fields_info.has(record.length)) {\n            this.fields_info.set(record.length, this.num_records_parsed);\n            if (this.min_num_fields_for_autodetection != -1) {\n                // Autodetection mode: stop on inconsistent records length and when there is not enough columns (typically less than 2 i.e. 1).\n                if (record.length < this.min_num_fields_for_autodetection)\n                    return /*can_continue=*/false;\n                if (this.fields_info.size > 1)\n                    return /*can_continue=*/false;\n            }\n        }\n        if (this.collect_records) {\n            this.records.push(record);\n        }\n        this.num_records_parsed += 1;\n        return /*can_continue=*/true;\n    }\n}\n\n\nfunction parse_document_records(document, delim, policy, comment_prefix=null, stop_on_warning=false, max_records_to_parse=-1, collect_records=true, preserve_quotes_and_whitespaces=false, detect_trailing_spaces=false, min_num_fields_for_autodetection=-1) {\n    let num_lines = document.lineCount;\n    let record_start_line = 0;\n    let line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n    let consumer = new RecordTextConsumer(delim, policy, stop_on_warning, collect_records, preserve_quotes_and_whitespaces, detect_trailing_spaces, min_num_fields_for_autodetection);\n    let comments = []; // An ordered list of {record_no, comment_text} tuples which can be merged with the records later.\n\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        let line_text = document.lineAt(lnum).text;\n        if (lnum + 1 >= num_lines && line_text == \"\") {\n            if (collect_records) {\n                // Treat the last empty line as a comment - this is to prevent align/shrink functions from removing it.\n                comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n            }\n            break; // Skip the last empty line.\n        }\n        let record_text = null;\n        if (policy == 'quoted_rfc') {\n            line_aggregator.add_line(line_text);\n            if (line_aggregator.has_comment_line) {\n                record_start_line = lnum + 1;\n                line_aggregator.reset();\n                if (collect_records) {\n                    comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n                }\n                continue;\n            } else if (line_aggregator.has_full_record) {\n                record_text = line_aggregator.get_full_line('\\n');\n                line_aggregator.reset();\n            } else {\n                continue;\n            }\n        } else {\n            if (comment_prefix && line_text.startsWith(comment_prefix)) {\n                record_start_line = lnum + 1;\n                if (collect_records) {\n                    comments.push({record_num: consumer.num_records_parsed, comment_text: line_text});\n                }\n                continue;\n            } else {\n                record_text = line_text;\n            }\n        }\n        if (!consumer.consume(record_text, record_start_line)) {\n            return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n        }\n        record_start_line = lnum + 1;\n        if (max_records_to_parse !== -1 && consumer.num_records_parsed >= max_records_to_parse) {\n            return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n        }\n    }\n\n    if (line_aggregator.is_inside_multiline_record()) {\n        assert(policy == 'quoted_rfc');\n        consumer.consume(line_aggregator.get_full_line('\\n'), record_start_line);\n    }\n    return [consumer.records, consumer.num_records_parsed, consumer.fields_info, consumer.first_defective_line, consumer.first_trailing_space_line, comments];\n}\n\n\nmodule.exports.parse_document_records = parse_document_records;\nmodule.exports.assert = assert;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\ntry {\n\tnull.error; // eslint-disable-line no-unused-expressions\n} catch (e) {\n\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\tvar errorProto = getProto(getProto(e));\n\tINTRINSICS['%Error.prototype%'] = errorProto;\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar gOPD = require('gopd');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","const os = require('os');\nconst fs = require('fs');\nconst path = require('path');\n\nconst rbql = require('./rbql_core/rbql-js/rbql.js');\nconst rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nconst fast_load_utils = require('./fast_load_utils.js');\n\nconst wcwidth = require('./contrib/wcwidth/index.js');\n\nconst non_numeric_sentinel = -1;\nconst number_regex = /^([0-9]+)(\\.[0-9]+)?$/;\n\n// Copypasted from extension.js\nconst QUOTED_RFC_POLICY = 'quoted_rfc';\nconst QUOTED_POLICY = 'quoted';\nconst dynamic_csv_highlight_margin = 50; // TODO make configurable.\nconst max_preview_field_length = 250;\nconst alignment_extra_readability_whitespace_length = 1;\n\n\nclass AssertionError extends Error {}\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction get_default_js_udf_content() {\n    let default_content = `// This file can be used to store RBQL UDFs. Example:\n    //\n    // function foo(value) {\n    //     return 'foo ' + String(value.length);\n    // }\n    // \n    // Functions defined in this file can be used in RBQL queries e.g.\n    // SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    //\n    // Don't forget to save this file after editing!\n    //\n    // Write your own functions below this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_default_python_udf_content() {\n    let default_content = `# This file can be used to store RBQL UDFs. Example:\n    #\n    # def foo(value):\n    #     return 'foo ' + str(len(value))\n    # \n    # \n    # Functions defined in this file can be used in RBQL queries e.g.\n    # SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    #\n    # Don't forget to save this file after editing!\n    #\n    # Write your own functions below this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction update_subcomponent_stats(field, is_first_record, max_field_components_lens, calc_visual_char_width) {\n    // Extract overall field length and length of integer and fractional parts of the field if it represents a number.\n    let visual_field_length = calc_visual_char_width ? wcwidth(field) : field.length;\n    max_field_components_lens.has_wide_chars = max_field_components_lens.has_wide_chars || visual_field_length != field.length;\n    max_field_components_lens.max_total_length = Math.max(max_field_components_lens.max_total_length, visual_field_length);\n    if (max_field_components_lens.max_int_length == non_numeric_sentinel) {\n        // Column is not a number, early return.\n        return;\n    }\n    let match_result = number_regex.exec(field);\n    if (match_result === null) {\n        if (!is_first_record && field.length) { // Checking field_length here allows numeric columns to have some of the fields empty.\n            // We only mark the column as non-header if we know that this is not a header line.\n            max_field_components_lens.max_int_length = non_numeric_sentinel;\n            max_field_components_lens.max_fractional_length = non_numeric_sentinel;\n        }\n        return;\n    }\n    let cur_integer_part_length = match_result[1].length;\n    max_field_components_lens.max_int_length = Math.max(max_field_components_lens.max_int_length, cur_integer_part_length);\n    let cur_fractional_part_length = match_result[2] === undefined ? 0 : match_result[2].length;\n    max_field_components_lens.max_fractional_length = Math.max(max_field_components_lens.max_fractional_length, cur_fractional_part_length);\n}\n\n\nfunction get_cursor_position_if_unambiguous(active_editor) {\n    let selections = active_editor.selections;\n    if (!selections || selections.length != 1) {\n        // Support only single-cursor, multicursor is ambiguous.\n        return null;\n    }\n    let selection = selections[0];\n    let position = selection.active;\n    if (!position.isEqual(selection.anchor)) {\n        // Selections are ambiguous.\n        return null;\n    }\n    return position;\n}\n\n\nfunction is_ascii(src_str) {\n    return /^[\\x00-\\x7F]*$/.test(src_str);\n}\n\n\nfunction calc_column_stats(active_doc, delim, policy, comment_prefix, enable_double_width_alignment) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, first_defective_line + 1, null, null];\n    }\n    let column_stats = [];\n    let is_first_record = true;\n    let calc_visual_char_width = false;\n    for (let record of records) {\n        for (let fnum = 0; fnum < record.length; fnum++) {\n            if (column_stats.length <= fnum) {\n                column_stats.push({max_total_length: 0, max_int_length: 0, max_fractional_length: 0, has_wide_chars: false});\n            }\n            let field = record[fnum];\n            if (!calc_visual_char_width && enable_double_width_alignment) {\n                calc_visual_char_width = !is_ascii(field);\n            }\n            let field_lines = field.split('\\n');\n            if (field_lines.length > 1) {\n                // We don't allow multiline fields to be numeric for simplicity.\n                column_stats[fnum].max_int_length = non_numeric_sentinel;\n                column_stats[fnum].max_fractional_length = non_numeric_sentinel;\n            }\n            for (let field_line of field_lines) {\n                update_subcomponent_stats(field_line.trim(), is_first_record, column_stats[fnum], calc_visual_char_width);\n            }\n        }\n        is_first_record = false;\n    }\n    return [column_stats, null, records, comments];\n}\n\n\nfunction adjust_column_stats(column_stats, delim_length) {\n    // Ensure that numeric components max widths are consistent with non-numeric (header) width.\n    let adjusted_stats = [];\n    for (let column_stat of column_stats) {\n        if (column_stat.max_int_length <= 0) {\n            column_stat.max_int_length = -1;\n            column_stat.max_fractional_length = -1;\n        }\n        if (column_stat.max_int_length > 0) {\n            // The sum of integer and float parts can be bigger than the max width, e.g. here:\n            // value\n            // 0.12\n            // 1234\n            if (column_stat.max_int_length + column_stat.max_fractional_length > column_stat.max_total_length) {\n                column_stat.max_total_length = column_stat.max_int_length + column_stat.max_fractional_length;\n            }\n            // This is needed when the header is wider than numeric components and/or their sum.\n            if (column_stat.max_total_length - column_stat.max_fractional_length > column_stat.max_int_length) {\n                column_stat.max_int_length = column_stat.max_total_length - column_stat.max_fractional_length;\n            }\n            // Sanity check.\n            if (column_stat.max_total_length != column_stat.max_int_length + column_stat.max_fractional_length) {\n                // Assertion Error, this can never happen.\n                return null;\n            }\n        }\n        let previous_stat = adjusted_stats.length ? adjusted_stats[adjusted_stats.length - 1] : null;\n        column_stat.start_offset = previous_stat === null ? 0 : previous_stat.start_offset + previous_stat.max_total_length + alignment_extra_readability_whitespace_length + delim_length;\n        adjusted_stats.push(column_stat);\n    }\n    return adjusted_stats;\n}\n\n\nfunction align_field(field, is_first_record, max_field_components_lens, is_last_in_line) {\n    // Align field, use Math.max() to avoid negative delta_length which can happen theorethically due to async doc edit.\n    field = field.trim();\n    let visual_field_length = max_field_components_lens.has_wide_chars ? wcwidth(field) : field.length;\n    if (max_field_components_lens.max_int_length == non_numeric_sentinel) {\n        let delta_length = Math.max(max_field_components_lens.max_total_length - visual_field_length, 0);\n        return is_last_in_line ? field : field + ' '.repeat(delta_length + alignment_extra_readability_whitespace_length);\n    }\n    if (is_first_record) {\n        if (number_regex.exec(field) === null) {\n            // The line must be a header - align it using max_width rule.\n            let delta_length = Math.max(max_field_components_lens.max_total_length - visual_field_length, 0);\n            return is_last_in_line ? field : field + ' '.repeat(delta_length + alignment_extra_readability_whitespace_length);\n        }\n    }\n    let dot_pos = field.indexOf('.');\n    let cur_integer_part_length = dot_pos == -1 ? field.length : dot_pos;\n    // Here cur_fractional_part_length includes the leading dot too.\n    let cur_fractional_part_length = dot_pos == -1 ? 0 : field.length - dot_pos;\n    let integer_delta_length = Math.max(max_field_components_lens.max_int_length - cur_integer_part_length, 0);\n    let fractional_delta_length = Math.max(max_field_components_lens.max_fractional_length - cur_fractional_part_length);\n    let trailing_spaces = is_last_in_line ? '' : ' '.repeat(fractional_delta_length + alignment_extra_readability_whitespace_length);\n    return ' '.repeat(integer_delta_length) + field + trailing_spaces;\n}\n\n\nfunction rfc_align_field(field, is_first_record, max_field_components_lens, is_field_segment, is_last_in_line) {\n    let aligned = align_field(field, is_first_record, max_field_components_lens, is_last_in_line);\n    if (is_field_segment) {\n        aligned = ' '.repeat(max_field_components_lens.start_offset) + aligned;\n    }\n    return aligned;\n}\n\n\nclass RecordCommentMerger {\n    constructor(records, comments) {\n        this.records = records;\n        this.comments = comments;\n        this.nr = 0;\n        this.next_comment = 0;\n    }\n\n    get_next() {\n        // Returns tuple (record, comment).\n        if (this.has_comments_left() && (!this.has_records_left() || this.comments[this.next_comment].record_num <= this.nr)) {\n            let result = [null, this.comments[this.next_comment].comment_text];\n            this.next_comment += 1;\n            return result;\n        }\n        if (this.has_records_left()) {\n            let result = [this.records[this.nr], null];\n            this.nr += 1;\n            return result;\n        }\n        return [null, null];\n    }\n\n    has_comments_left() {\n        return this.next_comment < this.comments.length;\n    }\n\n    has_records_left() {\n        return this.nr < this.records.length;\n    }\n\n    has_entries_left() {\n        return this.has_comments_left() || this.has_records_left();\n    }\n}\n\n\nfunction align_columns(records, comments, column_stats, delim) {\n    // Unlike shrink_columns, here we don't compute `has_edit` flag because it is\n    // 1: Algorithmically complicated (especially for multiline fields) and we also can't just compare fields lengths like in shrink.\n    // 2: The alignment procedure is opinionated and \"Already aligned\" report has little value.\n    // Because of this in case of executing \"Align\" command consecutively N times one would have to run undo N times too.\n    let result_lines = [];\n    let is_first_record = true;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record === null) {\n            result_lines.push(comment);\n            continue;\n        }\n        let aligned_fields = [];\n        for (let fnum = 0; fnum < record.length; fnum++) {\n            if (fnum >= column_stats.length) // Safeguard against async doc edit, should never happen.\n                break;\n            let is_field_segment = false;\n            let field = record[fnum];\n            let field_lines = field.split('\\n');\n            for (let i = 0; i < field_lines.length; i++) {\n                if (i > 0) {\n                    result_lines.push(aligned_fields.join(delim));\n                    aligned_fields = [];\n                    is_field_segment = true;\n                }\n                let is_last_in_line = fnum + 1 == record.length || (field_lines.length > 1 && i + 1 < field_lines.length);\n                let aligned_field = rfc_align_field(field_lines[i], is_first_record, column_stats[fnum], is_field_segment, is_last_in_line);\n                is_field_segment = false;\n                aligned_fields.push(aligned_field);\n            }\n        }\n        is_first_record = false;\n        result_lines.push(aligned_fields.join(delim));\n    }\n    return result_lines.join('\\n');\n}\n\n\nfunction shrink_columns(active_doc, delim, policy, comment_prefix) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, first_defective_line + 1];\n    }\n    let result_lines = [];\n    let has_edit = false;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record === null) {\n            result_lines.push(comment);\n            continue;\n        }\n        let aligned_fields = [];\n        for (let fnum = 0; fnum < record.length; fnum++) {\n            let field = record[fnum];\n            let field_lines = field.split('\\n');\n            for (let i = 0; i < field_lines.length; i++) {\n                if (i > 0) {\n                    result_lines.push(aligned_fields.join(delim));\n                    aligned_fields = [];\n                }\n                let aligned_field = field_lines[i].trim();\n                if (aligned_field.length != field_lines[i].length) {\n                    // Unlike in align function here we can just compare resulting length to decide if change has occured.\n                    has_edit = true;\n                }\n                aligned_fields.push(aligned_field);\n            }\n        }\n        result_lines.push(aligned_fields.join(delim));\n    }\n    if (!has_edit)\n        return [null, null];\n    return [result_lines.join('\\n'), null];\n}\n\n\nfunction make_table_name_key(file_path) {\n    return 'rbql_table_name:' + file_path;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction find_table_path(vscode_global_state, main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_path = vscode_global_state ? vscode_global_state.get(make_table_name_key(table_id)) : null;\n    if (table_path && fs.existsSync(table_path)) {\n        return table_path;\n    }\n    return null;\n}\n\n\nasync function read_header(table_path, encoding) {\n    if (encoding == 'latin-1')\n        encoding = 'binary';\n    let readline = require('readline');\n    let input_reader = readline.createInterface({ input: fs.createReadStream(table_path, {encoding: encoding}) });\n    let closed = false;\n    let promise_resolve = null;\n    let promise_reject = null;\n    let output_promise = new Promise(function(resolve, reject) {\n        promise_resolve = resolve;\n        promise_reject = reject;\n    });\n    input_reader.on('line', line => {\n        if (!closed) {\n            closed = true;\n            input_reader.close();\n            promise_resolve(line);\n        }\n    });\n    input_reader.on('error', error => {\n        promise_reject(error);\n    });\n    return output_promise;\n}\n\n\nfunction get_header_line(document, comment_prefix) {\n    const num_lines = document.lineCount;\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        const line_text = document.lineAt(lnum).text;\n        if (!comment_prefix || !line_text.startsWith(comment_prefix)) {\n            return [lnum, line_text];\n        }\n    }\n    return [null, null];\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1 + 1} -> ${num_fields_1} fields, record ${record_num_2 + 1} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RbqlIOHandlingError extends Error {}\n\nclass VSCodeRecordIterator extends rbql.RBQLInputIterator {\n    constructor(document, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        // We could have done a hack here actually: convert the document to stream/buffer and then use the standard reader.\n        super();\n        this.has_header = has_header;\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.NR = 0; // Record number.\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields).\n        let fail_on_warning = policy == 'quoted_rfc';\n        let [_num_records_parsed, _comments] = [null, null];\n        [this.records, _num_records_parsed, this.fields_info, this.first_defective_line, this._first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, fail_on_warning);\n        if (fail_on_warning && this.first_defective_line !== null) {\n            throw new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.records.length}, line ${this.first_defective_line}`);\n        }\n        this.first_record = this.records.length ? this.records[0] : [];\n        this.next_record_index = 0;\n    }\n\n    stop() {\n    }\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.has_header) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    }\n\n    async get_header() {\n        return this.has_header ? this.first_record : null;\n    }\n\n    do_get_record() {\n        if (this.next_record_index >= this.records.length) {\n            return null;\n        }\n        let record = this.records[this.next_record_index];\n        this.next_record_index += 1;\n        return record;\n    }\n\n    async get_record() {\n        if (this.NR == 0 && this.has_header) {\n            this.do_get_record(); // Skip the header record.\n        }\n        this.NR += 1;\n        let record = this.do_get_record();\n        return record;\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.fields_info.size > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    }\n}\n\n\nclass VSCodeWriter extends rbql.RBQLOutputWriter {\n    constructor(delim, policy) {\n        super();\n        this.delim = delim;\n        this.policy = policy;\n        this.header_len = null;\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.output_lines = [];\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.output_lines.push(this.polymorphic_join(fields));\n        return true;\n    };\n\n    async finish() {\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n}\n\nclass VSCodeTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(_table_id) {\n        throw new RbqlIOHandlingError(\"JOIN queries are currently not supported in vscode.dev web version.\");\n    }\n\n    get_warnings() {\n        return [];\n    };\n}\n\nasync function rbql_query_web(query_text, input_document, input_delim, input_policy, output_delim, output_policy, output_warnings, with_headers, comment_prefix=null) {\n    let user_init_code = ''; // TODO find a way to have init code.\n    let join_tables_registry = new VSCodeTableRegistry(); // TODO find a way to have join registry.\n    let input_iterator = new VSCodeRecordIterator(input_document, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new VSCodeWriter(output_delim, output_policy);\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    return output_writer.output_lines;\n}\n\n\nclass VSCodeFileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(vscode_global_state, input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.vscode_global_state = vscode_global_state;\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.vscode_global_state, this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new rbql_csv.CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function rbql_query_node(vscode_global_state, query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!rbql_csv.is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!rbql_csv.is_ascii(input_delim) || !rbql_csv.is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = rbql_csv.read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new VSCodeFileSystemCSVRegistry(vscode_global_state, input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new rbql_csv.CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new rbql_csv.CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nfunction make_multiline_record_ranges(vscode, delim_length, newline_marker, fields, start_line, expected_end_line_for_control) {\n    // Semantic ranges in VSCode can't span multiple lines, so we use this workaround.\n    let record_ranges = [];\n    let lnum_current = start_line;\n    let pos_in_editor_line = 0;\n    let next_pos_in_editor_line = 0;\n    for (let i = 0; i < fields.length; i++) {\n        let pos_in_logical_field = 0;\n        // Group tokens belonging to the same logical field.\n        let logical_field_tokens = [];\n        while (true) {\n            let newline_marker_pos = fields[i].indexOf(newline_marker, pos_in_logical_field);\n            if (newline_marker_pos == -1)\n                break;\n            logical_field_tokens.push(new vscode.Range(lnum_current, pos_in_editor_line, lnum_current, pos_in_editor_line + newline_marker_pos - pos_in_logical_field));\n            lnum_current += 1;\n            pos_in_editor_line = 0;\n            next_pos_in_editor_line = 0;\n            pos_in_logical_field = newline_marker_pos + newline_marker.length;\n        }\n        next_pos_in_editor_line += fields[i].length - pos_in_logical_field;\n        if (i + 1 < fields.length) {\n            next_pos_in_editor_line += delim_length;\n        }\n        logical_field_tokens.push(new vscode.Range(lnum_current, pos_in_editor_line, lnum_current, next_pos_in_editor_line));\n        record_ranges.push(logical_field_tokens);\n        // From semantic tokenization perspective the end of token doesn't include the last character of vscode.Range i.e. it treats the range as [) interval, unlike the Range.contains() function which treats ranges as [] intervals.\n        pos_in_editor_line = next_pos_in_editor_line;\n    }\n    assert(lnum_current == expected_end_line_for_control);\n    return record_ranges;\n}\n\n\nfunction is_opening_rfc_line(line_text, delim) {\n    // The line is oppening if by adding a character (to avoid accidental double double quote) and single double quote at the end we can make it parsable without warning!\n    // Some lines can be simultaneously opening and closing, e.g. `\",a1,a2` or `a1,a2,\"`\n    let [_record, warning] = csv_utils.split_quoted_str(line_text + 'x\"', delim);\n    return !warning;\n}\n\n\nfunction parse_document_range_rfc(vscode, doc, delim, comment_prefix, range, custom_parsing_margin=null) {\n    if (custom_parsing_margin === null) {\n        custom_parsing_margin = dynamic_csv_highlight_margin;\n    }\n    let begin_line = Math.max(0, range.start.line - custom_parsing_margin);\n    let end_line = Math.min(doc.lineCount, range.end.line + custom_parsing_margin);\n    let table_ranges = [];\n    let line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n    // The first or the second line in range with an odd number of double quotes is a start line, after finding it we can use the standard parsing algorithm.\n    for (let lnum = begin_line; lnum < end_line; lnum++) {\n        let line_text = doc.lineAt(lnum).text;\n        if (lnum + 1 == doc.lineCount && !line_text)\n            break;\n        let inside_multiline_record_before = line_aggregator.is_inside_multiline_record();\n        let start_line = lnum - line_aggregator.get_num_lines_in_record();\n        line_aggregator.add_line(line_text);\n        let inside_multiline_record_after = line_aggregator.is_inside_multiline_record();\n        if (!inside_multiline_record_before && inside_multiline_record_after) {\n            // Must be an odd-num line, check if this is an openning line - otherwise reset ranges.\n            if (!is_opening_rfc_line(line_text, delim)) {\n                table_ranges = [];\n                line_aggregator.reset();\n            }\n        }\n        if (line_aggregator.has_comment_line) {\n            table_ranges.push({comment_range: new vscode.Range(lnum, 0, lnum, line_text.length)});\n            line_aggregator.reset();\n        } else if (line_aggregator.has_full_record) {\n            const newline_marker = '\\r\\n'; // Use '\\r\\n' here to guarantee that this sequence is not present anywhere in the lines themselves.\n            let combined_line = line_aggregator.get_full_line(newline_marker);\n            line_aggregator.reset();\n            let [fields, warning] = csv_utils.smart_split(combined_line, delim, QUOTED_POLICY, /*preserve_quotes_and_whitespaces=*/true);\n            if (!warning) {\n                table_ranges.push({record_ranges: make_multiline_record_ranges(vscode, delim.length, newline_marker, fields, start_line, lnum)});\n            }\n        }\n    }\n    return table_ranges;\n}\n\n\nfunction parse_document_range_single_line(vscode, doc, delim, policy, comment_prefix, range) {\n    let table_ranges = [];\n    let begin_line = Math.max(0, range.start.line - dynamic_csv_highlight_margin);\n    let end_line = Math.min(doc.lineCount, range.end.line + dynamic_csv_highlight_margin);\n    for (let lnum = begin_line; lnum < end_line; lnum++) {\n        let record_ranges = [];\n        let line_text = doc.lineAt(lnum).text;\n        if (lnum + 1 == doc.lineCount && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            table_ranges.push({comment_range: new vscode.Range(lnum, 0, lnum, line_text.length)});\n            continue;\n        }\n        let split_result = csv_utils.smart_split(line_text, delim, policy, /*preserve_quotes_and_whitespaces=*/true);\n        // TODO consider handling comments and warnings\n        let fields = split_result[0];\n        let cpos = 0;\n        let next_cpos = 0;\n        for (let i = 0; i < fields.length; i++) {\n            next_cpos += fields[i].length;\n            if (i + 1 < fields.length) {\n                next_cpos += delim.length;\n            }\n            record_ranges.push([new vscode.Range(lnum, cpos, lnum, next_cpos)]);\n            // From semantic tokenization perspective the end of token doesn't include the last character of vscode.Range i.e. it treats the range as [) interval, unlike the Range.contains() function which treats ranges as [] intervals.\n            cpos = next_cpos;\n        }\n        table_ranges.push({record_ranges: record_ranges});\n    }\n    return table_ranges;\n}\n\n\nfunction parse_document_range(vscode, doc, delim, policy, comment_prefix, range) {\n    if (policy == QUOTED_RFC_POLICY) {\n        return parse_document_range_rfc(vscode, doc, delim, comment_prefix, range);\n    } else {\n        return parse_document_range_single_line(vscode, doc, delim, policy, comment_prefix, range);\n    }\n}\n\n\nfunction get_field_by_line_position(fields, delim_length, query_pos) {\n    if (!fields.length)\n        return null;\n    var col_num = 0;\n    var cpos = fields[col_num].length + delim_length;\n    while (query_pos > cpos && col_num + 1 < fields.length) {\n        col_num += 1;\n        cpos = cpos + fields[col_num].length + delim_length;\n    }\n    return col_num;\n}\n\n\nfunction get_cursor_position_info_rfc(vscode, document, delim, comment_prefix, position) {\n    const hover_parse_margin = 20;\n    let range = new vscode.Range(Math.max(position.line - hover_parse_margin, 0), 0, position.line + hover_parse_margin, 0);\n    let table_ranges = parse_document_range_rfc(vscode, document, delim, comment_prefix, range);\n    let last_found_position_info = null; // Use last found instead of first found because cursor position at the border can belong to two ranges simultaneously.\n    for (let row_info of table_ranges) {\n        if (row_info.hasOwnProperty('comment_range')) {\n            if (row_info.comment_range.contains(position)) {\n                last_found_position_info = {is_comment: true};\n            }\n        } else {\n            for (let col_num = 0; col_num < row_info.record_ranges.length; col_num++) {\n                // One logical field can map to multiple ranges if it spans multiple lines.\n                for (let record_range of row_info.record_ranges[col_num]) {\n                    if (record_range.contains(position)) {\n                        last_found_position_info = {column_number: col_num, total_columns: row_info.record_ranges.length, split_warning: false};\n                    }\n                }\n            }\n        }\n    }\n    return last_found_position_info;\n}\n\n\nfunction get_cursor_position_info_standard(document, delim, policy, comment_prefix, position) {\n    var lnum = position.line;\n    var cnum = position.character;\n    var line = document.lineAt(lnum).text;\n\n    if (comment_prefix && line.startsWith(comment_prefix))\n        return {is_comment: true};\n\n    let [entries, warning] = csv_utils.smart_split(line, delim, policy, true);\n    var col_num = get_field_by_line_position(entries, delim.length, cnum + 1);\n    if (col_num == null)\n        return null;\n    return {column_number: col_num, total_columns: entries.length, split_warning: warning};\n}\n\n\nfunction get_cursor_position_info(vscode, document, delim, policy, comment_prefix, position) {\n    if (policy === null)\n        return null;\n    if (policy == QUOTED_RFC_POLICY) {\n        return get_cursor_position_info_rfc(vscode, document, delim, comment_prefix, position);\n    } else {\n        return get_cursor_position_info_standard(document, delim, policy, comment_prefix, position);\n    }\n}\n\n\nfunction format_cursor_position_info(cursor_position_info, header, show_column_names, show_comments, max_label_length) {\n    if (cursor_position_info.is_comment) {\n        if (show_comments) {\n            return ['Comment', 'Comment'];\n        } else {\n            return [null, null];\n        }\n    }\n    let short_report = 'Col ' + (cursor_position_info.column_number + 1);\n    let full_report = '[Rainbow CSV] ' + short_report;\n    if (show_column_names && cursor_position_info.column_number < header.length) {\n        let column_label = header[cursor_position_info.column_number].trim();\n        let short_column_label = column_label.substr(0, max_label_length);\n        if (short_column_label != column_label)\n            short_column_label = short_column_label + '...';\n        short_report += ': ' + short_column_label;\n        full_report += ': ' + column_label;\n    }\n    if (cursor_position_info.split_warning) {\n        full_report += '; ERR: Inconsistent double quotes in line';\n    } else if (header.length != cursor_position_info.total_columns) {\n        full_report += `; WARN: Inconsistent num of fields, header: ${header.length}, this line: ${cursor_position_info.total_columns}`;\n    }\n    return [full_report, short_report];\n}\n\n\nfunction sample_records(document, delim, policy, comment_prefix, end_record, preview_window_size, stop_on_warning, cached_table_parse_result) {\n    let records = [];\n    let first_failed_line = null;\n    let vscode_doc_version = null;\n    let [_num_records_parsed, _fields_info, _first_trailing_space_line, _comments] = [null, null, null, null];\n    // Here `preview_window_size` is typically 100.\n    if (end_record < preview_window_size * 5) {\n        // Re-sample the records. Re-sampling top records is fast and it ensures that all manual changes are mirrored into RBQL console.\n        [records, _num_records_parsed, _fields_info, first_failed_line, _first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, stop_on_warning, /*max_records_to_parse=*/end_record, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false);\n    } else {\n        let need_full_doc_parse = true;\n        if (cached_table_parse_result.has(document.fileName)) {\n            [records, first_failed_line, vscode_doc_version] = cached_table_parse_result.get(document.fileName);\n            if (document.version === vscode_doc_version) {\n                need_full_doc_parse = false;\n            }\n        }\n        if (need_full_doc_parse) {\n            let [records, _num_records_parsed, _fields_info, first_failed_line, _first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(document, delim, policy, comment_prefix, stop_on_warning, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/false);\n            cached_table_parse_result.set(document.fileName, [records, first_failed_line, document.version]);\n        }\n        [records, first_failed_line, vscode_doc_version] = cached_table_parse_result.get(document.fileName);\n    }\n    return [records, first_failed_line];\n}\n\n\nfunction sample_preview_records_from_context(rbql_context, dst_message, preview_window_size, cached_table_parse_result) {\n    let [document, delim, policy, comment_prefix] = [rbql_context.input_document, rbql_context.delim, rbql_context.policy, rbql_context.comment_prefix];\n    rbql_context.requested_start_record = Math.max(rbql_context.requested_start_record, 0);\n    let stop_on_warning = policy == QUOTED_RFC_POLICY;\n    let [records, first_failed_line] = sample_records(document, delim, policy, comment_prefix, rbql_context.requested_start_record + preview_window_size, preview_window_size, stop_on_warning, cached_table_parse_result);;\n    if (first_failed_line !== null && policy == QUOTED_RFC_POLICY) {\n        dst_message.preview_sampling_error = `Double quotes are not consistent in record ${records.length + 1} which starts at line ${first_failed_line + 1}`;\n        return;\n    }\n    rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, records.length - preview_window_size));\n    let preview_records = records.slice(rbql_context.requested_start_record, rbql_context.requested_start_record + preview_window_size);\n\n    // Here we trim excessively long fields. The only benefit of doing is here instead of UI layer is to minimize the ammount of traffic that we send to UI - the total message size is limited.\n    for (let r = 0; r < preview_records.length; r++) {\n        let cur_record = preview_records[r];\n        for (let c = 0; c < cur_record.length; c++) {\n            if (cur_record[c].length > max_preview_field_length) {\n                cur_record[c] = cur_record[c].substr(0, max_preview_field_length) + '###UI_STRING_TRIM_MARKER###';\n            }\n        }\n    }\n    dst_message.preview_records = preview_records;\n    dst_message.actual_start_record = rbql_context.requested_start_record;\n}\n\n\nfunction show_lint_status_bar_button(vscode, extension_context, file_path, language_id) {\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!extension_context.lint_results.has(lint_cache_key))\n        return;\n    var lint_report = extension_context.lint_results.get(lint_cache_key);\n    if (!extension_context.lint_status_bar_button)\n        extension_context.lint_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    extension_context.lint_status_bar_button.text = 'CSVLint';\n    let lint_report_msg = '';\n    if (lint_report.is_processing) {\n        extension_context.lint_status_bar_button.color = '#A0A0A0';\n        lint_report_msg = 'Processing';\n    } else if (Number.isInteger(lint_report.first_defective_line)) {\n        lint_report_msg = `Error. Line ${lint_report.first_defective_line} has formatting error: double quote chars are not consistent`;\n        extension_context.lint_status_bar_button.color = '#f44242';\n    } else if (lint_report.fields_info && lint_report.fields_info.size > 1) {\n        let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(lint_report.fields_info);\n        lint_report_msg = `Error. Number of fields is not consistent: e.g. record ${record_num_1 + 1} has ${num_fields_1} fields, and record ${record_num_2 + 1} has ${num_fields_2} fields`;\n        extension_context.lint_status_bar_button.color = '#f44242';\n    } else if (Number.isInteger(lint_report.first_trailing_space_line)) {\n        lint_report_msg = `Leading/Trailing spaces detected: e.g. at line ${lint_report.first_trailing_space_line + 1}. Run \"Shrink\" command to remove them`;\n        extension_context.lint_status_bar_button.color = '#ffff28';\n    } else {\n        assert(lint_report.is_ok);\n        extension_context.lint_status_bar_button.color = '#62f442';\n        lint_report_msg = 'OK';\n    }\n    extension_context.lint_status_bar_button.tooltip = lint_report_msg + '\\nClick to recheck';\n    extension_context.lint_status_bar_button.command = 'rainbow-csv.CSVLint';\n    extension_context.lint_status_bar_button.show();\n}\n\n\nfunction generate_column_edit_selections(vscode, active_doc, delim, policy, comment_prefix, edit_mode, col_num) {\n    let [records, _num_records_parsed, _fields_info, first_defective_line, _first_trailing_space_line, comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/true, /*preserve_quotes_and_whitespaces=*/true);\n    if (first_defective_line !== null) {\n        return [null, `Unable to enter column edit mode: quoting error at line ${first_defective_line + 1}`, null];\n    }\n    if (records.length + comments.length != active_doc.lineCount) {\n        // It is possible to support editing of non-multiline columns in such files, but for simplicity we won't do this.\n        return [null, 'Column edit mode is not supported for files with multiline fields', null];\n    }\n    let lnum = 0;\n    let selections = [];\n    let warning_msg = null;\n    let merger = new RecordCommentMerger(records, comments);\n    while (merger.has_entries_left()) {\n        let [record, comment] = merger.get_next();\n        assert((comment === null) != (record === null));\n        if (record !== null) {\n            if (col_num >= record.length) {\n                return [null, `Line ${lnum + 1} doesn't have field number ${col_num + 1}`, null];\n            }\n            let char_pos_before = record.slice(0, col_num).join('').length + col_num * delim.length;\n            let char_pos_after = record.slice(0, col_num + 1).join('').length + col_num * delim.length;\n            let line_text = record.join(delim);\n            if (!warning_msg && edit_mode == 'ce_before' && (policy == QUOTED_POLICY || policy == QUOTED_RFC_POLICY) && line_text.substring(char_pos_before - 2, char_pos_before + 2).indexOf('\"') != -1) {\n                warning_msg = `Be careful, cursor at line ${lnum + 1} has a double quote is in proximity.`;\n            }\n            if (!warning_msg && edit_mode == 'ce_after' && (policy == QUOTED_POLICY || policy == QUOTED_RFC_POLICY) && line_text.substring(char_pos_after - 2, char_pos_after + 2).indexOf('\"') != -1) {\n                warning_msg = `Be careful, cursor at line ${lnum + 1} has a double quote is in proximity.`;\n            }\n            if (!warning_msg && edit_mode == 'ce_select' && char_pos_before == char_pos_after) {\n                warning_msg = `Be careful, Field ${col_num + 1} at line ${lnum + 1} is empty.`;\n            }\n            let position_before = new vscode.Position(lnum, char_pos_before);\n            let position_after = new vscode.Position(lnum, char_pos_after);\n            if (edit_mode == 'ce_before') {\n                selections.push(new vscode.Selection(position_before, position_before));\n            }\n            if (edit_mode == 'ce_after') {\n                selections.push(new vscode.Selection(position_after, position_after));\n            }\n            if (edit_mode == 'ce_select') {\n                selections.push(new vscode.Selection(position_before, position_after));\n            }\n        }\n        lnum += 1;\n    }\n    return [selections, null, warning_msg];\n}\n\n\nmodule.exports.make_table_name_key = make_table_name_key;\nmodule.exports.find_table_path = find_table_path;\nmodule.exports.read_header = read_header;\nmodule.exports.rbql_query_web = rbql_query_web;\nmodule.exports.rbql_query_node = rbql_query_node;\nmodule.exports.get_header_line = get_header_line;\nmodule.exports.get_default_js_udf_content = get_default_js_udf_content;\nmodule.exports.get_default_python_udf_content = get_default_python_udf_content;\nmodule.exports.align_columns = align_columns;\nmodule.exports.shrink_columns = shrink_columns;\nmodule.exports.calc_column_stats = calc_column_stats;\nmodule.exports.adjust_column_stats = adjust_column_stats;\nmodule.exports.update_subcomponent_stats = update_subcomponent_stats;\nmodule.exports.align_field = align_field;\nmodule.exports.rfc_align_field = rfc_align_field;\nmodule.exports.assert = assert;\nmodule.exports.get_field_by_line_position = get_field_by_line_position;\nmodule.exports.get_cursor_position_info = get_cursor_position_info;\nmodule.exports.format_cursor_position_info = format_cursor_position_info;\nmodule.exports.parse_document_range = parse_document_range;\nmodule.exports.sample_preview_records_from_context = sample_preview_records_from_context;\nmodule.exports.parse_document_range_rfc = parse_document_range_rfc; // Only for unit tests.\nmodule.exports.sample_first_two_inconsistent_records = rbql.sample_first_two_inconsistent_records;\nmodule.exports.is_opening_rfc_line = is_opening_rfc_line; // Only for unit tests.\nmodule.exports.show_lint_status_bar_button = show_lint_status_bar_button;\nmodule.exports.get_cursor_position_if_unambiguous = get_cursor_position_if_unambiguous;\nmodule.exports.RecordCommentMerger = RecordCommentMerger;\nmodule.exports.generate_column_edit_selections = generate_column_edit_selections;\n","let field_regular_expression = '\"((?:[^\"]*\"\")*[^\"]*)\"';\nlet field_rgx = new RegExp('^' + field_regular_expression);\nlet field_rgx_external_whitespaces = new RegExp('^ *' + field_regular_expression + ' *');\n\n\n// TODO consider making this file (and rbql.js) both node and browser compatible: https://caolan.org/posts/writing_for_node_and_the_browser.html\n\n\nfunction split_lines(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\nfunction extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result) {\n    var warning = false;\n    let src_cur = src.substring(cidx);\n    let rgx = allow_external_whitespaces ? field_rgx_external_whitespaces : field_rgx;\n    let match_obj = rgx.exec(src_cur);\n    if (match_obj !== null) {\n        let match_end = match_obj[0].length;\n        if (cidx + match_end == src.length || src[cidx + match_end] == dlm) {\n            if (preserve_quotes_and_whitespaces) {\n                result.push(match_obj[0]);\n            } else {\n                result.push(match_obj[1].replace(/\"\"/g, '\"'));\n            }\n            return [cidx + match_end + 1, false];\n        }\n        warning = true;\n    }\n    var uidx = src.indexOf(dlm, cidx);\n    if (uidx == -1)\n        uidx = src.length;\n    var field = src.substring(cidx, uidx);\n    warning = warning || field.indexOf('\"') != -1;\n    result.push(field);\n    return [uidx + 1, warning];\n}\n\n\nfunction split_quoted_str(src, dlm, preserve_quotes_and_whitespaces=false) {\n    // This function is newline-agnostic i.e. it can also split records with multiline fields.\n    if (src.indexOf('\"') == -1) // Optimization for most common case\n        return [src.split(dlm), false];\n    var result = [];\n    var cidx = 0;\n    var warning = false;\n    let allow_external_whitespaces = dlm != ' ';\n    while (cidx < src.length) {\n        var extraction_report = extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result);\n        cidx = extraction_report[0];\n        warning = warning || extraction_report[1];\n    }\n    if (src.charAt(src.length - 1) == dlm)\n        result.push('');\n    return [result, warning];\n}\n\n\nfunction quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction rfc_quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1 || src.indexOf('\\n') != -1 || src.indexOf('\\r') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction unquote_field(field) {\n    let rgx = new RegExp('^' + ' *' + field_regular_expression + ' *$');\n    let match_obj = rgx.exec(field);\n    if (match_obj !== null) {\n        return match_obj[1].replace(/\"\"/g, '\"');\n    }\n    return field;\n}\n\n\nfunction unquote_fields(fields) {\n    return fields.map(unquote_field);\n}\n\n\nfunction split_whitespace_separated_str(src, preserve_whitespaces=false) {\n    var rgxp = preserve_whitespaces ? new RegExp(' *[^ ]+ *', 'g') : new RegExp('[^ ]+', 'g');\n    let result = [];\n    let match_obj = null;\n    while((match_obj = rgxp.exec(src)) !== null) {\n        result.push(match_obj[0]);\n    }\n    if (preserve_whitespaces) {\n        for (let i = 0; i < result.length - 1; i++) {\n            result[i] = result[i].slice(0, -1);\n        }\n    }\n    return result;\n}\n\n\nfunction smart_split(src, dlm, policy, preserve_quotes_and_whitespaces) {\n    if (policy === 'simple')\n        return [src.split(dlm), false];\n    if (policy === 'whitespace')\n        return [split_whitespace_separated_str(src, preserve_quotes_and_whitespaces), false];\n    if (policy === 'monocolumn')\n        return [[src], false];\n    return split_quoted_str(src, dlm, preserve_quotes_and_whitespaces);\n}\n\n\nclass MultilineRecordAggregator {\n    constructor(comment_prefix) {\n        this.comment_prefix = comment_prefix;\n        this.reset();\n    }\n    add_line(line_text) {\n        if (this.has_full_record || this.has_comment_line) {\n            throw new Error('Invalid usage - record aggregator must be reset before adding new lines');\n        }\n        if (this.comment_prefix && this.rfc_line_buffer.length == 0 && line_text.startsWith(this.comment_prefix)) {\n            this.has_comment_line = true;\n            return false;\n        }\n        let match_list = line_text.match(/\"/g);\n        let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n        this.rfc_line_buffer.push(line_text);\n        this.has_full_record = (!has_unbalanced_double_quote && this.rfc_line_buffer.length == 1) || (has_unbalanced_double_quote && this.rfc_line_buffer.length > 1);\n        return this.has_full_record;\n    }\n    is_inside_multiline_record() {\n        return this.rfc_line_buffer.length && !this.has_full_record;\n    }\n    get_full_line(line_separator) {\n        return this.rfc_line_buffer.join(line_separator);\n    }\n    get_num_lines_in_record() {\n        return this.rfc_line_buffer.length;\n    }\n    reset() {\n        this.rfc_line_buffer = [];\n        this.has_full_record = false;\n        this.has_comment_line = false;\n    }\n}\n\n\nmodule.exports.split_quoted_str = split_quoted_str;\nmodule.exports.split_whitespace_separated_str = split_whitespace_separated_str;\nmodule.exports.smart_split = smart_split;\nmodule.exports.quote_field = quote_field;\nmodule.exports.rfc_quote_field = rfc_quote_field;\nmodule.exports.unquote_field = unquote_field;\nmodule.exports.unquote_fields = unquote_fields;\nmodule.exports.split_lines = split_lines;\nmodule.exports.MultilineRecordAggregator = MultilineRecordAggregator;\n","(function(exports){\n// The magic line above is to make the module both browser and Node compatible, see https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\n\n// This module works with records only. It is CSV-agnostic.\n// Do not add CSV-related logic or variables/functions/objects like \"delim\", \"separator\" etc\n\n\nclass RbqlParsingError extends Error {}\nclass RbqlRuntimeError extends Error {}\nclass AssertionError extends Error {}\nclass RbqlIOHandlingError extends Error {}\n\n\nclass InternalBadFieldError extends Error {\n    constructor(bad_idx, ...params) {\n        super(...params);\n        this.bad_idx = bad_idx;\n    }\n}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction replace_all(src, search, replacement) {\n    return src.split(search).join(replacement);\n}\n\n\nclass RBQLContext {\n    constructor(query_text, input_iterator, output_writer, user_init_code) {\n        this.query_text = query_text;\n        this.input_iterator = input_iterator;\n        this.writer = output_writer;\n        this.user_init_code = user_init_code;\n\n        this.unnest_list = null;\n        this.top_count = null;\n\n        this.like_regex_cache = new Map();\n\n        this.sort_key_expression = null;\n\n        this.aggregation_stage = 0;\n        this.aggregation_key_expression = null;\n        this.functional_aggregators = [];\n\n        this.join_map_impl = null;\n        this.join_map = null;\n        this.lhs_join_var_expression = null;\n\n        this.where_expression = null;\n\n        this.select_expression = null;\n\n        this.update_expressions = null;\n\n        this.variables_init_code = null;\n    }\n}\n\nvar query_context = null; // Needs to be global for MIN(), MAX(), etc functions. TODO find a way to make it local.\n\n\nconst wrong_aggregation_usage_error = 'Usage of RBQL aggregation functions inside JavaScript expressions is not allowed, see the docs';\nconst RBQL_VERSION = '0.27.0';\n\n\nfunction check_if_brackets_match(opening_bracket, closing_bracket) {\n    return (opening_bracket == '[' && closing_bracket == ']') || (opening_bracket == '(' && closing_bracket == ')') || (opening_bracket == '{' && closing_bracket == '}');\n}\n\n\nfunction parse_root_bracket_level_text_spans(select_expression) {\n    let text_spans = []; // parts of text separated by commas at the root parenthesis level\n    let last_pos = 0;\n    let bracket_stack = [];\n    for (let i = 0; i < select_expression.length; i++) {\n        let cur_char = select_expression[i];\n        if (cur_char == ',' && bracket_stack.length == 0) {\n            text_spans.push(select_expression.substring(last_pos, i));\n            last_pos = i + 1;\n        } else if (['[', '{', '('].indexOf(cur_char) != -1) {\n            bracket_stack.push(cur_char);\n        } else if ([']', '}', ')'].indexOf(cur_char) != -1) {\n            if (bracket_stack.length && check_if_brackets_match(bracket_stack[bracket_stack.length - 1], cur_char)) {\n                bracket_stack.pop();\n            } else {\n                throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching opening bracket for closing \"${cur_char}\"`);\n            }\n        }\n    }\n    if (bracket_stack.length) {\n        throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching closing bracket for opening \"${bracket_stack[0]}\"`);\n    }\n    text_spans.push(select_expression.substring(last_pos, select_expression.length));\n    text_spans = text_spans.map(span => span.trim());\n    return text_spans;\n}\n\n\nfunction unquote_string(quoted_str) {\n    // It's possible to use eval here to unqoute the quoted_column_name, but it would be a little barbaric, let's do it manually instead\n    if (!quoted_str || quoted_str.length < 2)\n        return null;\n    if (quoted_str[0] == \"'\" && quoted_str[quoted_str.length - 1] == \"'\") {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\");\n    } else if (quoted_str[0] == '\"' && quoted_str[quoted_str.length - 1] == '\"') {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n        return null;\n    }\n}\n\n\nfunction column_info_from_text_span(text_span, string_literals) {\n    // This function is a rough equivalent of \"column_info_from_node()\" function in python version of RBQL\n    text_span = text_span.trim();\n    let rbql_star_marker = '__RBQL_INTERNAL_STAR';\n    let simple_var_match = /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(text_span);\n    let attribute_match = /^([ab])\\.([_a-zA-Z][_a-zA-Z0-9]*)$/.exec(text_span);\n    let subscript_int_match = /^([ab])\\[([0-9]+)\\]$/.exec(text_span);\n    let subscript_str_match = /^([ab])\\[___RBQL_STRING_LITERAL([0-9]+)___\\]$/.exec(text_span);\n    let as_alias_match = /^(.*) (as|AS) +([a-zA-Z][a-zA-Z0-9_]*) *$/.exec(text_span);\n    if (as_alias_match !== null) {\n        return {table_name: null, column_index: null, column_name: null, is_star: false, alias_name: as_alias_match[3]};\n    }\n    if (simple_var_match !== null) {\n        if (text_span == rbql_star_marker)\n            return {table_name: null, column_index: null, column_name: null, is_star: true, alias_name: null};\n        if (text_span.startsWith('___RBQL_STRING_LITERAL'))\n            return null;\n        let match = /^([ab])([0-9]+)$/.exec(text_span);\n        if (match !== null) {\n            return {table_name: match[1], column_index: parseInt(match[2]) - 1, column_name: null, is_star: false, alias_name: null};\n        }\n        // Some examples for this branch: NR, NF\n        return {table_name: null, column_index: null, column_name: text_span, is_star: false, alias_name: null};\n    } else if (attribute_match !== null) {\n        let table_name = attribute_match[1];\n        let column_name = attribute_match[2];\n        if (column_name == rbql_star_marker) {\n            return {table_name: table_name, column_index: null, column_name: null, is_star: true, alias_name: null};\n        }\n        return {table_name: null, column_index: null, column_name: column_name, is_star: false, alias_name: null};\n    } else if (subscript_int_match != null) {\n        let table_name = subscript_int_match[1];\n        let column_index = parseInt(subscript_int_match[2]) - 1;\n        return {table_name: table_name, column_index: column_index, column_name: null, is_star: false, alias_name: null};\n    } else if (subscript_str_match != null) {\n        let table_name = subscript_str_match[1];\n        let replaced_string_literal_id = subscript_str_match[2];\n        if (replaced_string_literal_id < string_literals.length) {\n            let quoted_column_name = string_literals[replaced_string_literal_id];\n            let unquoted_column_name = unquote_string(quoted_column_name);\n            if (unquoted_column_name !== null && unquoted_column_name !== undefined) {\n                return {table_name: null, column_index: null, column_name: unquoted_column_name, is_star: false, alias_name: null};\n            }\n        }\n    }\n    return null;\n}\n\n\nfunction adhoc_parse_select_expression_to_column_infos(select_expression, string_literals) {\n    // It is acceptable for the algorithm to provide null column name when it could be theorethically possible to deduce the name.\n    // I.e. this algorithm guarantees precision but doesn't guarantee completeness in all theorethically possible queries.\n    // Although the algorithm should be complete in all practical scenarios, i.e. it should be hard to come up with the query that doesn't produce complete set of column names.\n    // The null column name just means that the output column will be named as col{i}, so the failure to detect the proper column name can be tolerated.\n    // Specifically this function guarantees the following:\n    // 1. The number of column_infos is correct and will match the number of fields in each record in the output - otherwise the exception should be thrown\n    // 2. If column_info at pos j is not null, it is guaranteed to correctly represent that column name in the output\n    let text_spans = parse_root_bracket_level_text_spans(select_expression);\n    let column_infos = text_spans.map(ts => column_info_from_text_span(ts, string_literals));\n    return column_infos;\n}\n\n\nfunction stable_compare(a, b) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n}\n\n\nfunction safe_get(record, idx) {\n    return idx < record.length ? record[idx] : null;\n}\n\n\nfunction safe_join_get(record, idx) {\n    if (idx < record.length) {\n        return record[idx];\n    }\n    throw new InternalBadFieldError(idx);\n}\n\n\nfunction safe_set(record, idx, value) {\n    if (idx < record.length) {\n        record[idx] = value;\n    } else {\n        throw new InternalBadFieldError(idx);\n    }\n}\n\n\nfunction regexp_escape(text) {\n    // From here: https://stackoverflow.com/a/6969486/2898283\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');  // $& means the whole matched text\n}\n\n\nfunction like_to_regex(pattern) {\n    let p = 0;\n    let i = 0;\n    let converted = '';\n    while (i < pattern.length) {\n        if (pattern.charAt(i) == '_' || pattern.charAt(i) == '%') {\n            converted += regexp_escape(pattern.substring(p, i));\n            p = i + 1;\n            if (pattern.charAt(i) == '_') {\n                converted += '.';\n            } else {\n                converted += '.*';\n            }\n        }\n        i += 1;\n    }\n    converted += regexp_escape(pattern.substring(p, i));\n    return '^' + converted + '$';\n}\n\n\nfunction like(text, pattern) {\n    let matcher = query_context.like_regex_cache.get(pattern);\n    if (matcher === undefined) {\n        matcher = new RegExp(like_to_regex(pattern));\n        query_context.like_regex_cache.set(pattern, matcher);\n    }\n    return matcher.test(text);\n}\nconst LIKE = like;\n\n\nclass RBQLAggregationToken {\n    constructor(marker_id, value) {\n        this.marker_id = marker_id;\n        this.value = value;\n    }\n\n    toString() {\n        throw new RbqlParsingError(wrong_aggregation_usage_error);\n    }\n}\n\n\nclass UnnestMarker {}\n\n\nfunction UNNEST(vals) {\n    if (query_context.unnest_list !== null) {\n        // Technically we can support multiple UNNEST's but the implementation/algorithm is more complex and just doesn't worth it\n        throw new RbqlParsingError('Only one UNNEST is allowed per query');\n    }\n    query_context.unnest_list = vals;\n    return new UnnestMarker();\n}\nconst unnest = UNNEST;\nconst Unnest = UNNEST;\nconst UNFOLD = UNNEST; // \"UNFOLD\" is deprecated, just for backward compatibility\n\n\nfunction parse_number(val) {\n    // We can do a more pedantic number test like `/^ *-{0,1}[0-9]+\\.{0,1}[0-9]* *$/.test(val)`, but  user will probably use just Number(val) or parseInt/parseFloat\n    let result = Number(val);\n    if (isNaN(result)) {\n        throw new RbqlRuntimeError(`Unable to convert value \"${val}\" to a number. MIN, MAX, SUM, AVG, MEDIAN and VARIANCE aggregate functions convert their string arguments to numeric values`);\n    }\n    return result;\n}\n\n\nclass MinAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.min(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\n\nclass MaxAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.max(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass SumAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, cur_aggr + val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass AvgAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_cnt = cur_aggr[1];\n            this.stats.set(key, [cur_sum + val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_cnt = cur_aggr[1];\n        var avg = cur_sum / cur_cnt;\n        return avg;\n    }\n}\n\n\nclass VarianceAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, val * val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_sum_sq = cur_aggr[1];\n            var cur_cnt = cur_aggr[2];\n            this.stats.set(key, [cur_sum + val, cur_sum_sq + val * val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_sum_sq = cur_aggr[1];\n        var cur_cnt = cur_aggr[2];\n        var avg_val = cur_sum / cur_cnt;\n        var variance = cur_sum_sq / cur_cnt - avg_val * avg_val;\n        return variance;\n    }\n}\n\n\nclass MedianAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        cur_aggr.sort(function(a, b) { return a - b; });\n        var m = Math.floor(cur_aggr.length / 2);\n        if (cur_aggr.length % 2) {\n            return cur_aggr[m];\n        } else {\n            return (cur_aggr[m - 1] + cur_aggr[m]) / 2.0;\n        }\n    }\n}\n\n\nclass CountAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, 1);\n        } else {\n            this.stats.set(key, cur_aggr + 1);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass ArrayAggAggregator {\n    constructor(post_proc=null) {\n        this.post_proc = post_proc;\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        let cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        let cur_aggr = this.stats.get(key);\n        if (this.post_proc === null)\n            return cur_aggr;\n        return this.post_proc(cur_aggr);\n    }\n}\n\n\nclass ConstGroupVerifier {\n    constructor(output_index) {\n        this.output_index = output_index;\n        this.const_values = new Map();\n    }\n\n    increment(key, value) {\n        var old_value = this.const_values.get(key);\n        if (old_value === undefined) {\n            this.const_values.set(key, value);\n        } else if (old_value != value) {\n            throw new RbqlRuntimeError(`Invalid aggregate expression: non-constant values in output column ${this.output_index + 1}. E.g. \"${old_value}\" and \"${value}\"`);\n        }\n    }\n\n    get_final(key) {\n        return this.const_values.get(key);\n    }\n}\n\n\nfunction init_aggregator(generator_name, val, post_proc=null) {\n    query_context.aggregation_stage = 1;\n    var res = new RBQLAggregationToken(query_context.functional_aggregators.length, val);\n    if (post_proc === null) {\n        query_context.functional_aggregators.push(new generator_name());\n    } else {\n        query_context.functional_aggregators.push(new generator_name(post_proc));\n    }\n    return res;\n}\n\n\nfunction MIN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MinAggregator, val) : val;\n}\nconst min = MIN;\nconst Min = MIN;\n\n\nfunction MAX(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MaxAggregator, val) : val;\n}\nconst max = MAX;\nconst Max = MAX;\n\nfunction COUNT(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(CountAggregator, 1) : 1;\n}\nconst count = COUNT;\nconst Count = COUNT;\n\nfunction SUM(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(SumAggregator, val) : val;\n}\nconst sum = SUM;\nconst Sum = SUM;\n\nfunction AVG(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AvgAggregator, val) : val;\n}\nconst avg = AVG;\nconst Avg = AVG;\n\nfunction VARIANCE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(VarianceAggregator, val) : val;\n}\nconst variance = VARIANCE;\nconst Variance = VARIANCE;\n\nfunction MEDIAN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MedianAggregator, val) : val;\n}\nconst median = MEDIAN;\nconst Median = MEDIAN;\n\nfunction ARRAY_AGG(val, post_proc=null) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(ArrayAggAggregator, val, post_proc) : val;\n}\nconst array_agg = ARRAY_AGG;\nconst FOLD = ARRAY_AGG; // \"FOLD\" is deprecated, just for backward compatibility\n\n\nfunction add_to_set(dst_set, value) {\n    var len_before = dst_set.size;\n    dst_set.add(value);\n    return len_before != dst_set.size;\n}\n\n\nclass TopWriter {\n    constructor(subwriter, top_count) {\n        this.subwriter = subwriter;\n        this.NW = 0;\n        this.top_count = top_count;\n    }\n\n    async write(record) {\n        if (this.top_count !== null && this.NW >= this.top_count)\n            return false;\n        await this.subwriter.write(record);\n        this.NW += 1;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.seen = new Set();\n    }\n\n    async write(record) {\n        if (!add_to_set(this.seen, JSON.stringify(record)))\n            return true;\n        if (!await this.subwriter.write(record))\n            return false;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqCountWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.records = new Map();\n    }\n\n    async write(record) {\n        var key = JSON.stringify(record);\n        var old_val = this.records.get(key);\n        if (old_val) {\n            old_val[0] += 1;\n        } else {\n            this.records.set(key, [1, record]);\n        }\n        return true;\n    }\n\n    async finish() {\n        for (var [key, value] of this.records) {\n            let [count, record] = value;\n            record.unshift(count);\n            if (!await this.subwriter.write(record))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass SortedWriter {\n    constructor(subwriter, reverse_sort) {\n        this.subwriter = subwriter;\n        this.reverse_sort = reverse_sort;\n        this.unsorted_entries = [];\n    }\n\n    async write(stable_entry) {\n        this.unsorted_entries.push(stable_entry);\n        return true;\n    }\n\n    async finish() {\n        var unsorted_entries = this.unsorted_entries;\n        unsorted_entries.sort(stable_compare);\n        if (this.reverse_sort)\n            unsorted_entries.reverse();\n        for (var i = 0; i < unsorted_entries.length; i++) {\n            var entry = unsorted_entries[i];\n            if (!await this.subwriter.write(entry[entry.length - 1]))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass AggregateWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.aggregators = [];\n        this.aggregation_keys = new Set();\n    }\n\n    async finish() {\n        var all_keys = Array.from(this.aggregation_keys);\n        all_keys.sort();\n        for (var i = 0; i < all_keys.length; i++) {\n            var key = all_keys[i];\n            var out_fields = [];\n            for (var ag of this.aggregators) {\n                out_fields.push(ag.get_final(key));\n            }\n            if (!await this.subwriter.write(out_fields))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass InnerJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        return this.join_map.get_join_records(lhs_key);\n    }\n}\n\n\nclass LeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n        this.null_record = [[null, join_map.max_record_len, Array(join_map.max_record_len).fill(null)]];\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length == 0) {\n            return this.null_record;\n        }\n        return result;\n    }\n}\n\n\nclass StrictLeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length != 1) {\n            throw new RbqlRuntimeError('In \"STRICT LEFT JOIN\" each key in A must have exactly one match in B. Bad A key: \"' + lhs_key + '\"');\n        }\n        return result;\n    }\n}\n\n\nfunction select_except(src, except_fields) {\n    let result = [];\n    for (let i = 0; i < src.length; i++) {\n        if (except_fields.indexOf(i) == -1)\n            result.push(src[i]);\n    }\n    return result;\n}\n\n\nasync function select_simple(sort_key, NR, out_fields) {\n    if (query_context.sort_key_expression !== null) {\n        var sort_entry = sort_key.concat([NR, out_fields]);\n        if (!await query_context.writer.write(sort_entry))\n            return false;\n    } else {\n        if (!await query_context.writer.write(out_fields))\n            return false;\n    }\n    return true;\n}\n\n\nfunction select_aggregated(key, transparent_values) {\n    if (key !== null) {\n        key = JSON.stringify(key);\n    }\n    if (query_context.aggregation_stage === 1) {\n        if (!(query_context.writer instanceof TopWriter)) {\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        }\n        query_context.writer = new AggregateWriter(query_context.writer);\n        let num_aggregators_found = 0;\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            if (trans_value instanceof RBQLAggregationToken) {\n                query_context.writer.aggregators.push(query_context.functional_aggregators[trans_value.marker_id]);\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value.value);\n                num_aggregators_found += 1;\n            } else {\n                query_context.writer.aggregators.push(new ConstGroupVerifier(query_context.writer.aggregators.length));\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value);\n            }\n        }\n        if (num_aggregators_found != query_context.functional_aggregators.length) {\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        }\n        query_context.aggregation_stage = 2;\n    } else {\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            query_context.writer.aggregators[i].increment(key, trans_value);\n        }\n    }\n    query_context.writer.aggregation_keys.add(key);\n}\n\n\nasync function select_unnested(sort_key, NR, folded_fields) {\n    let out_fields = folded_fields.slice();\n    let unnest_pos = folded_fields.findIndex(val => val instanceof UnnestMarker);\n    for (var i = 0; i < query_context.unnest_list.length; i++) {\n        out_fields[unnest_pos] = query_context.unnest_list[i];\n        if (!await select_simple(sort_key, NR, out_fields.slice()))\n            return false;\n    }\n    return true;\n}\n\n\nconst PROCESS_SELECT_COMMON = `\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    let out_fields = __RBQLMP__select_expression;\n    if (query_context.aggregation_stage > 0) {\n        let key = __RBQLMP__aggregation_key_expression;\n        select_aggregated(key, out_fields);\n    } else {\n        let sort_key = [__RBQLMP__sort_key_expression];\n        if (query_context.unnest_list !== null) {\n            if (!await select_unnested(sort_key, NR, out_fields))\n                stop_flag = true;\n        } else {\n            if (!await select_simple(sort_key, NR, out_fields))\n                stop_flag = true;\n        }\n    }\n}\n`;\n\n\nconst PROCESS_SELECT_SIMPLE = `\nlet star_fields = record_a;\n__CODE__\n`;\n\n\nconst PROCESS_SELECT_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nfor (let join_match of join_matches) {\n    let [bNR, bNF, record_b] = join_match;\n    let star_fields = record_a.concat(record_b);\n    __CODE__\n    if (stop_flag)\n        break;\n}\n`;\n\n\nconst PROCESS_UPDATE_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nif (join_matches.length > 1)\n    throw new RbqlRuntimeError('More than one record in UPDATE query matched a key from the input table in the join table');\nlet record_b = null;\nlet bNR = null;\nlet bNF = null;\nif (join_matches.length == 1)\n    [bNR, bNF, record_b] = join_matches[0];\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (join_matches.length == 1 && (__RBQLMP__where_expression)) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst PROCESS_UPDATE_SIMPLE = `\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst MAIN_LOOP_BODY = `\n__USER_INIT_CODE__\n\nlet NU = 0;\nlet NR = 0;\n\nlet stop_flag = false;\nwhile (!stop_flag) {\n    let record_a = await query_context.input_iterator.get_record();\n    if (record_a === null)\n        break;\n    NR += 1;\n    let NF = record_a.length;\n    query_context.unnest_list = null; // TODO optimize, don't need to set this every iteration\n    try {\n        __CODE__\n    } catch (e) {\n        if (e.constructor.name === 'InternalBadFieldError') {\n            throw new RbqlRuntimeError(\\`No \"a\\${e.bad_idx + 1}\" field at record \\${NR}\\`);\n        } else if (e.constructor.name === 'RbqlParsingError') {\n            throw(e);\n        } else {\n            throw new RbqlRuntimeError(\\`At record \\${NR}, Details: \\${e.message}\\`);\n        }\n    }\n}\n`;\n\n\nfunction embed_expression(parent_code, child_placeholder, child_expression) {\n    return replace_all(parent_code, child_placeholder, child_expression);\n}\n\n\nfunction embed_code(parent_code, child_placeholder, child_code) {\n    let parent_lines = parent_code.split('\\n');\n    let child_lines = child_code.split('\\n');\n    for (let i = 0; i < parent_lines.length; i++) {\n        let pos = parent_lines[i].indexOf(child_placeholder);\n        if (pos == -1)\n            continue;\n        assert(pos % 4 == 0);\n        let placeholder_indentation = parent_lines[i].substring(0, pos);\n        child_lines = child_lines.map(l => placeholder_indentation + l);\n        let result_lines = parent_lines.slice(0, i).concat(child_lines).concat(parent_lines.slice(i + 1));\n        return result_lines.join('\\n') + '\\n';\n    }\n    assert(false);\n}\n\n\nfunction generate_main_loop_code(query_context) {\n    let is_select_query = query_context.select_expression !== null;\n    let is_join_query = query_context.join_map !== null;\n    let where_expression = query_context.where_expression === null ? 'true' : query_context.where_expression;\n    let aggregation_key_expression = query_context.aggregation_key_expression === null ? 'null' : query_context.aggregation_key_expression;\n    let sort_key_expression = query_context.sort_key_expression === null ? 'null' : query_context.sort_key_expression;\n    let js_code = embed_code(MAIN_LOOP_BODY, '__USER_INIT_CODE__', query_context.user_init_code);\n    if (is_select_query) {\n        if (is_join_query) {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_JOIN), '__CODE__', PROCESS_SELECT_COMMON);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_SIMPLE), '__CODE__', PROCESS_SELECT_COMMON);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_expression(js_code, '__RBQLMP__select_expression', query_context.select_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__aggregation_key_expression', aggregation_key_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__sort_key_expression', sort_key_expression);\n    } else {\n        if (is_join_query) {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_JOIN);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_SIMPLE);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_code(js_code, '__RBQLMP__update_expressions', query_context.update_expressions);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n    }\n    return \"(async () => {\" + js_code + \"})()\";\n}\n\n\nasync function compile_and_run(query_context) {\n    let main_loop_body = generate_main_loop_code(query_context);\n    try {\n        let main_loop_promise = eval(main_loop_body);\n        await main_loop_promise;\n    } catch (e) {\n        if (e instanceof SyntaxError) {\n            // SyntaxError's from eval() function do not contain detailed explanation of what has caused the syntax error, so to guess what was wrong we can only use the original query\n            // v8 issue to fix eval: https://bugs.chromium.org/p/v8/issues/detail?id=2589\n            let lower_case_query = query_context.query_text.toLowerCase();\n            if (lower_case_query.indexOf(' having ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"HAVING\\\" keyword\");\n            if (lower_case_query.indexOf(' like ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"LIKE\\\" operator, use like() function instead e.g. ... WHERE like(a1, 'foo%bar') ... \"); // UT JSON\n            if (lower_case_query.indexOf(' from ') != -1)\n                throw new SyntaxError(e.message + \"\\nTip: If input table is defined by the environment, RBQL query should not have \\\"FROM\\\" keyword\"); // UT JSON\n            if (e && e.message && String(e.message).toLowerCase().indexOf('unexpected identifier') != -1) {\n                if (lower_case_query.indexOf(' and ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'and' keyword in your query?\\nJavaScript backend doesn't support 'and' keyword, use '&&' operator instead!\");\n                if (lower_case_query.indexOf(' or ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'or' keyword in your query?\\nJavaScript backend doesn't support 'or' keyword, use '||' operator instead!\");\n            }\n        }\n        if (e && e.message && e.message.indexOf('Received an instance of RBQLAggregationToken') != -1)\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        throw e;\n    }\n}\n\n\nconst GROUP_BY = 'GROUP BY';\nconst UPDATE = 'UPDATE';\nconst SELECT = 'SELECT';\nconst JOIN = 'JOIN';\nconst INNER_JOIN = 'INNER JOIN';\nconst LEFT_JOIN = 'LEFT JOIN';\nconst LEFT_OUTER_JOIN = 'LEFT OUTER JOIN';\nconst STRICT_LEFT_JOIN = 'STRICT LEFT JOIN';\nconst ORDER_BY = 'ORDER BY';\nconst WHERE = 'WHERE';\nconst LIMIT = 'LIMIT';\nconst EXCEPT = 'EXCEPT';\nconst WITH = 'WITH';\n\n\nfunction get_ambiguous_error_msg(variable_name) {\n    return `Ambiguous variable name: \"${variable_name}\" is present both in input and in join tables`;\n}\n\n\nfunction get_all_matches(regexp, text) {\n    var result = [];\n    let match_obj = null;\n    while((match_obj = regexp.exec(text)) !== null) {\n        result.push(match_obj);\n    }\n    return result;\n}\n\n\nfunction str_strip(src) {\n    return src.replace(/^ +| +$/g, '');\n}\n\n\nfunction strip_comments(cline) {\n    cline = cline.trim();\n    if (cline.startsWith('//'))\n        return '';\n    return cline;\n}\n\n\nfunction combine_string_literals(backend_expression, string_literals) {\n    for (var i = 0; i < string_literals.length; i++) {\n        backend_expression = replace_all(backend_expression, `___RBQL_STRING_LITERAL${i}___`, string_literals[i]);\n    }\n    return backend_expression;\n}\n\n\nfunction parse_basic_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}([1-9][0-9]*)(?:$|(?=[^_a-zA-Z0-9]))`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[prefix + String(field_num)] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction parse_array_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[([1-9][0-9]*)\\\\]`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[`${prefix}[${field_num}]`] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction js_string_escape_column_name(column_name, quote_char) {\n    column_name = column_name.replace(/\\\\/g, '\\\\\\\\');\n    column_name = column_name.replace(/\\n/g, '\\\\n');\n    column_name = column_name.replace(/\\r/g, '\\\\r');\n    column_name = column_name.replace(/\\t/g, '\\\\t');\n    if (quote_char === \"'\")\n        return column_name.replace(/'/g, \"\\\\'\");\n    if (quote_char === '\"')\n        return column_name.replace(/\"/g, '\\\\\"');\n    assert(quote_char === \"`\");\n    return column_name.replace(/`/g, \"\\\\`\");\n}\n\n\nfunction query_probably_has_dictionary_variable(query_text, column_name) {\n    let rgx = new RegExp('[-a-zA-Z0-9_:;+=!.,()%^#@&* ]+', 'g');\n    let continuous_name_segments = get_all_matches(rgx, column_name);\n    for (let continuous_segment of continuous_name_segments) {\n        if (query_text.indexOf(continuous_segment) == -1)\n            return false;\n    }\n    return true;\n}\n\n\nfunction parse_dictionary_variables(query_text, prefix, column_names, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    // FIXME to prevent typos in attribute names either use query-based variable parsing which can properly handle back-tick strings or wrap \"a\" and \"b\" variables with ES6 Proxies https://stackoverflow.com/a/25658975/2898283\n    assert(prefix === 'a' || prefix === 'b');\n    let dict_test_rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[`);\n    if (query_text.search(dict_test_rgx) == -1)\n        return;\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if (query_probably_has_dictionary_variable(query_text, column_name)) {\n            let escaped_column_name = js_string_escape_column_name(column_name, '\"');\n            dst_variables_map[`${prefix}[\"${escaped_column_name}\"]`] = {initialize: true, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"'\");\n            dst_variables_map[`${prefix}['${escaped_column_name}']`] = {initialize: false, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"`\");\n            dst_variables_map[`${prefix}[\\`${escaped_column_name}\\`]`] = {initialize: false, index: i};\n        }\n    }\n}\n\n\nfunction parse_attribute_variables(query_text, prefix, column_names, column_names_source, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    assert(prefix === 'a' || prefix === 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\.([_a-zA-Z][_a-zA-Z0-9]*)`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    let column_names_from_query = matches.map(v => v[1]);\n    for (let column_name of column_names_from_query) {\n        let zero_based_idx = column_names.indexOf(column_name);\n        if (zero_based_idx != -1) {\n            dst_variables_map[`${prefix}.${column_name}`] = {initialize: true, index: zero_based_idx};\n        } else {\n            throw new RbqlParsingError(`Unable to find column \"${column_name}\" in ${prefix == 'a' ? 'input' : 'join'} ${column_names_source}`);\n        }\n    }\n}\n\n\nfunction map_variables_directly(query_text, column_names, dst_variables_map) {\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if ( /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(column_name) === null)\n            throw new RbqlIOHandlingError(`Unable to use column name \"${column_name}\" as RBQL/JS variable`);\n        if (query_text.indexOf(column_name) != -1)\n            dst_variables_map[column_name] = {initialize: true, index: i};\n    }\n}\n\n\nfunction ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names) {\n    let join_column_names_set = new Set(join_column_names);\n    for (let column_name of input_column_names) {\n        if (join_column_names_set.has(column_name) && query_text.indexOf(column_name) != -1) // False positive is tolerable here\n            throw new RbqlParsingError(get_ambiguous_error_msg(column_name));\n    }\n}\n\n\nfunction parse_join_expression(src) {\n    src = str_strip(src);\n    const invalid_join_syntax_error = 'Invalid join syntax. Valid syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    let rgx = /^ *([^ ]+) +on +/i;\n    let match = rgx.exec(src);\n    if (match === null)\n        throw new RbqlParsingError(invalid_join_syntax_error);\n    let table_id = match[1];\n    src = src.substr(match[0].length);\n\n    let variable_pairs = [];\n    var pair_rgx = /^([^ =]+) *==? *([^ =]+)/;\n    var and_rgx = /^ +(and|&&) +/i;\n    while (true) {\n        match = pair_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        variable_pairs.push([match[1], match[2]]);\n        src = src.substr(match[0].length);\n        if (!src.length)\n            break;\n        match = and_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        src = src.substr(match[0].length);\n    }\n    return [table_id, variable_pairs];\n}\n\n\nfunction resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals) {\n    let lhs_variables = [];\n    let rhs_indices = [];\n    const valid_join_syntax_msg = 'Valid JOIN syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    for (let variable_pair of variable_pairs) {\n        let [join_var_1, join_var_2] = variable_pair;\n        join_var_1 = combine_string_literals(join_var_1, string_literals);\n        join_var_2 = combine_string_literals(join_var_2, string_literals);\n        if (input_variables_map.hasOwnProperty(join_var_1) && join_variables_map.hasOwnProperty(join_var_1))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_1));\n        if (input_variables_map.hasOwnProperty(join_var_2) && join_variables_map.hasOwnProperty(join_var_2))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_2));\n        if (input_variables_map.hasOwnProperty(join_var_2))\n            [join_var_1, join_var_2] = [join_var_2, join_var_1];\n\n        let [lhs_key_index, rhs_key_index] = [null, null];\n        if (['NR', 'a.NR', 'aNR'].indexOf(join_var_1) != -1) {\n            lhs_key_index = -1;\n        } else if (input_variables_map.hasOwnProperty(join_var_1)) {\n            lhs_key_index = input_variables_map[join_var_1].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Input table does not have field \"${join_var_1}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        if (['b.NR', 'bNR'].indexOf(join_var_2) != -1) {\n            rhs_key_index = -1;\n        } else if (join_variables_map.hasOwnProperty(join_var_2)) {\n            rhs_key_index = join_variables_map[join_var_2].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Join table does not have field \"${join_var_2}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        let lhs_join_var_expression = lhs_key_index == -1 ? 'NR' : `safe_join_get(record_a, ${lhs_key_index})`;\n        rhs_indices.push(rhs_key_index);\n        lhs_variables.push(lhs_join_var_expression);\n    }\n    return [lhs_variables, rhs_indices];\n}\n\n\nfunction generate_common_init_code(query_text, variable_prefix) {\n    assert(variable_prefix == 'a' || variable_prefix == 'b');\n    let result = [];\n    result.push(`${variable_prefix} = new Object();`);\n    let base_var = variable_prefix == 'a' ? 'NR' : 'bNR';\n    let attr_var = `${variable_prefix}.NR`;\n    if (query_text.indexOf(attr_var) != -1)\n        result.push(`${attr_var} = ${base_var};`);\n    if (variable_prefix == 'a' && query_text.indexOf('aNR') != -1)\n        result.push('aNR = NR;');\n    return result;\n}\n\n\nfunction generate_init_statements(query_text, variables_map, join_variables_map, indent) {\n    let code_lines = generate_common_init_code(query_text, 'a');\n    let simple_var_name_rgx = /^[_0-9a-zA-Z]+$/;\n    for (const [variable_name, var_info] of Object.entries(variables_map)) {\n        if (var_info.initialize) {\n            let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n            code_lines.push(`${variable_declaration_keyword}${variable_name} = safe_get(record_a, ${var_info.index});`);\n        }\n    }\n    if (join_variables_map) {\n        code_lines = code_lines.concat(generate_common_init_code(query_text, 'b'));\n        for (const [variable_name, var_info] of Object.entries(join_variables_map)) {\n            if (var_info.initialize) {\n                let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n                code_lines.push(`${variable_declaration_keyword}${variable_name} = record_b === null ? null : safe_get(record_b, ${var_info.index});`);\n            }\n        }\n    }\n    for (let i = 1; i < code_lines.length; i++) {\n        code_lines[i] = indent + code_lines[i];\n    }\n    return code_lines.join('\\n');\n}\n\n\nfunction replace_star_count(aggregate_expression) {\n    var rgx = /(?:(?<=^)|(?<=,)) *COUNT\\( *\\* *\\)/ig;\n    var result = aggregate_expression.replace(rgx, ' COUNT(1)');\n    return str_strip(result);\n}\n\n\nfunction replace_star_vars(rbql_expression) {\n    let star_rgx = /(?:^|,) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = ']).concat(' + {'*': 'star_fields', 'a.*': 'record_a', 'b.*': 'record_b'}[star_expression] + ').concat([';\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length + 1; // Adding one to skip the lookahead comma\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction replace_star_vars_for_header_parsing(rbql_expression) {\n    let star_rgx = /(?:(?<=^)|(?<=,)) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = {'*': '__RBQL_INTERNAL_STAR', 'a.*': 'a.__RBQL_INTERNAL_STAR', 'b.*': 'b.__RBQL_INTERNAL_STAR'}[star_expression];\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length;\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction translate_update_expression(update_expression, input_variables_map, string_literals, indent) {\n    let first_assignment = str_strip(update_expression.split('=')[0]);\n    let first_assignment_error = `Unable to parse \"UPDATE\" expression: the expression must start with assignment, but \"${first_assignment}\" does not look like an assignable field name`;\n\n    let assignment_looking_rgx = /(?:^|,) *(a[.#a-zA-Z0-9\\[\\]_]*) *=(?=[^=])/g;\n    let update_expressions = [];\n    let pos = 0;\n    while (true) {\n        let match = assignment_looking_rgx.exec(update_expression);\n        if (update_expressions.length == 0 && (match === null || match.index != 0)) {\n            throw new RbqlParsingError(first_assignment_error);\n        }\n        if (match === null) {\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substr(pos)) + ');';\n            break;\n        }\n        if (update_expressions.length)\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substring(pos, match.index)) + ');';\n        let dst_var_name = combine_string_literals(str_strip(match[1]), string_literals);\n        if (!input_variables_map.hasOwnProperty(dst_var_name))\n            throw new RbqlParsingError(`Unable to parse \"UPDATE\" expression: Unknown field name: \"${dst_var_name}\"`);\n        let var_index = input_variables_map[dst_var_name].index;\n        let current_indent = update_expressions.length ? indent : '';\n        update_expressions.push(`${current_indent}safe_set(up_fields, ${var_index}, `);\n        pos = match.index + match[0].length;\n    }\n    return combine_string_literals(update_expressions.join('\\n'), string_literals);\n}\n\n\nfunction translate_select_expression(select_expression) {\n    let as_alias_replacement_regexp = / +(AS|as) +([a-zA-Z][a-zA-Z0-9_]*) *(?=$|,)/g;\n    let expression_without_counting_stars = replace_star_count(select_expression);\n    let expression_without_as_column_alias = expression_without_counting_stars.replace(as_alias_replacement_regexp, '');\n    let translated = str_strip(replace_star_vars(expression_without_as_column_alias));\n    let translated_for_header = str_strip(replace_star_vars_for_header_parsing(expression_without_counting_stars));\n    if (!translated.length)\n        throw new RbqlParsingError('\"SELECT\" expression is empty');\n    return [`[].concat([${translated}])`, translated_for_header];\n}\n\n\nfunction separate_string_literals(rbql_expression) {\n    // The regex consists of 3 almost identicall parts, the only difference is quote type\n    var rgx = /('(\\\\(\\\\\\\\)*'|[^'])*')|(\"(\\\\(\\\\\\\\)*\"|[^\"])*\")|(`(\\\\(\\\\\\\\)*`|[^`])*`)/g;\n    var match_obj = null;\n    var format_parts = [];\n    var string_literals = [];\n    var idx_before = 0;\n    while((match_obj = rgx.exec(rbql_expression)) !== null) {\n        var literal_id = string_literals.length;\n        var string_literal = match_obj[0];\n        string_literals.push(string_literal);\n        var start_index = match_obj.index;\n        format_parts.push(rbql_expression.substring(idx_before, start_index));\n        format_parts.push(`___RBQL_STRING_LITERAL${literal_id}___`);\n        idx_before = rgx.lastIndex;\n    }\n    format_parts.push(rbql_expression.substring(idx_before));\n    var format_expression = format_parts.join('');\n    format_expression = format_expression.replace(/\\t/g, ' ');\n    return [format_expression, string_literals];\n}\n\n\nfunction locate_statements(rbql_expression) {\n    let statement_groups = [];\n    statement_groups.push([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN]);\n    statement_groups.push([SELECT]);\n    statement_groups.push([ORDER_BY]);\n    statement_groups.push([WHERE]);\n    statement_groups.push([UPDATE]);\n    statement_groups.push([GROUP_BY]);\n    statement_groups.push([LIMIT]);\n    statement_groups.push([EXCEPT]);\n    var result = [];\n    for (var ig = 0; ig < statement_groups.length; ig++) {\n        for (var is = 0; is < statement_groups[ig].length; is++) {\n            var statement = statement_groups[ig][is];\n            var rgxp = new RegExp('(?:^| )' + replace_all(statement, ' ', ' *') + '(?= )', 'ig');\n            var matches = get_all_matches(rgxp, rbql_expression);\n            if (!matches.length)\n                continue;\n            if (matches.length > 1)\n                throw new RbqlParsingError(`More than one \"${statement}\" statements found`);\n            assert(matches.length == 1);\n            var match = matches[0];\n            var match_str = match[0];\n            result.push([match.index, match.index + match_str.length, statement]);\n            break; // Break to avoid matching a sub-statement from the same group e.g. \"INNER JOIN\" -> \"JOIN\"\n        }\n    }\n    result.sort(function(a, b) { return a[0] - b[0]; });\n    return result;\n}\n\n\nfunction separate_actions(rbql_expression) {\n    rbql_expression = str_strip(rbql_expression);\n    var result = {};\n    let with_match = /^(.*)  *[Ww][Ii][Tt][Hh] *\\(([a-z]{4,20})\\) *$/.exec(rbql_expression);\n    if (with_match !== null) {\n        rbql_expression = with_match[1];\n        result[WITH] = with_match[2];\n    }\n    var ordered_statements = locate_statements(rbql_expression);\n    for (var i = 0; i < ordered_statements.length; i++) {\n        var statement_start = ordered_statements[i][0];\n        var span_start = ordered_statements[i][1];\n        var statement = ordered_statements[i][2];\n        var span_end = i + 1 < ordered_statements.length ? ordered_statements[i + 1][0] : rbql_expression.length;\n        assert(statement_start < span_start);\n        assert(span_start <= span_end);\n        var span = rbql_expression.substring(span_start, span_end);\n        var statement_params = {};\n        if ([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN].indexOf(statement) != -1) {\n            statement_params['join_subtype'] = statement;\n            statement = JOIN;\n        }\n\n        if (statement == UPDATE) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('UPDATE keyword must be at the beginning of the query');\n            span = span.replace(/^ *SET/i, '');\n        }\n\n        if (statement == ORDER_BY) {\n            span = span.replace(/ ASC *$/i, '');\n            var new_span = span.replace(/ DESC *$/i, '');\n            if (new_span != span) {\n                span = new_span;\n                statement_params['reverse'] = true;\n            } else {\n                statement_params['reverse'] = false;\n            }\n        }\n\n        if (statement == SELECT) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('SELECT keyword must be at the beginning of the query');\n            let match = /^ *TOP *([0-9]+) /i.exec(span);\n            if (match !== null) {\n                statement_params['top'] = parseInt(match[1]);\n                span = span.substr(match.index + match[0].length);\n            }\n            match = /^ *DISTINCT *(COUNT)? /i.exec(span);\n            if (match !== null) {\n                statement_params['distinct'] = true;\n                if (match[1]) {\n                    statement_params['distinct_count'] = true;\n                }\n                span = span.substr(match.index + match[0].length);\n            }\n        }\n        statement_params['text'] = str_strip(span);\n        result[statement] = statement_params;\n    }\n    if (!result.hasOwnProperty(SELECT) && !result.hasOwnProperty(UPDATE)) {\n        throw new RbqlParsingError('Query must contain either SELECT or UPDATE statement');\n    }\n    assert(result.hasOwnProperty(SELECT) != result.hasOwnProperty(UPDATE));\n    return result;\n}\n\n\nfunction find_top(rb_actions) {\n    if (rb_actions.hasOwnProperty(LIMIT)) {\n        var rgx = /^[0-9]+$/;\n        if (rgx.exec(rb_actions[LIMIT]['text']) === null) {\n            throw new RbqlParsingError('LIMIT keyword must be followed by an integer');\n        }\n        var result = parseInt(rb_actions[LIMIT]['text']);\n        return result;\n    }\n    var select_action = rb_actions[SELECT];\n    if (select_action && select_action.hasOwnProperty('top')) {\n        return select_action['top'];\n    }\n    return null;\n}\n\n\nfunction translate_except_expression(except_expression, input_variables_map, string_literals, input_header) {\n    let skip_vars = except_expression.split(',');\n    skip_vars = skip_vars.map(str_strip);\n    let skip_indices = [];\n    for (let var_name of skip_vars) {\n        var_name = combine_string_literals(var_name, string_literals);\n        if (!input_variables_map.hasOwnProperty(var_name))\n            throw new RbqlParsingError(`Unknown field in EXCEPT expression: \"${var_name}\"`);\n        skip_indices.push(input_variables_map[var_name].index);\n    }\n    skip_indices = skip_indices.sort((a, b) => a - b);\n    let output_header = input_header === null ? null : select_except(input_header, skip_indices);\n    let indices_str = skip_indices.join(',');\n    return [output_header, `select_except(record_a, [${indices_str}])`];\n}\n\n\nclass HashJoinMap {\n    constructor(record_iterator, key_indices) {\n        this.max_record_len = 0;\n        this.hash_map = new Map();\n        this.record_iterator = record_iterator;\n        this.nr = 0;\n        if (key_indices.length == 1) {\n            this.key_index = key_indices[0];\n            this.key_indices = null;\n            this.polymorphic_get_key = this.get_single_key;\n        } else {\n            this.key_index = null;\n            this.key_indices = key_indices;\n            this.polymorphic_get_key = this.get_multi_key;\n        }\n    }\n\n    get_single_key(nr, fields) {\n        if (this.key_index >= fields.length)\n            throw new RbqlRuntimeError(`No field with index ${this.key_index + 1} at record ${this.nr} in \"B\" table`);\n        return this.key_index === -1 ? this.nr : fields[this.key_index];\n    };\n\n    get_multi_key(nr, fields) {\n        let result = [];\n        for (let ki of this.key_indices) {\n            if (ki >= fields.length)\n                throw new RbqlRuntimeError(`No field with index ${ki + 1} at record ${this.nr} in \"B\" table`);\n            result.push(ki === -1 ? this.nr : fields[ki]);\n        }\n        return JSON.stringify(result);\n    };\n\n    async build() {\n        while (true) {\n            let fields = await this.record_iterator.get_record();\n            if (fields === null)\n                break;\n            this.nr += 1;\n            let nf = fields.length;\n            this.max_record_len = Math.max(this.max_record_len, nf);\n            let key = this.polymorphic_get_key(this.nr, fields);\n            let key_records = this.hash_map.get(key);\n            if (key_records === undefined) {\n                this.hash_map.set(key, [[this.nr, nf, fields]]);\n            } else {\n                key_records.push([this.nr, nf, fields]);\n            }\n        }\n    };\n\n    get_join_records(key) {\n        let result = this.hash_map.get(key);\n        if (result === undefined)\n            return [];\n        return result;\n    };\n\n    get_warnings() {\n        return this.record_iterator.get_warnings();\n    };\n}\n\n\nfunction cleanup_query(query_text) {\n    return query_text.split('\\n').map(strip_comments).filter(line => line.length).join(' ').replace(/;+$/g, '');\n}\n\n\nfunction remove_redundant_table_name(query_text) {\n    query_text = str_strip(query_text.replace(/ +from +a(?: +|$)/gi, ' '));\n    query_text = str_strip(query_text.replace(/^ *update +a +set /gi, 'update '));\n    return query_text;\n}\n\n\nfunction select_output_header(input_header, join_header, query_column_infos) {\n    if (input_header === null) {\n        assert(join_header === null);\n    }\n    let query_has_star = false;\n    let query_has_column_alias = false;\n    for (let qci of query_column_infos) {\n        query_has_star = query_has_star || (qci !== null && qci.is_star);\n        query_has_column_alias = query_has_column_alias || (qci !== null && qci.alias_name !== null);\n    }\n    if (input_header === null) {\n        if (query_has_star && query_has_column_alias) {\n            throw new RbqlParsingError('Using both * (star) and AS alias in the same query is not allowed for input tables without header');\n        }\n        if (!query_has_column_alias) {\n            // Input table has no header and query has no aliases therefore the output table will be without header.\n            return null;\n        }\n        input_header = [];\n        join_header = [];\n    }\n    if (join_header === null) {\n        // This means there is no JOIN table.\n        join_header = [];\n    }\n    let output_header = [];\n    for (let qci of query_column_infos) {\n        // TODO refactor this and python version: extract this code into a function instead to always return something\n        if (qci === null) {\n            output_header.push('col' + (output_header.length + 1));\n        } else if (qci.is_star) {\n            if (qci.table_name === null) {\n                output_header = output_header.concat(input_header).concat(join_header);\n            } else if (qci.table_name === 'a') {\n                output_header = output_header.concat(input_header);\n            } else if (qci.table_name === 'b') {\n                output_header = output_header.concat(join_header);\n            }\n        } else if (qci.column_name !== null) {\n            output_header.push(qci.column_name);\n        } else if (qci.alias_name !== null) {\n            output_header.push(qci.alias_name);\n        } else if (qci.column_index !== null) {\n            if (qci.table_name == 'a' && qci.column_index < input_header.length) {\n                output_header.push(input_header[qci.column_index]);\n            } else if (qci.table_name == 'b' && qci.column_index < join_header.length) {\n                output_header.push(join_header[qci.column_index]);\n            } else {\n                output_header.push('col' + (output_header.length + 1));\n            }\n        } else { // Should never happen\n            output_header.push('col' + (output_header.length + 1));\n        }\n    }\n    return output_header;\n}\n\n\nfunction sample_first_two_inconsistent_records(inconsistent_records_info) {\n    let entries = Array.from(inconsistent_records_info.entries());\n    entries.sort(function(a, b) { return a[1] - b[1]; });\n    assert(entries.length > 1);\n    let [num_fields_1, record_num_1] = entries[0];\n    let [num_fields_2, record_num_2] = entries[1];\n    return [record_num_1, num_fields_1, record_num_2, num_fields_2];\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1} -> ${num_fields_1} fields, record ${record_num_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RBQLInputIterator {\n    constructor(){}\n    stop() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_variables_map(query_text) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_record() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    handle_query_modifier() {\n        return; // Reimplement if you need to handle a boolean query modifier that can be used like this: `SELECT * WITH (modifiername)`\n    }\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    }\n    async get_header() {\n        return null; // Reimplement if your class can provide input header\n    }\n}\n\n\nclass RBQLOutputWriter {\n    constructor(){}\n\n    async write(fields) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    async finish() {\n        // Reimplement if your class needs to do something on finish e.g. cleanup\n    };\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n\n    set_header() {\n        return; // Reimplement if your class can handle output headers in a meaningful way\n    }\n}\n\n\nclass RBQLTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(table_id) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n}\n\n\nclass TableIterator extends RBQLInputIterator {\n    constructor(table, column_names=null, normalize_column_names=true, variable_prefix='a') {\n        super();\n        this.table = table;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n        this.variable_prefix = variable_prefix;\n        this.nr = 0;\n        this.fields_info = new Map();\n        this.stopped = false;\n    }\n\n\n    stop() {\n        this.stopped = true;\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.column_names !== null) {\n            if (this.table.length && this.column_names.length != this.table[0].length)\n                throw new RbqlIOHandlingError('List of column names and table records have different lengths');\n            if (this.normalize_column_names) {\n                parse_dictionary_variables(query_text, this.variable_prefix, this.column_names, variable_map);\n                parse_attribute_variables(query_text, this.variable_prefix, this.column_names, 'column names list', variable_map);\n            } else {\n                map_variables_directly(query_text, this.column_names, variable_map);\n            }\n        }\n        return variable_map;\n    };\n\n\n    async get_record() {\n        if (this.stopped)\n            return null;\n        if (this.nr >= this.table.length)\n            return null;\n        let record = this.table[this.nr];\n        this.nr += 1;\n        let num_fields = record.length;\n        if (!this.fields_info.has(num_fields))\n            this.fields_info.set(num_fields, this.nr);\n        return record;\n    };\n\n    get_warnings() {\n        if (this.fields_info.size > 1)\n            return [make_inconsistent_num_fields_warning('input', this.fields_info)];\n        return [];\n    };\n\n    async get_header() {\n        return this.column_names;\n    }\n}\n\n\nclass TableWriter extends RBQLOutputWriter {\n    constructor(external_table) {\n        super();\n        this.table = external_table;\n        this.header = null;\n    }\n\n    async write(fields) {\n        this.table.push(fields);\n        return true;\n    };\n\n    set_header(header) {\n        this.header = header;\n    }\n}\n\n\nclass SingleTableRegistry extends RBQLTableRegistry {\n    constructor(table, column_names=null, normalize_column_names=true, table_id='b') {\n        super();\n        this.table = table;\n        this.table_id = table_id;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        if (table_id.toLowerCase() !== this.table_id)\n            throw new RbqlIOHandlingError(`Unable to find join table: \"${table_id}\"`);\n        return new TableIterator(this.table, this.column_names, this.normalize_column_names, 'b');\n    };\n}\n\n\nasync function shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context) {\n    query_text = cleanup_query(query_text);\n    var [format_expression, string_literals] = separate_string_literals(query_text);\n    format_expression = remove_redundant_table_name(format_expression);\n\n    var rb_actions = separate_actions(format_expression);\n    if (rb_actions.hasOwnProperty(WITH)) {\n        input_iterator.handle_query_modifier(rb_actions[WITH]);\n    }\n    var input_variables_map = await input_iterator.get_variables_map(query_text);\n\n    if (rb_actions.hasOwnProperty(ORDER_BY) && rb_actions.hasOwnProperty(UPDATE))\n        throw new RbqlParsingError('\"ORDER BY\" is not allowed in \"UPDATE\" queries');\n\n    if (rb_actions.hasOwnProperty(GROUP_BY)) {\n        if (rb_actions.hasOwnProperty(ORDER_BY) || rb_actions.hasOwnProperty(UPDATE))\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        query_context.aggregation_key_expression = '[' + combine_string_literals(rb_actions[GROUP_BY]['text'], string_literals) + ']';\n    }\n\n\n    let input_header = await input_iterator.get_header();\n    let join_variables_map = null;\n    let join_header = null;\n    if (rb_actions.hasOwnProperty(JOIN)) {\n        var [rhs_table_id, variable_pairs] = parse_join_expression(rb_actions[JOIN]['text']);\n        if (join_tables_registry === null)\n            throw new RbqlParsingError('JOIN operations are not supported by the application');\n        let join_record_iterator = join_tables_registry.get_iterator_by_table_id(rhs_table_id);\n        if (!join_record_iterator)\n            throw new RbqlParsingError(`Unable to find join table: \"${rhs_table_id}\"`);\n        if (rb_actions.hasOwnProperty(WITH)) {\n            join_record_iterator.handle_query_modifier(rb_actions[WITH]);\n        }\n        join_variables_map = await join_record_iterator.get_variables_map(query_text);\n        join_header = await join_record_iterator.get_header();\n        if (input_header === null && join_header !== null) {\n            throw new RbqlIOHandlingError('Inconsistent modes: Input table doesn\\'t have a header while the Join table has a header');\n        }\n        if (input_header !== null && join_header === null) {\n            throw new RbqlIOHandlingError('Inconsistent modes: Input table has a header while the Join table doesn\\'t have a header');\n        }\n        let [lhs_variables, rhs_indices] = resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals);\n        let sql_join_type = {'JOIN': InnerJoiner, 'INNER JOIN': InnerJoiner, 'LEFT JOIN': LeftJoiner, 'LEFT OUTER JOIN': LeftJoiner, 'STRICT LEFT JOIN': StrictLeftJoiner}[rb_actions[JOIN]['join_subtype']];\n        query_context.lhs_join_var_expression = lhs_variables.length == 1 ? lhs_variables[0] : 'JSON.stringify([' + lhs_variables.join(',') + '])';\n        query_context.join_map_impl = new HashJoinMap(join_record_iterator, rhs_indices);\n        await query_context.join_map_impl.build();\n        query_context.join_map = new sql_join_type(query_context.join_map_impl);\n    }\n\n    query_context.variables_init_code = combine_string_literals(generate_init_statements(format_expression, input_variables_map, join_variables_map, ' '.repeat(4)), string_literals);\n\n    if (rb_actions.hasOwnProperty(WHERE)) {\n        var where_expression = rb_actions[WHERE]['text'];\n        if (/[^><!=]=[^=]/.exec(where_expression))\n            throw new RbqlParsingError('Assignments \"=\" are not allowed in \"WHERE\" expressions. For equality test use \"==\" or \"===\"');\n        query_context.where_expression = combine_string_literals(where_expression, string_literals);\n    }\n\n    if (rb_actions.hasOwnProperty(UPDATE)) {\n        var update_expression = translate_update_expression(rb_actions[UPDATE]['text'], input_variables_map, string_literals, ' '.repeat(8));\n        query_context.update_expressions = combine_string_literals(update_expression, string_literals);\n        query_context.writer.set_header(input_header);\n    }\n\n    if (rb_actions.hasOwnProperty(SELECT)) {\n        query_context.top_count = find_top(rb_actions);\n        if (rb_actions.hasOwnProperty(EXCEPT)) {\n            if (rb_actions.hasOwnProperty(JOIN)) {\n                throw new RbqlParsingError('EXCEPT and JOIN are not allowed in the same query');\n            }\n            let [output_header, select_expression] = translate_except_expression(rb_actions[EXCEPT]['text'], input_variables_map, string_literals, input_header);\n            query_context.select_expression = select_expression;\n            query_context.writer.set_header(output_header);\n        } else {\n            let [select_expression, select_expression_for_header] = translate_select_expression(rb_actions[SELECT]['text']);\n            query_context.select_expression = combine_string_literals(select_expression, string_literals);\n            let column_infos = adhoc_parse_select_expression_to_column_infos(select_expression_for_header, string_literals);\n            let output_header = select_output_header(input_header, join_header, column_infos);\n            query_context.writer.set_header(output_header);\n        }\n\n        query_context.writer = new TopWriter(query_context.writer, query_context.top_count);\n        if (rb_actions[SELECT].hasOwnProperty('distinct_count')) {\n            query_context.writer = new UniqCountWriter(query_context.writer);\n        } else if (rb_actions[SELECT].hasOwnProperty('distinct')) {\n            query_context.writer = new UniqWriter(query_context.writer);\n        }\n    }\n\n    if (rb_actions.hasOwnProperty(ORDER_BY)) {\n        query_context.sort_key_expression = combine_string_literals(rb_actions[ORDER_BY]['text'], string_literals);\n        let reverse_sort = rb_actions[ORDER_BY]['reverse'];\n        query_context.writer = new SortedWriter(query_context.writer, reverse_sort);\n    }\n}\n\n\nasync function query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry=null, user_init_code='') {\n    query_context = new RBQLContext(query_text, input_iterator, output_writer, user_init_code);\n    await shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context);\n    await compile_and_run(query_context);\n    await query_context.writer.finish();\n    output_warnings.push(...input_iterator.get_warnings());\n    if (query_context.join_map_impl)\n        output_warnings.push(...query_context.join_map_impl.get_warnings());\n    output_warnings.push(...output_writer.get_warnings());\n}\n\n\nasync function query_table(query_text, input_table, output_table, output_warnings, join_table=null, input_column_names=null, join_column_names=null, output_column_names=null, normalize_column_names=true, user_init_code='') {\n    if (!normalize_column_names && input_column_names !== null && join_column_names !== null)\n        ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names);\n    let input_iterator = new TableIterator(input_table, input_column_names, normalize_column_names);\n    let output_writer = new TableWriter(output_table);\n    let join_tables_registry = join_table === null ? null : new SingleTableRegistry(join_table, join_column_names, normalize_column_names);\n    await query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    if (output_column_names !== null) {\n        assert(output_column_names.length == 0, '`output_column_names` param must be an empty list or null');\n        if (output_writer.header !== null) {\n            for (let column_name of output_writer.header) {\n                output_column_names.push(column_name);\n            }\n        }\n    }\n}\n\n\nfunction exception_to_error_info(e) {\n    let exceptions_type_map = {\n        'RbqlRuntimeError': 'query execution',\n        'RbqlParsingError': 'query parsing',\n        'SyntaxError': 'JS syntax error',\n        'RbqlIOHandlingError': 'IO handling'\n    };\n    let error_type = 'unexpected';\n    if (e.constructor && e.constructor.name && exceptions_type_map.hasOwnProperty(e.constructor.name)) {\n        error_type = exceptions_type_map[e.constructor.name];\n    }\n    let error_msg = e.hasOwnProperty('message') ? e.message : String(e);\n    return [error_type, error_msg];\n}\n\n\nexports.query = query;\nexports.query_table = query_table;\nexports.RBQLInputIterator = RBQLInputIterator;\nexports.RBQLOutputWriter = RBQLOutputWriter;\nexports.RBQLTableRegistry = RBQLTableRegistry;\n\nexports.version = RBQL_VERSION;\nexports.TableIterator = TableIterator;\nexports.TableWriter = TableWriter;\nexports.SingleTableRegistry = SingleTableRegistry;\nexports.exception_to_error_info = exception_to_error_info;\n\n\n// The functions below are exported just for unit tests, they are not part of the rbql API\n// TODO exports through the special unit_test proxy e.g. exports.unit_test.parse_basic_variables = parse_basic_variables;\nexports.parse_basic_variables = parse_basic_variables;\nexports.parse_array_variables = parse_array_variables;\nexports.parse_dictionary_variables = parse_dictionary_variables;\nexports.parse_attribute_variables = parse_attribute_variables;\nexports.get_all_matches = get_all_matches;\nexports.strip_comments = strip_comments;\nexports.separate_actions = separate_actions;\nexports.separate_string_literals = separate_string_literals;\nexports.combine_string_literals = combine_string_literals;\nexports.parse_join_expression = parse_join_expression;\nexports.resolve_join_variables = resolve_join_variables;\nexports.translate_update_expression = translate_update_expression;\nexports.translate_select_expression = translate_select_expression;\nexports.translate_except_expression = translate_except_expression;\nexports.like_to_regex = like_to_regex;\nexports.adhoc_parse_select_expression_to_column_infos = adhoc_parse_select_expression_to_column_infos;\nexports.replace_star_count = replace_star_count;\nexports.replace_star_vars_for_header_parsing = replace_star_vars_for_header_parsing;\nexports.select_output_header = select_output_header;\nexports.sample_first_two_inconsistent_records = sample_first_two_inconsistent_records;\n\n}(typeof exports === 'undefined' ? this.rbql = {} : exports));\n","const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst util = require('util');\n\nconst rbql = require('./rbql.js');\nconst csv_utils = require('./csv_utils.js');\n\n\nconst utf_decoding_error = 'Unable to decode input table as UTF-8. Use binary (latin-1) encoding instead';\n\n\nclass RbqlIOHandlingError extends Error {}\nclass AssertionError extends Error {}\n\n\n// TODO performance improvement: replace smart_split() with polymorphic_split()\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction interpret_named_csv_format(format_name) {\n    format_name = format_name.toLowerCase();\n    if (format_name == 'monocolumn')\n        return ['', 'monocolumn'];\n    if (format_name == 'csv')\n        return [',', 'quoted'];\n    if (format_name == 'tsv')\n        return ['\\t', 'simple'];\n    throw new RbqlIOHandlingError(`Unknown format name: \"${format_name}\"`);\n}\n\n\n\nfunction is_ascii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\n\n\nfunction read_user_init_code(rbql_init_source_path) {\n    return fs.readFileSync(rbql_init_source_path, 'utf-8');\n}\n\n\nfunction remove_utf8_bom(line, assumed_source_encoding) {\n    if (assumed_source_encoding == 'binary' && line.length >= 3 && line.charCodeAt(0) === 0xEF && line.charCodeAt(1) === 0xBB && line.charCodeAt(2) === 0xBF) {\n        return line.substring(3);\n    }\n    if (assumed_source_encoding == 'utf-8' && line.length >= 1 && line.charCodeAt(0) === 0xFEFF) {\n        return line.substring(1);\n    }\n    return line;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let [record_num_1, num_fields_1, record_num_2, num_fields_2] = rbql.sample_first_two_inconsistent_records(inconsistent_records_info);\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_num_1} -> ${num_fields_1} fields, record ${record_num_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction try_read_index(index_path) {\n    var content = null;\n    try {\n        content = fs.readFileSync(index_path, 'utf-8');\n    } catch (e) {\n        return [];\n    }\n    var lines = content.split('\\n');\n    var records = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (!lines[i])\n            continue;\n        var record = lines[i].split('\\t');\n        records.push(record);\n    }\n    return records;\n}\n\n\nfunction get_index_record(index_path, key) {\n    var records = try_read_index(index_path);\n    for (var i = 0; i < records.length; i++) {\n        if (records[i].length && records[i][0] == key) {\n            return records[i];\n        }\n    }\n    return null;\n}\n\n\nfunction find_table_path(main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_names_settings_path = path.join(os.homedir(), '.rbql_table_names');\n    var name_record = get_index_record(table_names_settings_path, table_id);\n    if (name_record && name_record.length > 1 && fs.existsSync(name_record[1])) {\n        return name_record[1];\n    }\n    return null;\n}\n\n\nclass RecordQueue {\n    // TODO compare performance with a linked list\n    constructor() {\n        this.push_stack = [];\n        this.pull_stack = [];\n    }\n\n    enqueue(record) {\n        this.push_stack.push(record);\n    }\n\n    dequeue() {\n        if (!this.pull_stack.length) {\n            if (!this.push_stack.length)\n                return null;\n            this.pull_stack = this.push_stack;\n            this.pull_stack.reverse();\n            this.push_stack = [];\n        }\n        return this.pull_stack.pop();\n    }\n}\n\n\nclass CSVRecordIterator extends rbql.RBQLInputIterator {\n    // CSVRecordIterator implements a typical async producer-consumer model with an internal buffer:\n    // get_record() - consumer\n    // stream.on('data') - producer\n    constructor(stream, csv_path, encoding, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        super();\n        this.stream = stream;\n        this.csv_path = csv_path;\n        assert((this.stream === null) != (this.csv_path === null));\n        this.encoding = encoding;\n        this.delim = delim;\n        this.policy = policy;\n\n        this.has_header = has_header;\n        this.first_record = null;\n        this.first_record_should_be_emitted = !has_header;\n        this.header_preread_complete = false;\n\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.comment_prefix = comment_prefix;\n\n        this.decoder = null;\n        if (encoding == 'utf-8' && this.csv_path === null) {\n            // Unfortunately util.TextDecoder has serious flaws:\n            // 1. It doesn't work in Node without ICU: https://nodejs.org/api/util.html#util_new_textdecoder_encoding_options\n            // 2. It is broken in Electron: https://github.com/electron/electron/issues/18733\n\n            // Technically we can implement our own custom streaming text decoder, using the 3 following technologies:\n            // 1. decode-encode validation method from https://stackoverflow.com/a/32279283/2898283\n            // 2. Scanning buffer chunks for non-continuation utf-8 bytes from the end of the buffer:\n            //    src_buffer -> (buffer_before, buffer_after) where buffer_after is very small(a couple of bytes) and buffer_before is large and ends with a non-continuation bytes\n            // 3. Internal buffer to store small tail part from the previous buffer\n            this.decoder = new util.TextDecoder(encoding, {fatal: true, stream: true});\n        }\n\n        this.input_exhausted = false;\n        this.started = false;\n\n        this.utf8_bom_removed = false; // BOM doesn't get automatically removed by the decoder when utf-8 file is treated as latin-1\n        this.first_defective_line = null;\n\n        this.fields_info = new Map();\n        this.NR = 0; // Record number\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields)\n\n        this.line_aggregator = new csv_utils.MultilineRecordAggregator(comment_prefix);\n\n        this.partially_decoded_line = '';\n        this.partially_decoded_line_ends_with_cr = false;\n\n        // Holds an external \"resolve\" function which is called when everything is fine.\n        this.resolve_current_record = null;\n        // Holds an external \"reject\" function which is called when error has occured.\n        this.reject_current_record = null;\n        // Holds last exception if we don't have any reject callbacks from clients yet.\n        this.current_exception = null;\n\n        this.produced_records_queue = new RecordQueue();\n\n        this.process_line_polymorphic = policy == 'quoted_rfc' ? this.process_partial_rfc_record_line : this.process_record_line_simple;\n    }\n\n\n    handle_query_modifier(modifier) {\n        // For `... WITH (header) ...` syntax\n        if (['header', 'headers'].indexOf(modifier) != -1) {\n            this.has_header = true;\n            this.first_record_should_be_emitted = false;\n        }\n        if (['noheader', 'noheaders'].indexOf(modifier) != -1) {\n            this.has_header = false;\n            this.first_record_should_be_emitted = true;\n        }\n    }\n\n\n    reset_external_callbacks() {\n        // Drop external callbacks simultaneously since promises can only resolve once, see: https://stackoverflow.com/a/18218542/2898283\n        this.reject_current_record = null;\n        this.resolve_current_record = null;\n    }\n\n    try_propagate_exception() {\n        if (this.current_exception && this.reject_current_record) {\n            let reject = this.reject_current_record;\n            let exception = this.current_exception;\n            this.reset_external_callbacks();\n            this.current_exception = null;\n            reject(exception);\n        }\n    }\n\n\n    store_or_propagate_exception(exception) {\n        if (this.current_exception === null)\n            // Ignore subsequent exceptions if we already have an unreported error. This way we prioritize earlier errors over the more recent ones.\n            this.current_exception = exception;\n        this.try_propagate_exception();\n    }\n\n\n    async preread_first_record() {\n        if (this.header_preread_complete)\n            return;\n        this.first_record = await this.get_record();\n        this.header_preread_complete = true; // We must set header_preread_complete to true after calling get_record(), because get_record() uses it internally.\n        if (this.first_record === null) {\n            return;\n        }\n        if (this.stream)\n            this.stream.pause();\n        this.first_record = this.first_record.slice();\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n\n        await this.preread_first_record();\n        if (this.has_header && this.first_record) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    };\n\n    async get_header() {\n        await this.preread_first_record();\n        return this.has_header ? this.first_record : null;\n    }\n\n\n    try_resolve_next_record() {\n        this.try_propagate_exception();\n        if (this.resolve_current_record === null)\n            return;\n\n        let record = null;\n        if (this.first_record_should_be_emitted && this.header_preread_complete) {\n            this.first_record_should_be_emitted = false;\n            record = this.first_record;\n        } else {\n            record = this.produced_records_queue.dequeue();\n        }\n\n        if (record === null && !this.input_exhausted)\n            return;\n        let resolve = this.resolve_current_record;\n        this.reset_external_callbacks();\n        resolve(record);\n    };\n\n\n    async get_record() {\n        if (!this.started)\n            await this.start();\n        if (this.stream && this.stream.isPaused())\n            this.stream.resume();\n\n        let parent_iterator = this;\n        let current_record_promise = new Promise(function(resolve, reject) {\n            parent_iterator.resolve_current_record = resolve;\n            parent_iterator.reject_current_record = reject;\n        });\n        this.try_resolve_next_record();\n        return current_record_promise;\n    };\n\n\n    async get_all_records(num_records=null) {\n        let records = [];\n        while (true) {\n            let record = await this.get_record();\n            if (record === null)\n                break;\n            records.push(record);\n            if (num_records && records.length >= num_records) {\n                this.stop();\n                break;\n            }\n        }\n        return records;\n    };\n\n\n    process_record_line_simple(line) {\n        if (this.comment_prefix && line.startsWith(this.comment_prefix))\n            return; // Just skip the line\n        this.process_record_line(line);\n    }\n\n\n    process_record_line(line) {\n        this.NR += 1;\n        var [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`));\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.has(num_fields))\n            this.fields_info.set(num_fields, this.NR);\n        this.produced_records_queue.enqueue(record);\n        this.try_resolve_next_record();\n    };\n\n\n    process_partial_rfc_record_line(line) {\n        this.line_aggregator.add_line(line);\n        if (this.line_aggregator.has_comment_line) {\n            this.line_aggregator.reset();\n        } else if (this.line_aggregator.has_full_record) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n            this.line_aggregator.reset();\n        }\n    };\n\n\n    process_line(line) {\n        this.NL += 1;\n        if (this.NL === 1) {\n            var clean_line = remove_utf8_bom(line, this.encoding);\n            if (clean_line != line) {\n                line = clean_line;\n                this.utf8_bom_removed = true;\n            }\n        }\n        this.process_line_polymorphic(line);\n    };\n\n\n    process_data_stream_chunk(data_chunk) {\n        let decoded_string = null;\n        if (this.decoder) {\n            try {\n                decoded_string = this.decoder.decode(data_chunk);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                } else {\n                    this.store_or_propagate_exception(e);\n                }\n                return;\n            }\n        } else {\n            decoded_string = data_chunk.toString(this.encoding);\n        }\n        let line_starts_with_lf = decoded_string.length && decoded_string[0] == '\\n';\n        let first_line_index = line_starts_with_lf && this.partially_decoded_line_ends_with_cr ? 1 : 0;\n        this.partially_decoded_line_ends_with_cr = decoded_string.length && decoded_string[decoded_string.length - 1] == '\\r';\n        let lines = csv_utils.split_lines(decoded_string);\n        lines[0] = this.partially_decoded_line + lines[0];\n        assert(first_line_index == 0 || lines[0].length == 0);\n        this.partially_decoded_line = lines.pop();\n        for (let i = first_line_index; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n    };\n\n\n    process_data_bulk(data_blob) {\n        let decoded_string = data_blob.toString(this.encoding);\n        if (this.encoding == 'utf-8') {\n            // Using hacky comparison method from here: https://stackoverflow.com/a/32279283/2898283\n            // TODO get rid of this once TextDecoder is really fixed or when alternative method of reliable decoding appears\n            let control_buffer = Buffer.from(decoded_string, 'utf-8');\n            if (Buffer.compare(data_blob, control_buffer) != 0) {\n                this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                return;\n            }\n        }\n        let lines = csv_utils.split_lines(decoded_string);\n        if (lines.length && lines[lines.length - 1].length == 0)\n            lines.pop();\n        for (let i = 0; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n        if (this.line_aggregator.is_inside_multiline_record()) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n        }\n        this.input_exhausted = true;\n        this.try_resolve_next_record(); // Should be a NOOP here?\n    }\n\n\n    process_data_stream_end() {\n        this.input_exhausted = true;\n        if (this.partially_decoded_line.length) {\n            let last_line = this.partially_decoded_line;\n            this.partially_decoded_line = '';\n            this.process_line(last_line);\n        }\n        if (this.line_aggregator.is_inside_multiline_record()) {\n            this.process_record_line(this.line_aggregator.get_full_line('\\n'));\n        }\n        this.try_resolve_next_record();\n    };\n\n\n    stop() {\n        if (this.stream)\n            this.stream.destroy(); // TODO consider using pause() instead\n    };\n\n\n    async start() {\n        if (this.started)\n            return;\n        this.started = true;\n        if (this.stream) {\n            this.stream.on('data', (data_chunk) => { this.process_data_stream_chunk(data_chunk); });\n            this.stream.on('end', () => { this.process_data_stream_end(); });\n        } else {\n            let parent_iterator = this;\n            return new Promise(function(resolve, reject) {\n                fs.readFile(parent_iterator.csv_path, (err, data_blob) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        parent_iterator.process_data_bulk(data_blob);\n                        resolve();\n                    }\n                });\n            });\n        }\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.utf8_bom_removed)\n            result.push(`UTF-8 Byte Order Mark (BOM) was found and skipped in ${this.table_name} table`);\n        if (this.fields_info.size > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    };\n}\n\n\nclass CSVWriter extends rbql.RBQLOutputWriter {\n    constructor(stream, close_stream_on_finish, encoding, delim, policy, line_separator='\\n') {\n        super();\n        this.stream = stream;\n        this.encoding = encoding;\n        if (encoding)\n            this.stream.setDefaultEncoding(encoding);\n        this.stream.on('error', (error_obj) => { this.store_first_error(error_obj); })\n        this.delim = delim;\n        this.policy = policy;\n        this.line_separator = line_separator;\n        this.sub_array_delim = delim == '|' ? ';' : '|';\n\n        this.close_stream_on_finish = close_stream_on_finish;\n\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.header_len = null;\n        this.first_error = null;\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n\n    store_first_error(error_obj) {\n        // Store only first error because it is typically more important than the subsequent ones.\n        if (this.first_error === null)\n            this.first_error = error_obj;\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    async write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.stream.write(this.polymorphic_join(fields));\n        this.stream.write(this.line_separator);\n        let writer_error = this.first_error;\n        return new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            } else {\n                resolve(true);\n            }\n        });\n    };\n\n\n    _write_all(table) {\n        for (let i = 0; i < table.length; i++) {\n            this.write(table[i]);\n        }\n    };\n\n\n    async finish() {\n        let close_stream_on_finish = this.close_stream_on_finish;\n        let output_stream = this.stream;\n        let output_encoding = this.encoding;\n        let writer_error = this.first_error;\n        let finish_promise = new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            }\n            if (close_stream_on_finish) {\n                output_stream.end('', output_encoding, () => { resolve(); });\n            } else {\n                setTimeout(() => { resolve(); }, 0);\n            }\n        });\n        return finish_promise;\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n\n}\n\n\nclass FileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function query_csv(query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!is_ascii(input_delim) || !is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new FileSystemCSVRegistry(input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.is_ascii = is_ascii;\nmodule.exports.CSVRecordIterator = CSVRecordIterator;\nmodule.exports.CSVWriter = CSVWriter;\nmodule.exports.FileSystemCSVRegistry = FileSystemCSVRegistry;\nmodule.exports.interpret_named_csv_format = interpret_named_csv_format;\nmodule.exports.read_user_init_code = read_user_init_code;\nmodule.exports.query_csv = query_csv;\nmodule.exports.RecordQueue = RecordQueue;\nmodule.exports.exception_to_error_info = rbql.exception_to_error_info;\n","module.exports = require(\"vscode\");","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const vscode = require('vscode');\n\nconst path = require('path');\nconst fs = require('fs');\nconst os = require('os');\nconst child_process = require('child_process');\n\nconst fast_load_utils = require('./fast_load_utils.js');\n\n// Please see DEV_README.md file for additional info.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nvar rbql_csv = null; // Using lazy load to improve startup performance.\nfunction ll_rbql_csv() {\n    if (rbql_csv === null)\n        rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\n    return rbql_csv;\n}\n\n\nvar rainbow_utils = null; // Using lazy load to improve startup performance.\nfunction ll_rainbow_utils() {\n    if (rainbow_utils === null) {\n        rainbow_utils = require('./rainbow_utils.js');\n    }\n    return rainbow_utils;\n}\n\n\nconst is_web_ext = (os.homedir === undefined); // Runs as web extension in browser.\nconst preview_window_size = 100;\nconst scratch_buf_marker = 'vscode_rbql_scratch';\nconst dynamic_csv_highlight_margin = 50; // TODO make configurable\n\nlet client_html_template_web = null;\n\nvar aligned_files = new Set();\nvar result_set_parent_map = new Map();\nvar cached_table_parse_result = new Map(); // TODO store doc timestamp / size to invalidate the entry when the doc changes.\nvar manual_comment_prefix_stoplist = new Set();\n\nvar rbql_status_bar_button = null;\nvar align_shrink_button = null;\nvar rainbow_off_status_bar_button = null;\nvar copy_back_button = null;\nvar column_info_button = null;\nvar dynamic_dialect_select_button = null;\n\nvar rbql_context = null;\n\nvar last_rbql_queries = new Map(); // Query history does not replace this structure, it is also used to store partially entered queries for preview window switch.\n\nvar client_html_template = null;\n\nvar global_state = null;\n\nvar preview_panel = null;\n\nvar doc_first_edit_subscription = null;\nvar keyboard_cursor_subscription = null;\n\nvar _unit_test_last_rbql_report = null; // For unit tests only.\nvar _unit_test_last_warnings = null; // For unit tests only.\n\nlet cursor_timeout_handle = null;\n\nlet rainbow_token_event = null;\nlet comment_token_event = null;\nlet sticky_header_disposable = null;\n\nconst DYNAMIC_CSV = 'dynamic csv';\n\nconst QUOTED_POLICY = 'quoted';\nconst WHITESPACE_POLICY = 'whitespace';\nconst QUOTED_RFC_POLICY = 'quoted_rfc';\nconst SIMPLE_POLICY = 'simple';\n\n\nlet extension_context = {\n    lint_results: new Map(),\n    lint_status_bar_button: null,\n    dynamic_document_dialects: new Map(),\n    custom_comment_prefixes: new Map(),\n    original_language_ids: new Map(),\n    autodetection_stoplist: new Set(),\n    autodetection_temporarily_disabled_for_rbql: false,\n    dynamic_dialect_for_next_request: null,\n};\n\nconst dialect_map = {\n    'csv': [',', QUOTED_POLICY],\n    'tsv': ['\\t', SIMPLE_POLICY],\n    'csv (semicolon)': [';', QUOTED_POLICY],\n    'csv (pipe)': ['|', SIMPLE_POLICY],\n    'csv (whitespace)': [' ', WHITESPACE_POLICY],\n    [DYNAMIC_CSV]: [null, null]\n};\n\nconst tokenTypes = ['rainbow1', 'macro', 'function', 'comment', 'string', 'parameter', 'type', 'enumMember', 'keyword', 'regexp'];\nconst tokens_legend = new vscode.SemanticTokensLegend(tokenTypes);\n\n\nfunction safe_lower(src_str) {\n    if (!src_str)\n        return src_str;\n    return src_str.toLowerCase();\n}\n\n\nfunction get_default_policy(separator) {\n    // This function is most likely a temporal workaround, get rid of it when possible.\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator)\n            return dialect_map[language_id][1];\n    }\n    return SIMPLE_POLICY;\n}\n\n\nfunction map_dialect_to_language_id(separator, policy) {\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator && dialect_map[language_id][1] == policy)\n            return language_id;\n    }\n    return DYNAMIC_CSV;\n}\n\n\n// This structure will get properly initialized during the startup.\nlet absolute_path_map = {\n    'rbql_client.js': null,\n    'contrib/textarea-caret-position/index.js': null,\n    'rbql_suggest.js': null,\n    'rbql_logo.svg': null,\n    'rbql_client.html': null,\n    'rbql mock/rbql_mock.py': null,\n    'rbql_core/vscode_rbql.py': null\n};\n\n\nfunction show_single_line_error(error_msg) {\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    // Do not \"await\" error messages because the promise gets resolved only on error dismissal.\n    active_window.showErrorMessage(error_msg);\n}\n\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nasync function report_progress(progress, status_message) {\n    progress.report({message: status_message});\n    // Push the current stack to the JS callback queue to allow UI update.\n    await sleep(0);\n}\n\n\nfunction get_from_global_state(key, default_value) {\n    if (global_state) {\n        var value = global_state.get(key);\n        if (value !== null && value !== undefined)\n            return value;\n    }\n    return default_value;\n}\n\n\nasync function save_to_global_state(key, value) {\n    if (global_state && key) {\n        await global_state.update(key, value);\n        return true;\n    }\n    return false;\n}\n\n\nasync function replace_doc_content(active_editor, active_doc, new_content) {\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    await active_editor.edit(edit => edit.replace(full_range, new_content));\n}\n\n\nfunction make_header_key(file_path) {\n    return 'rbql_header_info:' + file_path;\n}\n\n\nfunction make_with_headers_key(file_path) {\n    return 'rbql_with_headers:' + file_path;\n}\n\n\nfunction get_from_config(param_name, default_value, config=null) {\n    if (!config) {\n        config = vscode.workspace.getConfiguration('rainbow_csv');\n    }\n    return config ? config.get(param_name) : default_value;\n}\n\n\nfunction get_header_from_document(document, delim, policy, comment_prefix) {\n    let [_header_lnum, header_line] = ll_rainbow_utils().get_header_line(document, comment_prefix);\n    if (!header_line) {\n        return null;\n    }\n    return csv_utils.smart_split(header_line, delim, policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n}\n\n\nfunction get_header(document, delim, policy, comment_prefix) {\n    var file_path = document.fileName;\n    if (file_path) {\n        let header_info = get_from_global_state(make_header_key(file_path), null);\n        if (header_info !== null && header_info.header !== null) {\n            return header_info.header;\n        }\n    }\n    return get_header_from_document(document, delim, policy, comment_prefix);\n}\n\n\nfunction get_dialect(document) {\n    let language_id = document.languageId;\n    let delim = null;\n    let policy = null;\n\n    let comment_prefix = '';\n    if (extension_context.custom_comment_prefixes.has(document.fileName)) {\n        comment_prefix = extension_context.custom_comment_prefixes.get(document.fileName);\n    } else {\n        comment_prefix = get_from_config('comment_prefix', '');\n    }\n    if (language_id != DYNAMIC_CSV && dialect_map.hasOwnProperty(language_id)) {\n        [delim, policy] = dialect_map[language_id];\n        return [delim, policy, comment_prefix];\n    }\n    // Here we don't check if language_id is DYNAMIC_CSV because we want to return the once selected dialect anyway even if file is now 'plaintext' or some other non-csv filetype.\n    if (extension_context.dynamic_document_dialects.has(document.fileName)) {\n        let dialect_info = extension_context.dynamic_document_dialects.get(document.fileName);\n        delim = dialect_info.delim;\n        policy = dialect_info.policy;\n        return [delim, policy, comment_prefix];\n    }\n    // The language id can be `dynamic csv` here e.g. if user just now manually selected the \"Dynamic CSV\" filetype.\n    return [null, null, null];\n}\n\n\nfunction show_status_bar_items(active_doc) {\n    if (dynamic_dialect_select_button) {\n        dynamic_dialect_select_button.hide();\n    }\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, active_doc.fileName, active_doc.languageId);\n    show_rbql_status_bar_button();\n    show_align_shrink_button(active_doc.fileName);\n    show_rainbow_off_status_bar_button();\n    show_rbql_copy_to_source_button(active_doc.fileName);\n    show_column_info_button(); // This function finds active_doc internally, but the possible inconsistency is harmless.\n}\n\n\nclass StickyHeaderProvider {\n    // We don't utilize typescript `implement` interface keyword, because TS doesn't seem to be exporting interfaces to JS (unlike classes).\n    constructor() {\n    }\n    async provideDocumentSymbols(document) {\n        // This can trigger multiple times for the same doc because otherwise this won't work in case of e.g. header edit.\n        let [_delim, policy, comment_prefix] = get_dialect(document);\n        if (!policy) {\n            return null;\n        }\n        let header_lnum = null;\n        var file_path = document.fileName;\n        if (file_path) {\n            let header_info = get_from_global_state(make_header_key(file_path), null);\n            if (header_info !== null && header_info.header_line_num !== null) {\n                header_lnum = header_info.header_line_num;\n            }\n        }\n\n        if (header_lnum === null) {\n            header_lnum = ll_rainbow_utils().get_header_line(document, comment_prefix)[0];\n        }\n        if (header_lnum === null || header_lnum >= document.lineCount - 1) {\n            return null;\n        }\n        let full_range = new vscode.Range(header_lnum, 0, document.lineCount - 1, 65535);\n        full_range = document.validateRange(full_range); // Just in case, should be always NOOP.\n        let header_range = new vscode.Range(header_lnum, 0, header_lnum, 65535);\n        if (!full_range.contains(header_range)) {\n            return; // Should never happen.\n        }\n        let symbol_kind = vscode.SymbolKind.File; // It is vscode.SymbolKind.File because it shows a nice \"File\" icon in the upper navigational panel. Another nice option is \"Class\".\n        let header_symbol = new vscode.DocumentSymbol('data', '', symbol_kind, full_range, header_range);\n        return [header_symbol];\n    }\n}\n\n\nfunction register_sticky_header_provider(force=false) {\n    if (sticky_header_disposable !== null) {\n        if (force) {\n            sticky_header_disposable.dispose();\n        } else {\n            return;\n        }\n    }\n    // TODO consider enabling the provider unconditionally, consider checking all supported languages and not just csv.\n    let sticky_scroll_enabled = vscode.workspace.getConfiguration('editor.stickyScroll').get('enabled') === true || vscode.workspace.getConfiguration('editor.stickyScroll', {languageId : 'csv'}).get('enabled') === true;\n    if (!sticky_scroll_enabled) {\n        return; // Do not register symbol provider to avoid showing annoying entry in the upper navig bar and other possible side effects.\n    }\n\n    let header_symbol_provider = new StickyHeaderProvider();\n    let document_selector = [];\n    for (let language_id in dialect_map) {\n        if (dialect_map.hasOwnProperty(language_id)) {\n            document_selector.push({language: language_id});\n        }\n    }\n    sticky_header_disposable = vscode.languages.registerDocumentSymbolProvider(document_selector, header_symbol_provider);\n}\n\n\nfunction enable_dynamic_semantic_tokenization() {\n    let token_provider = new RainbowTokenProvider();\n    if (rainbow_token_event !== null) {\n        rainbow_token_event.dispose();\n    }\n    let document_selector = { language: DYNAMIC_CSV }; // Use '*' to select all languages if needed.\n    rainbow_token_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(document_selector, token_provider, tokens_legend);\n}\n\n\nfunction register_comment_tokenization_handler() {\n    let token_provider = new CommentTokenProvider();\n    if (comment_token_event !== null) {\n        comment_token_event.dispose();\n    }\n    let document_selector = [];\n    for (let language_id in dialect_map) {\n        if (dialect_map.hasOwnProperty(language_id) && language_id != DYNAMIC_CSV) {\n            // We skip DYNAMIC_CSV here because its provider already handles comment lines.\n            document_selector.push({language: language_id});\n        }\n    }\n    comment_token_event = vscode.languages.registerDocumentRangeSemanticTokensProvider(document_selector, token_provider, tokens_legend);\n}\n\n\nasync function get_dialect_from_user_dialog() {\n    let title = \"Select separator character or string e.g. `,` or `:=`. For tab use `TAB`\";\n    let input_box_props = {\"prompt\": title, \"value\": ','};\n    let delim = await vscode.window.showInputBox(input_box_props);\n    if (!delim) {\n        return [null, null];\n    }\n    let policy = (delim == ',' || delim == ';') ? QUOTED_RFC_POLICY : SIMPLE_POLICY;\n    return [delim, policy];\n}\n\n\nasync function choose_dynamic_separator() {\n    let active_doc = get_active_doc();\n    if (active_doc.languageId != DYNAMIC_CSV) {\n        show_single_line_error('Dynamic separator can only be adjusted for \"Dynamic CSV\" filetype.');\n        return;\n    }\n    let [delim, policy] = await get_dialect_from_user_dialog();\n    if (!delim) {\n        show_single_line_error('Unable to use empty string separator');\n        return;\n    }\n    extension_context.dynamic_document_dialects.set(active_doc.fileName, {delim: delim, policy: policy});\n    await enable_rainbow_features_if_csv(active_doc);\n}\n\n\nfunction show_choose_dynamic_separator_button() {\n    if (!dynamic_dialect_select_button)\n        dynamic_dialect_select_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    dynamic_dialect_select_button.text = 'Choose Separator...';\n    dynamic_dialect_select_button.tooltip = 'Click to choose Dynamic CSV separator';\n    dynamic_dialect_select_button.command = 'rainbow-csv.ChooseDynamicSeparator';\n    dynamic_dialect_select_button.show();\n}\n\n\nasync function enable_rainbow_features_if_csv(active_doc) {\n    let file_path = active_doc ? active_doc.fileName : null;\n    if (!active_doc || !file_path || file_path.endsWith('.git')) {\n        // For new untitled scratch documents `file_path` would be \"Untitled-1\", \"Untitled-2\", etc, so we won't enter this branch.\n        // Sometimes for git-controlled dirs VSCode opens mysterious .git files - skip them.\n        return;\n    }\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id)) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (!policy && extension_context.dynamic_dialect_for_next_request != null) {\n        [delim, policy] = extension_context.dynamic_dialect_for_next_request;\n        extension_context.dynamic_document_dialects.set(file_path, {delim: delim, policy: policy});\n        extension_context.dynamic_dialect_for_next_request = null;\n        [delim, policy, comment_prefix] = get_dialect(active_doc);\n    }\n    if (!policy) {\n        if (language_id == DYNAMIC_CSV) {\n            [delim, policy] = await get_dialect_from_user_dialog();\n            if (!policy) {\n                // Last attempt: retry getting dialect, because it can be set asynchronously: after opening the (which would trigger enable_rainbow_features_if_csv in the end) the caller could update dynamic_document_dialects for example this happens in RBQL queries handling.\n                [delim, policy, comment_prefix] = get_dialect(active_doc);\n            }\n            if (!policy) {\n                hide_buttons(); // Hide buttons when switching \"csv\" -> \"dynamic csv\".\n                show_choose_dynamic_separator_button();\n                return;\n            }\n            extension_context.dynamic_document_dialects.set(file_path, {delim: delim, policy: policy});\n        } else {\n            return;\n        }\n    }\n    if (!delim) {\n        return; // Adding this condition JIC, this should never happen at this point - we would return earlier if there were no policy (hence no delim).\n    }\n    if (get_from_config('enable_cursor_position_info', false)) {\n        keyboard_cursor_subscription = vscode.window.onDidChangeTextEditorSelection(handle_cursor_movement);\n    }\n    if (comment_prefix) {\n        // It is currently impoossible to set comment_prefix on document level, so we have to set it on language level instead.\n        // This could potentially cause minor problems in very rare situations.\n        // Applying 'setLanguageConfiguration' doesn't disable static configuration in language-configuration.json.\n        vscode.languages.setLanguageConfiguration(language_id, { comments: { lineComment: comment_prefix } });\n    }\n\n    if (language_id == DYNAMIC_CSV) {\n        // Re-enable tokenization to explicitly trigger the highligthing. Sometimes this doesn't happen automatically.\n        enable_dynamic_semantic_tokenization();\n    }\n    register_sticky_header_provider();\n    show_status_bar_items(active_doc);\n    await csv_lint(active_doc, false);\n}\n\n\nfunction hide_buttons() {\n    let all_buttons = [extension_context.lint_status_bar_button, rbql_status_bar_button, rainbow_off_status_bar_button, copy_back_button, align_shrink_button, column_info_button, dynamic_dialect_select_button];\n    for (let i = 0; i < all_buttons.length; i++) {\n        if (all_buttons[i])\n            all_buttons[i].hide();\n    }\n}\n\n\nfunction disable_rainbow_features_if_non_csv(active_doc) {\n    let file_path = active_doc ? active_doc.fileName : null;\n    if (!active_doc) {\n        // This can happen when openning settings tab for example.\n        hide_buttons();\n        return;\n    }\n    if (file_path && file_path.endsWith('.git')) {\n        // Sometimes for git-controlled dirs VSCode opens mysterious .git files which are not even present - skip them, don't disable features.\n        return;\n    }\n    var language_id = active_doc.languageId;\n    if (dialect_map.hasOwnProperty(language_id))\n        return;\n    hide_buttons();\n    if (keyboard_cursor_subscription) {\n        keyboard_cursor_subscription.dispose();\n        keyboard_cursor_subscription = null;\n    }\n}\n\n\nfunction get_active_editor() {\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    var active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return null;\n    return active_editor;\n}\n\n\nfunction get_active_doc(active_editor=null) {\n    if (!active_editor)\n        active_editor = get_active_editor();\n    if (!active_editor)\n        return null;\n    var active_doc = active_editor.document;\n    if (!active_doc)\n        return null;\n    return active_doc;\n}\n\n\nfunction show_align_shrink_button(file_path) {\n    if (!align_shrink_button)\n        align_shrink_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    if (aligned_files.has(file_path)) {\n        align_shrink_button.text = 'Shrink';\n        align_shrink_button.tooltip = 'Click to shrink table (Then you can click again to align)';\n        align_shrink_button.command = 'rainbow-csv.Shrink';\n    } else {\n        align_shrink_button.text = 'Align';\n        align_shrink_button.tooltip = 'Click to align table (Then you can click again to shrink)';\n        align_shrink_button.command = 'rainbow-csv.Align';\n    }\n    align_shrink_button.show();\n}\n\n\nfunction do_show_column_info_button(full_report, short_report) {\n    if (!column_info_button)\n        column_info_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 1000);\n    column_info_button.text = short_report;\n    column_info_button.tooltip = full_report;\n    column_info_button.show();\n}\n\n\nfunction make_hover(document, language_id, position, cancellation_token) {\n    if (!get_from_config('enable_tooltip', false)) {\n        return;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(document);\n    let cursor_position_info = ll_rainbow_utils().get_cursor_position_info(vscode, document, delim, policy, comment_prefix, position);\n    if (!cursor_position_info || cancellation_token.isCancellationRequested)\n        return null;\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let header = get_header(document, delim, policy, comment_prefix);\n    if (!header) {\n        return null;\n    }\n    let [_full_text, short_report] = ll_rainbow_utils().format_cursor_position_info(cursor_position_info, header, enable_tooltip_column_names, /*show_comments=*/true, /*max_label_length=*/25);\n    let mds = null;\n    if (language_id == DYNAMIC_CSV) {\n        mds = short_report; // Do not colorize hover text because dynamic csv provides inconsistent colors for some of the tokens.\n    } else {\n        // TODO The syntax highlighting doesn't always work here, perhaps due to https://github.com/microsoft/vscode/issues/53723. Consider getting rid of it altogether.\n        mds = new vscode.MarkdownString();\n        mds.appendCodeblock(short_report, 'rainbow hover markup');\n    }\n    return new vscode.Hover(mds);\n}\n\n\nfunction show_column_info_button() {\n    let active_editor = get_active_editor();\n    if (!active_editor) {\n        return false;\n    }\n    let position = ll_rainbow_utils().get_cursor_position_if_unambiguous(active_editor);\n    if (!position) {\n        return false;\n    }\n    let active_doc = get_active_doc(active_editor);\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    let cursor_position_info = ll_rainbow_utils().get_cursor_position_info(vscode, active_doc, delim, policy, comment_prefix, position);\n    if (!cursor_position_info)\n        return false;\n    let enable_tooltip_column_names = get_from_config('enable_tooltip_column_names', false);\n    let header = get_header(active_doc, delim, policy, comment_prefix);\n    if (!header)\n        return false;\n    let [full_report, short_report] = ll_rainbow_utils().format_cursor_position_info(cursor_position_info, header, enable_tooltip_column_names, /*show_comments=*/false, /*max_label_length=*/25);\n    do_show_column_info_button(full_report, short_report);\n    return true;\n}\n\n\nfunction show_rainbow_off_status_bar_button() {\n    if (!rainbow_off_status_bar_button)\n        rainbow_off_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rainbow_off_status_bar_button.text = 'Rainbow OFF';\n    rainbow_off_status_bar_button.tooltip = 'Click to restore original file type and syntax';\n    rainbow_off_status_bar_button.command = 'rainbow-csv.RainbowSeparatorOff';\n    rainbow_off_status_bar_button.show();\n}\n\n\nfunction show_rbql_status_bar_button() {\n    if (!rbql_status_bar_button)\n        rbql_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rbql_status_bar_button.text = 'Query';\n    rbql_status_bar_button.tooltip = 'Click to run SQL-like RBQL query';\n    rbql_status_bar_button.command = 'rainbow-csv.RBQL';\n    rbql_status_bar_button.show();\n}\n\n\nfunction show_rbql_copy_to_source_button(file_path) {\n    let parent_table_path = result_set_parent_map.get(safe_lower(file_path));\n    if (!parent_table_path || parent_table_path.indexOf(scratch_buf_marker) != -1)\n        return;\n    let parent_basename = path.basename(parent_table_path);\n    if (!copy_back_button)\n        copy_back_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    copy_back_button.text = 'Copy Back';\n    copy_back_button.tooltip = `Copy to parent table: ${parent_basename}`;\n    copy_back_button.command = 'rainbow-csv.CopyBack';\n    copy_back_button.show();\n}\n\n\nasync function csv_lint(active_doc, is_manual_op) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    if (!active_doc)\n        return null;\n    var file_path = active_doc.fileName; // For new untitled scratch documents this would be \"Untitled-1\", \"Untitled-2\", etc...\n    if (!file_path)\n        return null;\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return null;\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!is_manual_op) {\n        if (extension_context.lint_results.has(lint_cache_key))\n            return null;\n        if (!get_from_config('enable_auto_csv_lint', false))\n            return null;\n    }\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null)\n        return null;\n    extension_context.lint_results.set(lint_cache_key, {is_processing: true});\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, file_path, language_id); // Visual feedback.\n    let detect_trailing_spaces = get_from_config('csv_lint_detect_trailing_spaces', false);\n    let [_records, _num_records_parsed, fields_info, first_defective_line, first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(active_doc, delim, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/false, /*preserve_quotes_and_whitespaces=*/true, detect_trailing_spaces);\n    let is_ok = (first_defective_line === null && fields_info.size <= 1);\n    let lint_result = {'is_ok': is_ok, 'first_defective_line': first_defective_line, 'fields_info': fields_info, 'first_trailing_space_line': first_trailing_space_line};\n    extension_context.lint_results.set(lint_cache_key, lint_result);\n    if (is_manual_op) {\n        // Need timeout here to give user enough time to notice green -> yellow -> green switch, this is a sort of visual feedback.\n        await sleep(500);\n    }\n    ll_rainbow_utils().show_lint_status_bar_button(vscode, extension_context, file_path, language_id); // Visual feedback.\n    return lint_result;\n}\n\n\nasync function csv_lint_cmd() {\n    // TODO re-run on each file save with content change.\n    let lint_report_for_unit_tests = await csv_lint(null, true);\n    return lint_report_for_unit_tests;\n}\n\n\nasync function run_internal_test_cmd(integration_test_options) {\n    if (integration_test_options && integration_test_options.check_initialization_state) {\n        // This mode is to ensure that the most basic operations do not cause rainbow csv to load extra (potentially heavy) code.\n        // Vim uses the same approach with its plugin/autoload folder layout design.\n        return {initialized: global_state !== null, lazy_loaded: rainbow_utils !== null};\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_report) {\n        return _unit_test_last_rbql_report;\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_warnings) {\n        return {'warnings': _unit_test_last_warnings};\n    }\n    return null;\n}\n\n\nasync function show_warnings(warnings) {\n    _unit_test_last_warnings = [];\n    if (!warnings || !warnings.length)\n        return;\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    for (var i = 0; i < warnings.length; i++) {\n        // Do not \"await\" warning messages because the promise gets resolved only on warning dismissal.\n        active_window.showWarningMessage('RBQL warning: ' + warnings[i]);\n    }\n    _unit_test_last_warnings = warnings;\n}\n\n\nasync function handle_rbql_result_file_node(text_doc, delim, policy, warnings) {\n    try {\n        await vscode.window.showTextDocument(text_doc);\n    } catch (error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    let language_id = map_dialect_to_language_id(delim, policy);\n    if (language_id && text_doc.languageId != language_id) {\n        // In non-web version we open a new doc without preset filetype, so we need to manually set it.\n        await vscode.languages.setTextDocumentLanguage(text_doc, language_id);\n    }\n    await show_warnings(warnings);\n}\n\n\nasync function handle_rbql_result_file_web(text_doc, warnings) {\n    try {\n        await vscode.window.showTextDocument(text_doc);\n    } catch (error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    await show_warnings(warnings);\n}\n\n\nfunction run_command(cmd, args, close_and_error_guard, callback_func) {\n    var command = child_process.spawn(cmd, args, {'windowsHide': true});\n    var stdout = '';\n    var stderr = '';\n    command.stdout.on('data', function(data) {\n        stdout += data.toString();\n    });\n    command.stderr.on('data', function(data) {\n        stderr += data.toString();\n    });\n    command.on('close', function(code) {\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(code, stdout, stderr);\n        }\n    });\n    command.on('error', function(error) {\n        var error_msg = error ? error.name + ': ' + error.message : '';\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(1, '', 'Something went wrong. Make sure you have python installed and added to PATH variable in your OS. Or you can use it with JavaScript instead - it should work out of the box\\nDetails:\\n' + error_msg);\n        }\n    });\n}\n\n\nasync function handle_command_result(src_table_path, dst_table_path, dst_delim, dst_policy, error_code, stdout, stderr, webview_report_handler) {\n    let json_report = stdout;\n    let error_type = null;\n    let error_msg = null;\n    let warnings = [];\n    if (error_code || !json_report || stderr) {\n        error_type = 'Integration';\n        error_msg = stderr ? stderr : 'empty error';\n    } else {\n        try {\n            let report = JSON.parse(json_report);\n            if (report.hasOwnProperty('error_type'))\n                error_type = report['error_type'];\n            if (report.hasOwnProperty('error_msg'))\n                error_msg = report['error_msg'];\n            if (report.hasOwnProperty('warnings'))\n                warnings = report['warnings'];\n        } catch (e) {\n            error_type = 'Integration';\n            error_msg = 'Unable to parse JSON report';\n        }\n    }\n    webview_report_handler(error_type, error_msg);\n    if (error_type || error_msg) {\n        return; // Just exit: error would be shown in the preview window.\n    }\n    // No need to close the RBQL console here, better to leave it open so it can be used to quickly adjust the query if needed.\n    extension_context.autodetection_stoplist.add(dst_table_path);\n    result_set_parent_map.set(safe_lower(dst_table_path), src_table_path);\n    extension_context.autodetection_temporarily_disabled_for_rbql = true;\n    let target_language_id = map_dialect_to_language_id(dst_delim, dst_policy);\n    let doc = await vscode.workspace.openTextDocument(dst_table_path);\n    extension_context.autodetection_temporarily_disabled_for_rbql = false;\n    if (target_language_id == DYNAMIC_CSV) {\n        // TODO it would be better to set this before openTextDocument and adjust the logic so this would affect autodetection.\n        extension_context.dynamic_dialect_for_next_request = [dst_delim, dst_policy];\n    }\n    await handle_rbql_result_file_node(doc, dst_delim, dst_policy, warnings);\n    extension_context.dynamic_dialect_for_next_request = null;\n}\n\n\nfunction get_dst_table_name(input_path, output_delim) {\n    var table_name = path.basename(input_path);\n    var orig_extension = path.extname(table_name);\n    var delim_ext_map = {'\\t': '.tsv', ',': '.csv'};\n    var dst_extension = '.txt';\n    if (delim_ext_map.hasOwnProperty(output_delim)) {\n        dst_extension = delim_ext_map[output_delim];\n    } else if (orig_extension.length > 1) {\n        dst_extension = orig_extension;\n    }\n    let result_table_name = table_name + dst_extension;\n    if (result_table_name == table_name) { // Just being paranoid to avoid overwriting input table accidentally when output dir configured to be the same as input.\n        result_table_name += '.txt';\n    }\n    return result_table_name;\n}\n\n\nfunction file_path_to_query_key(file_path) {\n    return (file_path && file_path.indexOf(scratch_buf_marker) != -1) ? scratch_buf_marker : file_path;\n}\n\nfunction get_dst_table_dir(input_table_path) {\n    let rbql_output_dir = get_from_config('rbql_output_dir', 'TMP');\n    if (rbql_output_dir == 'TMP') {\n        return os.tmpdir();\n    } else if (rbql_output_dir == 'INPUT') {\n        return path.dirname(input_table_path);\n    } else {\n        // Return custom directory. If the directory does not exist or isn't writable RBQL itself will report more or less clear error.\n        return rbql_output_dir;\n    }\n}\n\n\nasync function run_rbql_query(input_path, csv_encoding, backend_language, rbql_query, output_dialect, with_headers, webview_report_handler) {\n    last_rbql_queries.set(file_path_to_query_key(input_path), rbql_query);\n    var cmd = 'python';\n    const test_marker = 'test ';\n    let close_and_error_guard = {'process_reported': false};\n\n    let [input_delim, input_policy, comment_prefix] = [rbql_context.delim, rbql_context.policy, rbql_context.comment_prefix];\n    let [output_delim, output_policy] = [input_delim, input_policy];\n    if (output_dialect == 'csv')\n        [output_delim, output_policy] = [',', QUOTED_POLICY];\n    if (output_dialect == 'tsv')\n        [output_delim, output_policy] = ['\\t', SIMPLE_POLICY];\n    rbql_context.output_delim = output_delim;\n    rbql_context.output_policy = output_policy;\n\n    let output_path = is_web_ext ? null : path.join(get_dst_table_dir(input_path), get_dst_table_name(input_path, output_delim));\n\n    if (rbql_query.startsWith(test_marker)) {\n        if (rbql_query.indexOf('nopython') != -1) {\n            cmd = 'nopython';\n        }\n        let args = [absolute_path_map['rbql mock/rbql_mock.py'], rbql_query];\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, output_delim, output_policy, error_code, stdout, stderr, webview_report_handler); });\n        return;\n    }\n    if (backend_language == 'js') {\n        let warnings = [];\n        let result_doc = null;\n        let target_language_id = map_dialect_to_language_id(output_delim, output_policy);\n        try {\n            if (is_web_ext) {\n                let result_lines = await ll_rainbow_utils().rbql_query_web(rbql_query, rbql_context.input_document, input_delim, input_policy, output_delim, output_policy, warnings, with_headers, comment_prefix);\n                let output_doc_cfg = {content: result_lines.join('\\n'), language: target_language_id};\n                if (target_language_id == DYNAMIC_CSV) {\n                    extension_context.dynamic_dialect_for_next_request = [output_delim, output_policy];\n                }\n                extension_context.autodetection_temporarily_disabled_for_rbql = true;\n                result_doc = await vscode.workspace.openTextDocument(output_doc_cfg);\n                extension_context.dynamic_dialect_for_next_request = null;\n                extension_context.autodetection_temporarily_disabled_for_rbql = false;\n                webview_report_handler(null, null);\n                await handle_rbql_result_file_web(result_doc, warnings);\n            } else {\n                let csv_options = {'bulk_read': true};\n                await ll_rainbow_utils().rbql_query_node(global_state, rbql_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, warnings, with_headers, comment_prefix, /*user_init_code=*/'', csv_options);\n                result_set_parent_map.set(safe_lower(output_path), input_path);\n                extension_context.autodetection_temporarily_disabled_for_rbql = true;\n                result_doc = await vscode.workspace.openTextDocument(output_path);\n                extension_context.autodetection_temporarily_disabled_for_rbql = false;\n                webview_report_handler(null, null);\n                if (target_language_id == DYNAMIC_CSV) {\n                    // TODO it would be better to set this before openTextDocument and adjust the logic so this would affect autodetection.\n                    extension_context.dynamic_dialect_for_next_request = [output_delim, output_policy];\n                }\n                await handle_rbql_result_file_node(result_doc, output_delim, output_policy, warnings);\n                extension_context.dynamic_dialect_for_next_request = null;\n            }\n        } catch (e) {\n            let [error_type, error_msg] = ll_rbql_csv().exception_to_error_info(e);\n            webview_report_handler(error_type, error_msg);\n            return;\n        }\n    } else {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'Python backend for RBQL is not supported in web version, please use JavaScript backend.');\n            return;\n        }\n        let cmd_safe_query = Buffer.from(rbql_query, \"utf-8\").toString(\"base64\");\n        if (!comment_prefix) {\n            comment_prefix = '';\n        }\n        let args = [absolute_path_map['rbql_core/vscode_rbql.py'], cmd_safe_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, comment_prefix, csv_encoding];\n        if (with_headers)\n            args.push('--with_headers');\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, output_delim, output_policy, error_code, stdout, stderr, webview_report_handler); });\n    }\n}\n\n\nasync function set_header_line() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n\n    let [delim, policy, _comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        show_single_line_error('Unable to set header line: no separator specified');\n        return;\n    }\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to set header line for non-file documents');\n        return;\n    }\n    let selection = active_editor.selection;\n    let header_line = selection.start.line;\n    let raw_header = active_doc.lineAt(header_line).text;\n    let header = csv_utils.smart_split(raw_header, delim, policy, false)[0];\n\n    // The advantage of saving the parsed list of column names is that it would stay consistent even if some lines are added/deleted before the header line (line migration).\n    // The advantage of saving the line number is that it is resilient to modifications of header line itself.\n    // It is also possible to verify consistency of header line and header column names and return null if they are inconsistent and return null.\n    // But discarding the inconsistent header line is probably not very obvious and user-friendly way of handling this.\n    // Showing the inconsistent header is probably better since these column names are only used for UI/readability and a wrong sticky line obviously hints on what happened and how to fix it, while a suddenly disappeared sticky line could be seen as a bug.\n    await save_to_global_state(make_header_key(file_path), {header_line_num: header_line, header: header});\n    // Re-register sticky header provider because otherwise it won't re-generate the symbols unless there were no edits to the file.\n    register_sticky_header_provider(/*force=*/true);\n}\n\n\nfunction preserve_original_language_id_if_needed(file_path, original_language_id, original_language_ids) {\n    if (original_language_id == DYNAMIC_CSV) {\n        // This is to prevent invalid noop \"dynamic csv\" -> \"dynamic csv\" switch without carying dialect info.\n        return;\n    }\n    if (original_language_ids.has(file_path)) {\n        // Rainbow Off should act more like an actuall off i.e. return to the first filetype in the chain instead of the previous one.\n        return;\n    }\n    original_language_ids.set(file_path, original_language_id);\n}\n\n\nasync function manually_set_rainbow_separator(policy=null) {\n    // The effect of manually setting the separator will disapear in the preview mode when the file is toggled in preview tab: see https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let selection = active_editor.selection;\n    if (!selection) {\n        show_single_line_error(\"Selection is empty\");\n        return;\n    }\n    if (selection.start.line != selection.end.line) {\n        show_single_line_error(\"Rainbow separator must not span multiple lines\");\n        return;\n    }\n    let separator = active_doc.lineAt(selection.start.line).text.substring(selection.start.character, selection.end.character);\n    if (!separator) {\n        show_single_line_error(\"Make nonempty separator selection with the cursor\");\n        return;\n    }\n    if (policy == QUOTED_RFC_POLICY && separator != ',' && separator != ';') {\n        show_single_line_error(\"Only comma and semicolon separators are currently supported to use with multiline fields.\");\n        return;\n    }\n    if (policy === null) {\n        policy = get_default_policy(separator);\n    }\n    let language_id = map_dialect_to_language_id(separator, policy);\n    // Adding to stoplist just in case: this is the manual op, so the user now fully controls the filetype.\n    extension_context.autodetection_stoplist.add(active_doc.fileName);\n    if (language_id == DYNAMIC_CSV) {\n        extension_context.dynamic_document_dialects.set(active_doc.fileName, {delim: separator, policy: policy});\n    }\n    let original_language_id = active_doc.languageId;\n    if (original_language_id == DYNAMIC_CSV && language_id == DYNAMIC_CSV) {\n        // We need to somehow explicitly re-tokenize file, because otherwise setTextDocumentLanguage would be a NO-OP, so we do this workaround with temporarily switching to plaintext and back.\n        extension_context.autodetection_stoplist.add(active_doc.fileName); // This is to avoid potential autodetection in plaintext.\n        extension_context.autodetection_temporarily_disabled_for_rbql = true;\n        active_doc = await vscode.languages.setTextDocumentLanguage(active_doc, 'plaintext');\n        extension_context.autodetection_temporarily_disabled_for_rbql = false;\n    }\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, language_id);\n    preserve_original_language_id_if_needed(doc.fileName, original_language_id, extension_context.original_language_ids);\n}\n\n\nasync function set_comment_prefix() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let selection = active_editor.selection;\n    if (!selection) {\n        show_single_line_error(\"Selection is empty\");\n        return;\n    }\n    let comment_prefix = active_doc.lineAt(selection.start.line).text.substring(selection.start.character, selection.end.character);\n    extension_context.custom_comment_prefixes.set(active_doc.fileName, comment_prefix);\n    if (!comment_prefix) {\n        manual_comment_prefix_stoplist.add(active_doc.fileName);\n    } else {\n        manual_comment_prefix_stoplist.delete(active_doc.fileName);\n    }\n    if (comment_prefix) {\n        vscode.languages.setLanguageConfiguration(active_doc.languageId, { comments: { lineComment: comment_prefix } });\n    }\n    if (active_doc.languageId == DYNAMIC_CSV) {\n        // Re-enable tokenization to explicitly trigger the highligthing. Sometimes this doesn't happen automatically.\n        enable_dynamic_semantic_tokenization();\n    } else {\n        // Re-enable comment tokenization to explicitly adjust the comment highligthing (sometimes to disable it if comment prefix is set to an empty string).\n        register_comment_tokenization_handler();\n    }\n}\n\n\nasync function restore_original_language() {\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    extension_context.autodetection_stoplist.add(file_path);\n    let original_language_id = 'plaintext';\n    if (extension_context.original_language_ids.has(file_path)) {\n        original_language_id = extension_context.original_language_ids.get(file_path);\n    }\n    if (!original_language_id || original_language_id == active_doc.languageId) {\n        show_single_line_error(\"Unable to restore original language\");\n        return;\n    }\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, original_language_id);\n    extension_context.original_language_ids.delete(file_path);\n    disable_rainbow_features_if_non_csv(doc);\n    // If the previous language is restored via native VSCode filetype selection the custom dialect info will be kept and in case of future manual Dynamic CSV selection the highlighting will be automatically activated without separator entry dialog.\n    extension_context.dynamic_document_dialects.delete(file_path);\n}\n\n\nasync function set_join_table_name() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to use this document as join table');\n        return;\n    }\n    var title = \"Input table name to use in RBQL JOIN expressions instead of table path\";\n    var input_box_props = {\"prompt\": title, \"value\": 'b'};\n    let table_name = await vscode.window.showInputBox(input_box_props);\n    if (!table_name)\n        return; // User pressed Esc and closed the input box.\n    await save_to_global_state(ll_rainbow_utils().make_table_name_key(table_name), file_path);\n}\n\n\nasync function set_virtual_header() {\n    var active_doc = get_active_doc();\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        show_single_line_error('Unable to set virtual header: no separator specified');\n        return;\n    }\n    var file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to edit column names for non-file documents');\n        return;\n    }\n    var old_header = get_header(active_doc, delim, policy, comment_prefix);\n    var title = \"Adjust column names displayed in hover tooltips. Actual header line and file content won't be affected.\";\n    var old_header_str = old_header ? quoted_join(old_header, delim) : '';\n    var input_box_props = {\"prompt\": title, \"value\": old_header_str};\n    let raw_new_header = await vscode.window.showInputBox(input_box_props);\n    if (!raw_new_header)\n        return; // User pressed Esc and closed the input box.\n    let new_header = csv_utils.smart_split(raw_new_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), {header_line_num: null, header: new_header});\n}\n\n\nasync function column_edit(edit_mode) {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let position = ll_rainbow_utils().get_cursor_position_if_unambiguous(active_editor);\n    if (!position) {\n        show_single_line_error('Unable to enter column edit mode: make sure that no text is selected and only one cursor is active');\n        return;\n    }\n    if (active_doc.lineCount >= 10000) {\n        show_single_line_error('Multicursor column edit works only for files smaller than 10000 lines.');\n        return;\n    }\n    let col_num = (ll_rainbow_utils().get_cursor_position_info(vscode, active_doc, delim, policy, comment_prefix, position)).column_number;\n    let [selections, error_msg, warning_msg] = ll_rainbow_utils().generate_column_edit_selections(vscode, active_doc, delim, policy, comment_prefix, edit_mode, col_num);\n    if (error_msg !== null) {\n        show_single_line_error(error_msg);\n        return;\n    }\n    if (warning_msg) {\n        vscode.window.showWarningMessage(warning_msg);\n    }\n    active_editor.selections = selections;\n    // Call showTextDocument so that the editor will gain focus and the cursors will become active and blinking. This is a critical step here!\n    await vscode.window.showTextDocument(active_doc);\n}\n\n\nasync function shrink_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        await report_progress(progress, 'Preparing');\n        let [shrinked_doc_text, first_failed_line] = ll_rainbow_utils().shrink_columns(active_doc, delim, policy, comment_prefix);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to shrink: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        aligned_files.delete(active_doc.fileName);\n        show_align_shrink_button(active_doc.fileName);\n        if (shrinked_doc_text === null) {\n            vscode.window.showWarningMessage('No trailing whitespaces found, skipping');\n            return;\n        }\n        await report_progress(progress, 'Shrinking columns');\n        await replace_doc_content(active_editor, active_doc, shrinked_doc_text);\n    });\n}\n\n\nasync function align_table() {\n    let active_editor = get_active_editor();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        return;\n    }\n    let progress_options = {location: vscode.ProgressLocation.Window, title: 'Rainbow CSV'};\n    await vscode.window.withProgress(progress_options, async (progress) => {\n        await report_progress(progress, 'Calculating column statistics');\n        let double_width_alignment = get_from_config('double_width_alignment', true);\n        let [column_stats, first_failed_line, records, comments] = ll_rainbow_utils().calc_column_stats(active_doc, delim, policy, comment_prefix, double_width_alignment);\n        if (first_failed_line) {\n            show_single_line_error(`Unable to align: Inconsistent double quotes at line ${first_failed_line}`);\n            return;\n        }\n        column_stats = ll_rainbow_utils().adjust_column_stats(column_stats, delim.length);\n        if (column_stats === null) {\n            show_single_line_error('Unable to allign: Internal Rainbow CSV Error');\n            return;\n        }\n        await report_progress(progress, 'Preparing final alignment');\n        let aligned_doc_text = ll_rainbow_utils().align_columns(records, comments, column_stats, delim);\n\n        await report_progress(progress, 'Aligning columns');\n        let align_in_scratch_file = get_from_config('align_in_scratch_file', false);\n        let is_scratch_file = active_doc.uri && active_doc.uri.scheme == 'untitled';\n        if (align_in_scratch_file && !is_scratch_file) {\n            let aligned_doc_cfg = {content: aligned_doc_text, language: language_id};\n            let scratch_doc = await vscode.workspace.openTextDocument(aligned_doc_cfg);\n            aligned_files.add(scratch_doc.fileName);\n            await vscode.window.showTextDocument(scratch_doc);\n            show_align_shrink_button(scratch_doc.fileName); // This is likely redundant but won't hurt.\n        } else {\n            await replace_doc_content(active_editor, active_doc, aligned_doc_text);\n            aligned_files.add(active_doc.fileName);\n            show_align_shrink_button(active_doc.fileName);\n        }\n    });\n}\n\n\nasync function do_copy_back(query_result_doc, active_editor) {\n    let data = query_result_doc.getText();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    await replace_doc_content(active_editor, active_doc, data);\n}\n\n\nasync function copy_back() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    let result_doc = get_active_doc();\n    if (!result_doc)\n        return;\n    let file_path = result_doc.fileName;\n    let parent_table_path = result_set_parent_map.get(safe_lower(file_path));\n    if (!parent_table_path)\n        return;\n    let parent_doc = await vscode.workspace.openTextDocument(parent_table_path);\n    let parent_editor = await vscode.window.showTextDocument(parent_doc);\n    await do_copy_back(result_doc, parent_editor);\n}\n\n\nasync function update_query_history(query) {\n    let history_list = get_from_global_state('rbql_query_history', []);\n    let old_index = history_list.indexOf(query);\n    if (old_index != -1) {\n        history_list.splice(old_index, 1);\n    } else if (history_list.length >= 20) {\n        history_list.splice(0, 1);\n    }\n    history_list.push(query);\n    await save_to_global_state('rbql_query_history', history_list);\n}\n\n\nasync function handle_rbql_client_message(webview, message, integration_test_options=null) {\n    let message_type = message['msg_type'];\n\n    let webview_report_handler = async function(error_type, error_msg) {\n        let report_msg = {'msg_type': 'rbql_report'};\n        if (error_type)\n            report_msg[\"error_type\"] = error_type;\n        if (error_msg)\n            report_msg[\"error_msg\"] = error_msg;\n        _unit_test_last_rbql_report = report_msg;\n        await webview.postMessage(report_msg);\n    };\n\n    if (message_type == 'handshake') {\n        var backend_language = get_from_global_state('rbql_backend_language', 'js');\n        var encoding = get_from_global_state('rbql_encoding', 'utf-8');\n        var init_msg = {'msg_type': 'handshake', 'backend_language': backend_language, 'encoding': encoding};\n        ll_rainbow_utils().sample_preview_records_from_context(rbql_context, init_msg, preview_window_size, cached_table_parse_result);\n        let path_key = file_path_to_query_key(rbql_context.input_document_path);\n        if (last_rbql_queries.has(path_key))\n            init_msg['last_query'] = last_rbql_queries.get(path_key);\n        let history_list = get_from_global_state('rbql_query_history', []);\n        init_msg['query_history'] = history_list;\n        init_msg['policy'] = rbql_context.policy;\n        init_msg['with_headers'] = rbql_context.with_headers;\n        init_msg['header_for_ui'] = rbql_context.header_for_ui;\n        init_msg['is_web_ext'] = is_web_ext;\n        if (integration_test_options) {\n            init_msg['integration_test_language'] = integration_test_options.rbql_backend;\n            init_msg['integration_test_query'] = integration_test_options.rbql_query;\n            init_msg['integration_test_with_headers'] = integration_test_options.with_headers || false;\n            init_msg['integration_test_delay'] = integration_test_options.integration_test_delay || 2000;\n        }\n        await webview.postMessage(init_msg);\n    }\n\n    if (message_type == 'fetch_table_header') {\n        try {\n            let table_id = message['table_id'];\n            let encoding = message['encoding'];\n\n            let input_table_dir = rbql_context.input_document_path ? path.dirname(rbql_context.input_document_path) : null;\n            let table_path = ll_rainbow_utils().find_table_path(global_state, input_table_dir, table_id);\n            if (!table_path)\n                return;\n            let header_line = await ll_rainbow_utils().read_header(table_path, encoding);\n            if (!header_line) {\n                return;\n            }\n            let [fields, warning] = csv_utils.smart_split(header_line, rbql_context.delim, rbql_context.policy, false);\n            if (!warning) {\n                webview.postMessage({'msg_type': 'fetch_table_header_response', 'header_for_ui': fields});\n            }\n        } catch (e) {\n            console.error('Unable to get join table header: ' + String(e));\n        }\n    }\n\n    if (message_type == 'update_query') {\n        let rbql_query = message['query'];\n        if (!rbql_query)\n            return;\n        if (rbql_context.input_document_path)\n            last_rbql_queries.set(file_path_to_query_key(rbql_context.input_document_path), rbql_query);\n    }\n\n    if (message_type == 'with_headers_change') {\n        rbql_context.with_headers = message['with_headers'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_with_headers_key(rbql_context.input_document_path), rbql_context.with_headers);\n    }\n\n    if (message_type == 'navigate') {\n        var navig_direction = message['direction'];\n        if (navig_direction == 'backward') {\n            rbql_context.requested_start_record -= preview_window_size;\n        } else if (navig_direction == 'forward') {\n            rbql_context.requested_start_record += preview_window_size;\n        } else if (navig_direction == 'begin') {\n            rbql_context.requested_start_record = 0;\n        } else if (navig_direction == 'end') {\n            rbql_context.requested_start_record = rbql_context.input_document.lineCount; // This is just max possible value which is incorrect and will be adjusted later.\n        }\n        let protocol_message = {'msg_type': 'navigate'};\n        ll_rainbow_utils().sample_preview_records_from_context(rbql_context, protocol_message, preview_window_size, cached_table_parse_result);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'run') {\n        let rbql_query = message['query'];\n        let backend_language = message['backend_language'];\n        let encoding = message['encoding'];\n        let output_dialect = message['output_dialect'];\n        let with_headers = message['with_headers'];\n        await update_query_history(rbql_query);\n        await run_rbql_query(rbql_context.input_document_path, encoding, backend_language, rbql_query, output_dialect, with_headers, webview_report_handler);\n    }\n\n    if (message_type == 'edit_udf') {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'UDFs are currently not supported in web version');\n            return;\n        }\n        let backend_language = message['backend_language'];\n        let udf_file_path = null;\n        let default_content = '';\n        if (backend_language == 'js') {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.js');\n            default_content = ll_rainbow_utils().get_default_js_udf_content();\n        } else {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.py');\n            default_content = ll_rainbow_utils().get_default_python_udf_content();\n        }\n        if (!fs.existsSync(udf_file_path)) {\n            fs.writeFileSync(udf_file_path, default_content);\n        }\n        let udf_doc = await vscode.workspace.openTextDocument(udf_file_path);\n        await vscode.window.showTextDocument(udf_doc);\n    }\n\n    if (message_type == 'global_param_change') {\n        await save_to_global_state(message['key'], message['value']);\n    }\n}\n\n\nfunction adjust_webview_paths(paths_list, client_html) {\n    for (const local_path of paths_list) {\n        let adjusted_webview_url = null;\n        if (is_web_ext) {\n            adjusted_webview_url = absolute_path_map[local_path];\n        } else {\n            adjusted_webview_url = preview_panel.webview.asWebviewUri(vscode.Uri.file(absolute_path_map[local_path]));\n        }\n        client_html = client_html.replace(`src=\"${local_path}\"`, `src=\"${adjusted_webview_url}\"`);\n    }\n    return client_html;\n}\n\n\nasync function edit_rbql(integration_test_options=null) {\n    let active_window = vscode.window;\n    if (!active_window)\n        return;\n    let active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let orig_uri = active_doc.uri;\n    if (!orig_uri)\n        return;\n    // For web orig_uri.scheme can have other valid values e.g. `vscode-test-web` when testing the browser integration.\n    if (orig_uri.scheme != 'file' && orig_uri.scheme != 'untitled' && !is_web_ext)\n        return;\n    if (orig_uri.scheme == 'file' && active_doc.isDirty && !is_web_ext) {\n        show_single_line_error(\"Unable to run RBQL: file has unsaved changes\");\n        return;\n    }\n    let input_path = null;\n    if (orig_uri.scheme == 'untitled' && !is_web_ext) {\n        // Scheme 'untitled' means that the document is a scratch buffer that hasn't been saved yet, see https://code.visualstudio.com/api/references/document-selector\n        let data = active_doc.getText();\n        let rnd_suffix = String(Math.floor(Math.random() * 1000000));\n        input_path = path.join(os.tmpdir(), `${scratch_buf_marker}_${rnd_suffix}.txt`);\n        // TODO consider adding username to the input_path and using chmod 600 on it.\n        fs.writeFileSync(input_path, data);\n    } else {\n        input_path = active_doc.fileName;\n    }\n\n    if (!input_path) {\n        show_single_line_error(\"Unable to run RBQL for this file\");\n        return;\n    }\n\n    let [delim, policy, comment_prefix] = get_dialect(active_doc);\n    if (policy === null) {\n        policy = 'monocolumn';\n        delim = 'monocolumn';\n    }\n    let with_headers_by_default = get_from_config('rbql_with_headers_by_default', false);\n    let with_headers = get_from_global_state(make_with_headers_key(input_path), with_headers_by_default);\n    let header_for_ui = get_header_from_document(active_doc, delim, policy, comment_prefix);\n    rbql_context = {\n        \"input_document\": active_doc,\n        \"input_document_path\": input_path,\n        \"requested_start_record\": 0,\n        \"delim\": delim,\n        \"policy\": policy,\n        \"comment_prefix\": comment_prefix,\n        \"with_headers\": with_headers,\n        \"header_for_ui\": header_for_ui\n    };\n\n    preview_panel = vscode.window.createWebviewPanel('rbql-console', 'RBQL Console', vscode.ViewColumn.Active, {enableScripts: true});\n    if (!client_html_template) {\n        if (is_web_ext) {\n            client_html_template = client_html_template_web;\n        } else {\n            client_html_template = fs.readFileSync(absolute_path_map['rbql_client.html'], \"utf8\");\n        }\n    }\n    let client_html = client_html_template;\n    client_html = adjust_webview_paths(['contrib/textarea-caret-position/index.js', 'rbql_suggest.js', 'rbql_client.js', 'rbql_logo.svg'], client_html);\n    preview_panel.webview.html = client_html;\n    preview_panel.webview.onDidReceiveMessage(function(message) { handle_rbql_client_message(preview_panel.webview, message, integration_test_options); });\n}\n\n\nfunction autodetect_dialect(config, active_doc, candidate_separators, comment_prefix) {\n    let candidate_dialects = [];\n    for (let separator of candidate_separators) {\n        let policy = get_default_policy(separator);\n        let dialect_id = map_dialect_to_language_id(separator, policy);\n        if (!dialect_id || !policy)\n            continue;\n        candidate_dialects.push([dialect_id, separator, policy]);\n        if (separator == ',' || separator == ';') {\n            candidate_dialects.push([DYNAMIC_CSV, separator, QUOTED_RFC_POLICY]);\n        }\n    }\n    let detect_trailing_spaces = get_from_config('csv_lint_detect_trailing_spaces', false, config);\n    let min_num_lines = get_from_config('autodetection_min_line_count', 10, config);\n    if (active_doc.lineCount < min_num_lines)\n        return [null, null, null];\n    let [best_dialect, best_separator, best_policy, best_dialect_first_trailing_space_line] = [null, null, null, null];\n    let best_dialect_num_columns = 1;\n    for (let candidate_dialect of candidate_dialects) {\n        let [dialect_id, separator, policy] = candidate_dialect;\n        let [_records, num_records_parsed, fields_info, first_defective_line, first_trailing_space_line, _comments] = fast_load_utils.parse_document_records(active_doc, separator, policy, comment_prefix, /*stop_on_warning=*/true, /*max_records_to_parse=*/-1, /*collect_records=*/false, /*preserve_quotes_and_whitespaces=*/true, detect_trailing_spaces, /*min_num_fields_for_autodetection=*/best_dialect_num_columns + 1);\n        if (first_defective_line !== null || fields_info.size != 1)\n            continue;\n        if (num_records_parsed < min_num_lines) {\n            // Ensure that min_num_lines also applies to number of parsed records. There could be a discrepancy between number of lines and records due to comment lines and/or multiline rfc records.\n            continue;\n        }\n        let num_columns = Array.from(fields_info.keys())[0];\n        if (num_columns >= best_dialect_num_columns + 1) {\n            best_dialect_num_columns = num_columns;\n            [best_dialect, best_separator, best_policy] = [dialect_id, separator, policy];\n            best_dialect_first_trailing_space_line = first_trailing_space_line;\n        }\n    }\n    return [best_dialect, best_separator, best_policy, best_dialect_first_trailing_space_line];\n}\n\n\nfunction autodetect_dialect_frequency_based(active_doc, candidate_separators, max_num_chars_to_test) {\n    let [best_dialect, best_separator, best_policy] = ['csv', ',', QUOTED_POLICY];\n    let best_dialect_frequency = 0;\n    let data = active_doc.getText();\n    if (!data)\n        return [best_dialect, best_separator, best_policy];\n    for (let separator of candidate_separators) {\n        if (separator == ' ' || separator == '.')\n            continue; // Whitespace and dot have advantage over other separators in this algorithm, so we just skip them.\n        let frequency = 0;\n        for (let j = 0; j < max_num_chars_to_test && j < data.length; j++) {\n            if (data[j] == separator)\n                frequency += 1;\n        }\n        if (frequency > best_dialect_frequency) {\n            let policy = get_default_policy(separator);\n            let dialect_id = map_dialect_to_language_id(separator, policy);\n            [best_dialect, best_separator, best_policy] = [dialect_id, separator, policy];\n            best_dialect_frequency = frequency;\n        }\n    }\n    return [best_dialect, best_separator, best_policy];\n}\n\n\nasync function try_autoenable_rainbow_csv(vscode, config, extension_context, active_doc) {\n    // VSCode to some extent is capable of \"remembering\" doc id in the previous invocation, at least when used in debug mode.\n\n    // VSCode may (and will?) forget documentId of a document \"A\" if document \"B\" is opened in the tab where \"A\" was (double VS single click in file browser panel).\n    // see https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode\n    if (extension_context.autodetection_temporarily_disabled_for_rbql)\n        return active_doc;\n    if (!active_doc)\n        return active_doc;\n    if (!get_from_config('enable_separator_autodetection', false, config))\n        return active_doc;\n    let candidate_separators = get_from_config('autodetect_separators', [], config).map((s) => s === 'TAB' ? '\\t' : s);\n    var original_language_id = active_doc.languageId;\n    var file_path = active_doc.fileName;\n    if (!file_path || extension_context.autodetection_stoplist.has(file_path) || file_path.endsWith('.git')) { // For some reason there are some ghost '.git' files. TODO figure this out!\n        return active_doc;\n    }\n    let is_default_csv = file_path.endsWith('.csv') && original_language_id == 'csv';\n    if (original_language_id != 'plaintext' && !is_default_csv)\n        return active_doc;\n    let comment_prefix_for_autodetection = get_from_config('comment_prefix', '', config) || '#'; // Assume '#' as a comment prefix for autodetection purposes only.\n    let [rainbow_csv_language_id, delim, policy, first_trailing_space_line] = autodetect_dialect(config, active_doc, candidate_separators, comment_prefix_for_autodetection);\n    if (rainbow_csv_language_id) {\n        // Add the file to lint results to avoid re-parsing it with CSV Lint later.\n        extension_context.lint_results.set(`${active_doc.fileName}.${rainbow_csv_language_id}`, {'is_ok': true, 'first_trailing_space_line': first_trailing_space_line});\n    } else if (!rainbow_csv_language_id && is_default_csv) {\n        // Smart autodetection method has failed, but we need to choose a separator because this is a csv file. Let's just find the most popular one within the first N characters.\n        [rainbow_csv_language_id, delim, policy] = autodetect_dialect_frequency_based(active_doc, candidate_separators, /*max_num_chars_to_test=*/10000);\n    }\n    if (!rainbow_csv_language_id)\n        return active_doc;\n    // Intentionally do not store comment prefix used for autodetection in the dialect info since it is not file-specific anyway and is stored in the settings.\n    // And in case if user changes it in the settings it would immediately affect the autodetected files.\n    if (rainbow_csv_language_id == DYNAMIC_CSV)  {\n        extension_context.dynamic_document_dialects.set(active_doc.fileName, {delim: delim, policy: policy});\n    }\n    if (rainbow_csv_language_id == original_language_id)\n        return active_doc;\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    preserve_original_language_id_if_needed(file_path, original_language_id, extension_context.original_language_ids);\n    return doc;\n}\n\n\nasync function handle_first_edit_for_an_empty_doc(change_event) {\n    if (!change_event)\n        return;\n    if (doc_first_edit_subscription) {\n        doc_first_edit_subscription.dispose();\n        doc_first_edit_subscription = null;\n    }\n    await try_autoenable_rainbow_csv(vscode, vscode.workspace.getConfiguration('rainbow_csv'), extension_context, change_event.document);\n}\n\n\nfunction register_csv_copy_paste_for_empty_doc(active_doc) {\n    if (!get_from_config('enable_separator_autodetection', false))\n        return;\n    if (!active_doc || doc_first_edit_subscription)\n        return;\n    if (!active_doc.isUntitled && active_doc.lineCount != 0)\n        return;\n    doc_first_edit_subscription = vscode.workspace.onDidChangeTextDocument(handle_first_edit_for_an_empty_doc);\n}\n\n\nasync function handle_editor_switch(editor) {\n    let active_doc = get_active_doc(editor);\n    disable_rainbow_features_if_non_csv(active_doc);\n    await enable_rainbow_features_if_csv(active_doc); // No-op if non-csv.\n}\n\n\nfunction do_handle_cursor_movement() {\n    if (!show_column_info_button() && column_info_button) {\n        column_info_button.hide();\n    }\n}\n\n\nfunction handle_cursor_movement(_unused_cursor_event) {\n    if (cursor_timeout_handle !== null) {\n        clearTimeout(cursor_timeout_handle);\n    }\n    // We need timeout delay here to deduplicate/debounce events from multiple consecutive movements, see https://stackoverflow.com/a/49050990/2898283.\n    cursor_timeout_handle = setTimeout(() => do_handle_cursor_movement(), 10);\n}\n\n\nasync function handle_doc_open(active_doc) {\n    // The onDidOpenTextDocument handler will trigger for already \"opened\" docs too if they are re-opened in the same tab. Example\n    // Document \"A\" opens in tab1 -> triggers onDidOpenTextDocument\n    // Document \"B\" opens in tab1 -> triggers onDidOpenTextDocument  (this could happen if user clicks on document \"B\" in the left file browser panel)\n    // Document \"A\" opens in tab1 -> triggers onDidOpenTextDocument again! The previous languageId is reset.\n    // In other words if user opens a different document in the same tab (single click VS double click in the file browser panel) it may trigger the curent document closing and opening of a new doc.\n    // This behavior is called Preview Mode, see https://vscode.one/new-tab-vscode/ and https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode\n\n    // We got an invalid document object, processing will lead to null access errors below\n    if (!active_doc || !active_doc.uri) {\n        return;\n    }\n\n    if (active_doc.uri.scheme != 'file' && active_doc.uri.scheme != 'untitled' && active_doc.uri.scheme != 'vscode-test-web') {\n        // Current document has unknown file scheme. One reason for this could be that it was created by another extension, see https://code.visualstudio.com/api/extension-guides/virtual-documents#events-and-visibility and https://github.com/mechatroner/vscode_rainbow_csv/issues/123\n        // \"vscode-test-web\" scheme is used for browser unit tests.\n        return;\n    }\n    register_csv_copy_paste_for_empty_doc(active_doc);\n    active_doc = await try_autoenable_rainbow_csv(vscode, vscode.workspace.getConfiguration('rainbow_csv'), extension_context, active_doc);\n    disable_rainbow_features_if_non_csv(active_doc);\n    await enable_rainbow_features_if_csv(active_doc); // No-op if non-csv.\n}\n\n\nfunction quote_field(field, delim) {\n    if (field.indexOf('\"') != -1 || field.indexOf(delim) != -1) {\n        return '\"' + field.replace(/\"/g, '\"\"') + '\"';\n    }\n    return field;\n}\n\n\nfunction quoted_join(fields, delim) {\n    var quoted_fields = fields.map(function(val) { return quote_field(val, delim); });\n    return quoted_fields.join(delim);\n}\n\n\nasync function make_preview(uri, preview_mode) {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var file_path = uri.fsPath;\n    if (!file_path || !fs.existsSync(file_path)) {\n        vscode.window.showErrorMessage('Invalid file');\n        return;\n    }\n\n    var size_limit = 1024000; // ~1MB\n    var file_size_in_bytes = fs.statSync(file_path)['size'];\n    if (file_size_in_bytes <= size_limit) {\n        vscode.window.showWarningMessage('Rainbow CSV: The file is not big enough, showing the full file instead. Use this preview for files larger than 1MB');\n        let full_orig_doc = await vscode.workspace.openTextDocument(file_path);\n        await vscode.window.showTextDocument(full_orig_doc);\n        return;\n    }\n\n    let file_basename = path.basename(file_path);\n    const out_path = path.join(os.tmpdir(), `.rb_csv_preview.${preview_mode}.${file_basename}`);\n\n    fs.open(file_path, 'r', (err, fd) => {\n        if (err) {\n            console.log(err.message);\n            vscode.window.showErrorMessage('Unable to preview file');\n            return;\n        }\n\n        var buffer = Buffer.alloc(size_limit);\n        let read_begin_pos = preview_mode == 'head' ? 0 : Math.max(file_size_in_bytes - size_limit, 0);\n        fs.read(fd, buffer, 0, size_limit, read_begin_pos, function(err, _num) {\n            if (err) {\n                console.log(err.message);\n                vscode.window.showErrorMessage('Unable to preview file');\n                return;\n            }\n\n            const buffer_str = buffer.toString();\n            // TODO handle old mac '\\r' line endings - still used by Mac version of Excel.\n            let content = null;\n            if (preview_mode == 'head') {\n                content = buffer_str.substr(0, buffer_str.lastIndexOf(buffer_str.includes('\\r\\n') ? '\\r\\n' : '\\n'));\n            } else {\n                content = buffer_str.substr(buffer_str.indexOf('\\n') + 1);\n            }\n            fs.writeFileSync(out_path, content);\n            vscode.workspace.openTextDocument(out_path).then(doc => vscode.window.showTextDocument(doc));\n        });\n    });\n}\n\n\nfunction register_csv_hover_info_provider(language_id, context) {\n    let hover_provider = vscode.languages.registerHoverProvider(language_id, {\n        provideHover(document, position, token) {\n            return make_hover(document, language_id, position, token);\n        }\n    });\n    context.subscriptions.push(hover_provider);\n}\n\n\nclass RainbowTokenProvider {\n    // We don't utilize typescript `implement` interface keyword, because TS doesn't seem to be exporting interfaces to JS (unlike classes).\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(document, range, _token) {\n        let [delim, policy, comment_prefix] = get_dialect(document);\n        if (!policy || document.languageId != DYNAMIC_CSV) {\n            return null;\n        }\n        let table_ranges = ll_rainbow_utils().parse_document_range(vscode, document, delim, policy, comment_prefix, range);\n        // Create a new builder to clear the previous tokens.\n        const builder = new vscode.SemanticTokensBuilder(tokens_legend);\n        for (let row_info of table_ranges) {\n            if (row_info.hasOwnProperty('comment_range')) {\n                builder.push(row_info.comment_range, 'comment');\n            } else {\n                for (let col_num = 0; col_num < row_info.record_ranges.length; col_num++) {\n                    for (let record_range of row_info.record_ranges[col_num]) {\n                        // One logical field can map to multiple tokens if it spans multiple lines because VSCode doesn't support multiline tokens.\n                        builder.push(record_range, tokenTypes[col_num % tokenTypes.length]);\n                    }\n                }\n            }\n        }\n        return builder.build();\n    }\n}\n\n\nclass CommentTokenProvider {\n    constructor() {\n    }\n    async provideDocumentRangeSemanticTokens(doc, range, _token) {\n        let [_delim, policy, comment_prefix] = get_dialect(doc);\n        if (manual_comment_prefix_stoplist.has(doc.fileName) && !comment_prefix) {\n            // We can't use empty comment prefix (and early return) - in that case the previous highlighting would not go away due to a VSCode quirk, need to make an empty build instead to make sure that all previously highlighted lines were cleared.\n            comment_prefix = '#####COMMENT_PREFIX_THAT_CAN_NOT_OCCURE_IN_A_NORMAL_FILE_AND_EVEN_IF_IT_OCCURES_NOT_A_BIG_DEAL####';\n        }\n        if (!comment_prefix || policy === null || policy == QUOTED_RFC_POLICY) {\n            return null; // Sanity check: with QUOTED_RFC_POLICY we should be using a different tokenizer which also handles comments.\n        }\n        // Create a new builder to clear the previous tokens.\n        const builder = new vscode.SemanticTokensBuilder(tokens_legend);\n        let begin_line = Math.max(0, range.start.line - dynamic_csv_highlight_margin);\n        let end_line = Math.min(doc.lineCount, range.end.line + dynamic_csv_highlight_margin);\n        for (let lnum = begin_line; lnum < end_line; lnum++) {\n            let line_text = doc.lineAt(lnum).text;\n            if (line_text.startsWith(comment_prefix)) {\n                builder.push(new vscode.Range(lnum, 0, lnum, line_text.length), 'comment');\n            }\n        }\n        return builder.build();\n    }\n}\n\n\nasync function activate(context) {\n    // TODO consider storing `context` itself in a global variable.\n    global_state = context.globalState;\n\n    if (is_web_ext) {\n        let rbql_client_uri = vscode.Uri.joinPath(context.extensionUri, 'rbql_client.html');\n        let bytes = await vscode.workspace.fs.readFile(rbql_client_uri);\n        // Using TextDecoder because it should work fine in web extension.\n        client_html_template_web = new TextDecoder().decode(bytes);\n    }\n\n    for (let local_path in absolute_path_map) {\n        if (absolute_path_map.hasOwnProperty(local_path)) {\n            if (is_web_ext) {\n                absolute_path_map[local_path] = vscode.Uri.joinPath(context.extensionUri, local_path);\n            } else {\n                absolute_path_map[local_path] = context.asAbsolutePath(local_path);\n            }\n        }\n    }\n\n    if (get_from_config('enable_tooltip', false)) {\n        for (let language_id in dialect_map) {\n            if (dialect_map.hasOwnProperty(language_id)) {\n                register_csv_hover_info_provider(language_id, context);\n            }\n        }\n    }\n\n    var lint_cmd = vscode.commands.registerCommand('rainbow-csv.CSVLint', csv_lint_cmd);\n    var rbql_cmd = vscode.commands.registerCommand('rainbow-csv.RBQL', edit_rbql);\n    var set_header_line_cmd = vscode.commands.registerCommand('rainbow-csv.SetHeaderLine', set_header_line);\n    var set_comment_prefix_cmd = vscode.commands.registerCommand('rainbow-csv.SetCommentPrefix', set_comment_prefix);\n    var edit_column_names_cmd = vscode.commands.registerCommand('rainbow-csv.SetVirtualHeader', set_virtual_header);\n    var set_join_table_name_cmd = vscode.commands.registerCommand('rainbow-csv.SetJoinTableName', set_join_table_name); // WEB_DISABLED\n    var column_edit_before_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditBefore', async function() { await column_edit('ce_before'); });\n    var choose_dynamic_separator_cmd = vscode.commands.registerCommand('rainbow-csv.ChooseDynamicSeparator', async function() { await choose_dynamic_separator(); });\n    var column_edit_after_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditAfter', async function() { await column_edit('ce_after'); });\n    var column_edit_select_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditSelect', async function() { await column_edit('ce_select'); });\n    var set_separator_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparator', () => { manually_set_rainbow_separator(/*policy=*/null); });\n    var set_separator_multiline_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorMultiline', () => { manually_set_rainbow_separator(QUOTED_RFC_POLICY); });\n    var rainbow_off_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorOff', restore_original_language);\n    var sample_head_cmd = vscode.commands.registerCommand('rainbow-csv.SampleHead', async function(uri) { await make_preview(uri, 'head'); }); // WEB_DISABLED\n    var sample_tail_cmd = vscode.commands.registerCommand('rainbow-csv.SampleTail', async function(uri) { await make_preview(uri, 'tail'); }); // WEB_DISABLED\n    var align_cmd = vscode.commands.registerCommand('rainbow-csv.Align', align_table);\n    var shrink_cmd = vscode.commands.registerCommand('rainbow-csv.Shrink', shrink_table);\n    var copy_back_cmd = vscode.commands.registerCommand('rainbow-csv.CopyBack', copy_back); // WEB_DISABLED\n    var internal_test_cmd = vscode.commands.registerCommand('rainbow-csv.InternalTest', run_internal_test_cmd);\n\n    var doc_open_event = vscode.workspace.onDidOpenTextDocument(handle_doc_open);\n    var switch_event = vscode.window.onDidChangeActiveTextEditor(handle_editor_switch);\n\n    enable_dynamic_semantic_tokenization();\n\n    if (get_from_config('comment_prefix', null)) {\n        register_comment_tokenization_handler();\n    }\n\n    // The only purpose to add the entries to context.subscriptions is to guarantee their disposal during extension deactivation\n    context.subscriptions.push(lint_cmd);\n    context.subscriptions.push(rbql_cmd);\n    context.subscriptions.push(edit_column_names_cmd);\n    context.subscriptions.push(column_edit_before_cmd);\n    context.subscriptions.push(column_edit_after_cmd);\n    context.subscriptions.push(column_edit_select_cmd);\n    context.subscriptions.push(set_separator_cmd);\n    context.subscriptions.push(set_separator_multiline_cmd);\n    context.subscriptions.push(rainbow_off_cmd);\n    context.subscriptions.push(sample_head_cmd);\n    context.subscriptions.push(sample_tail_cmd);\n    context.subscriptions.push(set_join_table_name_cmd);\n    context.subscriptions.push(align_cmd);\n    context.subscriptions.push(shrink_cmd);\n    context.subscriptions.push(copy_back_cmd);\n    context.subscriptions.push(set_header_line_cmd);\n    context.subscriptions.push(set_comment_prefix_cmd);\n    context.subscriptions.push(internal_test_cmd);\n    context.subscriptions.push(choose_dynamic_separator_cmd);\n\n    context.subscriptions.push(doc_open_event);\n    context.subscriptions.push(switch_event);\n\n\n    // Need this because \"onDidOpenTextDocument()\" doesn't get called for the first open document.\n    // Another issue is when dev debug logging mode is enabled, the first document would be \"Log\" because it is printing something and gets VSCode focus.\n    await sleep(1000);\n    let active_doc = get_active_doc();\n    handle_doc_open(active_doc);\n}\n\n\nfunction deactivate() {\n    // This method is called when extension is deactivated.\n}\n\n\nexports.activate = activate;\nexports.deactivate = deactivate;\n\n// Exports just for unit tests:\nexports.autodetect_dialect_frequency_based = autodetect_dialect_frequency_based;\nexports.try_autoenable_rainbow_csv = try_autoenable_rainbow_csv;\n"],"names":["module","exports","combining","DEFAULTS","nul","control","wcwidth","ucs","opts","mid","min","max","length","Math","floor","bisearch","str","s","i","n","charCodeAt","wcswidth","csv_utils","AssertionError","Error","assert","condition","message","RecordTextConsumer","constructor","delim","policy","stop_on_warning","collect_records","preserve_quotes_and_whitespaces","detect_trailing_spaces","min_num_fields_for_autodetection","this","first_defective_line","records","num_records_parsed","fields_info","Map","first_trailing_space_line","consume","record_text","record_start_line","record","warning","smart_split","field","charAt","has","set","size","push","parse_document_records","document","comment_prefix","max_records_to_parse","num_lines","lineCount","line_aggregator","MultilineRecordAggregator","consumer","comments","lnum","line_text","lineAt","text","record_num","comment_text","add_line","has_comment_line","reset","has_full_record","get_full_line","startsWith","is_inside_multiline_record","GetIntrinsic","callBind","$indexOf","name","allowMissing","intrinsic","bind","$apply","$call","$reflectApply","call","$gOPD","$defineProperty","$max","value","e","originalFunction","func","arguments","configurable","applyBind","apply","isCallable","toStr","Object","prototype","toString","hasOwnProperty","list","iterator","thisArg","TypeError","receiver","array","len","forEachArray","string","forEachString","object","k","forEachObject","slice","Array","that","target","bound","args","boundLength","boundArgs","Function","join","result","concat","Empty","implementation","undefined","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","get","gOPDthrows","hasSymbols","getProto","getPrototypeOf","x","__proto__","needsEval","TypedArray","Uint8Array","INTRINSICS","AggregateError","ArrayBuffer","Symbol","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Number","parseFloat","parseInt","Promise","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","SharedArrayBuffer","String","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","error","errorProto","doEval","fn","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","splice","$replace","replace","$strSlice","$exec","exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","parts","first","last","match","number","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","desc","origSymbol","hasSymbolSham","getOwnPropertySymbols","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","descriptor","enumerable","toStringTag","create","ctor","superCtor","super_","writable","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","defineProperty","_","constructorRegex","isES6ClassFn","fnStr","test","tryFunctionObject","isIE68","isDDA","all","strClass","GeneratorFunction","isFnRegex","generatorFunc","getGeneratorFunc","forEach","availableTypedArrays","gOPD","g","globalThis","typedArrays","$slice","toStrTags","typedArray","arr","proto","superProto","tag","anyTrue","getter","tryTypedArrays","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","f","BigIntSupported","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","input","then","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","isSet","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","getOwnPropertyDescriptors","descriptors","formatRegExp","format","isString","objects","inspect","stringify","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","idx","arrayToHash","isError","indexOf","formatError","isRegExp","isDate","output","base","braces","isArray","toUTCString","l","formatProperty","key","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","split","line","ar","re","objectToString","d","o","pad","debuglog","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","resolve","reject","err","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","rej","foundName","os","fs","path","rbql","rbql_csv","fast_load_utils","non_numeric_sentinel","number_regex","QUOTED_RFC_POLICY","QUOTED_POLICY","dynamic_csv_highlight_margin","alignment_extra_readability_whitespace_length","update_subcomponent_stats","is_first_record","max_field_components_lens","calc_visual_char_width","visual_field_length","has_wide_chars","max_total_length","max_int_length","match_result","max_fractional_length","cur_integer_part_length","cur_fractional_part_length","align_field","is_last_in_line","trim","delta_length","repeat","dot_pos","integer_delta_length","fractional_delta_length","trailing_spaces","rfc_align_field","is_field_segment","aligned","start_offset","RecordCommentMerger","nr","next_comment","get_next","has_comments_left","has_records_left","has_entries_left","make_table_name_key","file_path","find_table_path","vscode_global_state","main_table_dir","table_id","filepath","candidate_path","homedir","existsSync","isAbsolute","table_path","RbqlIOHandlingError","VSCodeRecordIterator","RBQLInputIterator","has_header","table_name","variable_prefix","super","NR","NL","fail_on_warning","_num_records_parsed","_comments","_first_trailing_space_line","first_record","next_record_index","stop","async","query_text","variable_map","parse_basic_variables","parse_array_variables","parse_attribute_variables","parse_dictionary_variables","do_get_record","get_warnings","inconsistent_records_info","record_num_1","num_fields_1","record_num_2","num_fields_2","sample_first_two_inconsistent_records","warn_msg","make_inconsistent_num_fields_warning","VSCodeWriter","RBQLOutputWriter","header_len","null_in_output","delim_in_simple_output","output_lines","polymorphic_join","simple_join","quoted_join","quoted_join_rfc","mono_join","set_header","header","write","fields","v","quote_field","rfc_quote_field","res","normalize_fields","out_fields","sub_array_delim","VSCodeTableRegistry","get_iterator_by_table_id","_table_id","VSCodeFileSystemCSVRegistry","RBQLTableRegistry","input_file_dir","encoding","options","stream","record_iterator","bulk_input_path","createReadStream","CSVRecordIterator","output_warnings","basename","make_multiline_record_ranges","vscode","delim_length","newline_marker","start_line","expected_end_line_for_control","record_ranges","lnum_current","pos_in_editor_line","next_pos_in_editor_line","pos_in_logical_field","logical_field_tokens","newline_marker_pos","Range","is_opening_rfc_line","_record","split_quoted_str","parse_document_range_rfc","doc","range","custom_parsing_margin","begin_line","start","end_line","end","table_ranges","inside_multiline_record_before","get_num_lines_in_record","inside_multiline_record_after","comment_range","combined_line","get_field_by_line_position","query_pos","col_num","cpos","read_header","input_reader","createInterface","closed","promise_resolve","promise_reject","output_promise","close","rbql_query_web","input_document","input_delim","input_policy","output_delim","output_policy","with_headers","join_tables_registry","input_iterator","output_writer","query","rbql_query_node","input_path","output_path","csv_encoding","user_init_code","input_stream","stdin","output_stream","close_output_on_finish","stdout","createWriteStream","is_ascii","default_init_source_path","read_user_init_code","dirname","CSVWriter","get_header_line","get_default_js_udf_content","get_default_python_udf_content","align_columns","column_stats","result_lines","merger","comment","aligned_fields","fnum","field_lines","aligned_field","shrink_columns","active_doc","_fields_info","has_edit","calc_column_stats","enable_double_width_alignment","field_line","adjust_column_stats","adjusted_stats","column_stat","previous_stat","get_cursor_position_info","position","last_found_position_info","row_info","contains","is_comment","record_range","column_number","total_columns","split_warning","get_cursor_position_info_rfc","cnum","character","entries","get_cursor_position_info_standard","format_cursor_position_info","cursor_position_info","show_column_names","show_comments","max_label_length","short_report","full_report","column_label","short_column_label","substr","parse_document_range","next_cpos","parse_document_range_single_line","sample_preview_records_from_context","rbql_context","dst_message","preview_window_size","cached_table_parse_result","requested_start_record","first_failed_line","end_record","vscode_doc_version","need_full_doc_parse","fileName","sample_records","preview_sampling_error","preview_records","r","cur_record","c","actual_start_record","show_lint_status_bar_button","extension_context","language_id","lint_cache_key","lint_results","lint_report","lint_status_bar_button","window","createStatusBarItem","StatusBarAlignment","Left","lint_report_msg","is_processing","color","isInteger","is_ok","tooltip","command","show","get_cursor_position_if_unambiguous","active_editor","selections","selection","active","isEqual","anchor","generate_column_edit_selections","edit_mode","warning_msg","char_pos_before","char_pos_after","substring","position_before","Position","position_after","Selection","field_regular_expression","field_rgx","field_rgx_external_whitespaces","extract_next_field","src","dlm","allow_external_whitespaces","cidx","src_cur","match_obj","match_end","uidx","extraction_report","unquote_field","split_whitespace_separated_str","preserve_whitespaces","rgxp","unquote_fields","split_lines","rfc_line_buffer","match_list","has_unbalanced_double_quote","line_separator","RbqlParsingError","RbqlRuntimeError","InternalBadFieldError","bad_idx","params","replace_all","search","replacement","RBQLContext","writer","unnest_list","top_count","like_regex_cache","sort_key_expression","aggregation_stage","aggregation_key_expression","functional_aggregators","join_map_impl","join_map","lhs_join_var_expression","where_expression","select_expression","update_expressions","variables_init_code","query_context","wrong_aggregation_usage_error","RBQL_VERSION","check_if_brackets_match","opening_bracket","closing_bracket","parse_root_bracket_level_text_spans","text_spans","last_pos","bracket_stack","cur_char","span","unquote_string","quoted_str","column_info_from_text_span","text_span","string_literals","rbql_star_marker","simple_var_match","attribute_match","subscript_int_match","subscript_str_match","as_alias_match","column_index","column_name","is_star","alias_name","replaced_string_literal_id","unquoted_column_name","adhoc_parse_select_expression_to_column_infos","ts","stable_compare","a","b","safe_get","safe_join_get","safe_set","regexp_escape","like_to_regex","pattern","p","converted","like","matcher","LIKE","RBQLAggregationToken","marker_id","UnnestMarker","UNNEST","vals","unnest","Unnest","UNFOLD","parse_number","MinAggregator","stats","increment","cur_aggr","get_final","MaxAggregator","SumAggregator","AvgAggregator","cur_sum","cur_cnt","VarianceAggregator","cur_sum_sq","avg_val","MedianAggregator","sort","m","CountAggregator","ArrayAggAggregator","post_proc","ConstGroupVerifier","output_index","const_values","old_value","init_aggregator","generator_name","MIN","Min","MAX","Max","COUNT","count","Count","SUM","sum","Sum","AVG","avg","Avg","VARIANCE","variance","Variance","MEDIAN","median","Median","ARRAY_AGG","array_agg","FOLD","add_to_set","dst_set","len_before","TopWriter","subwriter","NW","finish","UniqWriter","UniqCountWriter","old_val","unshift","SortedWriter","reverse_sort","unsorted_entries","stable_entry","reverse","entry","AggregateWriter","aggregators","aggregation_keys","all_keys","from","ag","InnerJoiner","get_rhs","lhs_key","get_join_records","LeftJoiner","null_record","max_record_len","StrictLeftJoiner","select_except","except_fields","select_simple","sort_key","sort_entry","select_aggregated","transparent_values","num_aggregators_found","trans_value","select_unnested","folded_fields","unnest_pos","findIndex","PROCESS_SELECT_COMMON","PROCESS_SELECT_SIMPLE","PROCESS_SELECT_JOIN","PROCESS_UPDATE_JOIN","PROCESS_UPDATE_SIMPLE","MAIN_LOOP_BODY","embed_expression","parent_code","child_placeholder","child_expression","embed_code","child_code","parent_lines","child_lines","pos","placeholder_indentation","generate_main_loop_code","is_select_query","is_join_query","js_code","compile_and_run","main_loop_body","main_loop_promise","lower_case_query","toLowerCase","GROUP_BY","UPDATE","SELECT","JOIN","INNER_JOIN","LEFT_JOIN","LEFT_OUTER_JOIN","STRICT_LEFT_JOIN","ORDER_BY","WHERE","LIMIT","EXCEPT","WITH","get_ambiguous_error_msg","variable_name","get_all_matches","regexp","str_strip","strip_comments","cline","combine_string_literals","backend_expression","prefix","dst_variables_map","matches","field_num","initialize","index","js_string_escape_column_name","quote_char","query_probably_has_dictionary_variable","continuous_name_segments","continuous_segment","column_names","dict_test_rgx","escaped_column_name","column_names_source","column_names_from_query","zero_based_idx","map_variables_directly","ensure_no_ambiguous_variables","input_column_names","join_column_names","join_column_names_set","parse_join_expression","invalid_join_syntax_error","variable_pairs","pair_rgx","and_rgx","resolve_join_variables","input_variables_map","join_variables_map","lhs_variables","rhs_indices","valid_join_syntax_msg","variable_pair","join_var_1","join_var_2","lhs_key_index","rhs_key_index","generate_common_init_code","base_var","attr_var","generate_init_statements","variables_map","indent","code_lines","simple_var_name_rgx","var_info","variable_declaration_keyword","replace_star_count","aggregate_expression","replace_star_vars","rbql_expression","replacement_expression","replace_star_vars_for_header_parsing","translate_update_expression","update_expression","first_assignment_error","assignment_looking_rgx","dst_var_name","var_index","current_indent","translate_select_expression","expression_without_counting_stars","translated","translated_for_header","separate_string_literals","rgx","format_parts","idx_before","literal_id","string_literal","start_index","lastIndex","format_expression","locate_statements","statement_groups","ig","is","statement","match_str","separate_actions","with_match","ordered_statements","statement_start","span_start","span_end","statement_params","new_span","find_top","rb_actions","select_action","translate_except_expression","except_expression","input_header","skip_vars","skip_indices","var_name","HashJoinMap","key_indices","hash_map","key_index","polymorphic_get_key","get_single_key","get_multi_key","ki","get_record","nf","key_records","cleanup_query","filter","remove_redundant_table_name","select_output_header","join_header","query_column_infos","query_has_star","query_has_column_alias","qci","output_header","handle_query_modifier","TableIterator","table","normalize_column_names","stopped","num_fields","TableWriter","external_table","SingleTableRegistry","shallow_parse_input_query","get_variables_map","get_header","rhs_table_id","join_record_iterator","sql_join_type","build","select_expression_for_header","query_table","input_table","output_table","join_table","output_column_names","exception_to_error_info","exceptions_type_map","error_type","util","utf_decoding_error","rbql_init_source_path","readFileSync","name_record","index_path","content","lines","try_read_index","get_index_record","RecordQueue","push_stack","pull_stack","enqueue","dequeue","csv_path","first_record_should_be_emitted","header_preread_complete","decoder","TextDecoder","fatal","input_exhausted","started","utf8_bom_removed","partially_decoded_line","partially_decoded_line_ends_with_cr","resolve_current_record","reject_current_record","current_exception","produced_records_queue","process_line_polymorphic","process_partial_rfc_record_line","process_record_line_simple","modifier","reset_external_callbacks","try_propagate_exception","exception","store_or_propagate_exception","pause","preread_first_record","try_resolve_next_record","isPaused","resume","parent_iterator","current_record_promise","num_records","process_record_line","process_line","clean_line","assumed_source_encoding","remove_utf8_bom","process_data_stream_chunk","data_chunk","decoded_string","decode","first_line_index","process_data_bulk","data_blob","control_buffer","Buffer","compare","process_data_stream_end","last_line","destroy","readFile","close_stream_on_finish","setDefaultEncoding","error_obj","store_first_error","first_error","writer_error","_write_all","output_encoding","FileSystemCSVRegistry","interpret_named_csv_format","format_name","query_csv","require","possibleNames","out","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","child_process","rainbow_utils","ll_rainbow_utils","is_web_ext","scratch_buf_marker","client_html_template_web","aligned_files","result_set_parent_map","manual_comment_prefix_stoplist","rbql_status_bar_button","align_shrink_button","rainbow_off_status_bar_button","copy_back_button","column_info_button","dynamic_dialect_select_button","last_rbql_queries","client_html_template","global_state","preview_panel","doc_first_edit_subscription","keyboard_cursor_subscription","_unit_test_last_rbql_report","_unit_test_last_warnings","cursor_timeout_handle","rainbow_token_event","comment_token_event","sticky_header_disposable","DYNAMIC_CSV","SIMPLE_POLICY","dynamic_document_dialects","custom_comment_prefixes","original_language_ids","autodetection_stoplist","autodetection_temporarily_disabled_for_rbql","dynamic_dialect_for_next_request","dialect_map","tokenTypes","tokens_legend","SemanticTokensLegend","safe_lower","src_str","get_default_policy","separator","map_dialect_to_language_id","absolute_path_map","show_single_line_error","error_msg","active_window","showErrorMessage","sleep","ms","report_progress","progress","status_message","report","get_from_global_state","default_value","save_to_global_state","update","replace_doc_content","new_content","invalid_range","full_range","validateRange","edit","make_header_key","make_with_headers_key","get_from_config","param_name","config","workspace","getConfiguration","get_header_from_document","_header_lnum","header_line","header_info","get_dialect","languageId","dialect_info","StickyHeaderProvider","_delim","header_lnum","header_line_num","header_range","symbol_kind","SymbolKind","File","DocumentSymbol","register_sticky_header_provider","force","dispose","header_symbol_provider","document_selector","language","languages","registerDocumentSymbolProvider","enable_dynamic_semantic_tokenization","token_provider","RainbowTokenProvider","registerDocumentRangeSemanticTokensProvider","register_comment_tokenization_handler","CommentTokenProvider","get_dialect_from_user_dialog","showInputBox","enable_rainbow_features_if_csv","endsWith","hide_buttons","onDidChangeTextEditorSelection","handle_cursor_movement","setLanguageConfiguration","lineComment","hide","show_align_shrink_button","parent_table_path","parent_basename","show_rbql_copy_to_source_button","show_column_info_button","show_status_bar_items","csv_lint","all_buttons","disable_rainbow_features_if_non_csv","get_active_editor","activeTextEditor","get_active_doc","enable_tooltip_column_names","Right","do_show_column_info_button","is_manual_op","_records","lint_result","csv_lint_cmd","run_internal_test_cmd","integration_test_options","check_initialization_state","initialized","lazy_loaded","check_last_rbql_report","check_last_rbql_warnings","show_warnings","warnings","showWarningMessage","handle_rbql_result_file_node","text_doc","showTextDocument","setTextDocumentLanguage","run_command","cmd","close_and_error_guard","callback_func","spawn","stderr","data","code","handle_command_result","src_table_path","dst_table_path","dst_delim","dst_policy","error_code","webview_report_handler","json_report","parse","target_language_id","openTextDocument","file_path_to_query_key","set_header_line","_comment_prefix","raw_header","preserve_original_language_id_if_needed","original_language_id","manually_set_rainbow_separator","set_comment_prefix","delete","restore_original_language","set_join_table_name","set_virtual_header","old_header","old_header_str","quoted_fields","input_box_props","raw_new_header","new_header","column_edit","shrink_table","progress_options","location","ProgressLocation","Window","withProgress","shrinked_doc_text","align_table","double_width_alignment","aligned_doc_text","align_in_scratch_file","is_scratch_file","uri","scheme","aligned_doc_cfg","scratch_doc","copy_back","result_doc","parent_doc","parent_editor","query_result_doc","getText","do_copy_back","handle_rbql_client_message","webview","message_type","report_msg","postMessage","init_msg","path_key","input_document_path","history_list","header_for_ui","rbql_backend","rbql_query","integration_test_delay","input_table_dir","navig_direction","protocol_message","backend_language","output_dialect","old_index","update_query_history","input_table_path","rbql_output_dir","tmpdir","get_dst_table_dir","orig_extension","extname","delim_ext_map","dst_extension","result_table_name","get_dst_table_name","output_doc_cfg","handle_rbql_result_file_web","csv_options","cmd_safe_query","run_rbql_query","udf_file_path","default_content","writeFileSync","udf_doc","edit_rbql","orig_uri","isDirty","rnd_suffix","random","with_headers_by_default","createWebviewPanel","ViewColumn","Active","enableScripts","client_html","paths_list","local_path","adjusted_webview_url","asWebviewUri","Uri","file","adjust_webview_paths","html","onDidReceiveMessage","autodetect_dialect_frequency_based","candidate_separators","max_num_chars_to_test","best_dialect","best_separator","best_policy","best_dialect_frequency","frequency","j","dialect_id","try_autoenable_rainbow_csv","is_default_csv","comment_prefix_for_autodetection","rainbow_csv_language_id","candidate_dialects","min_num_lines","best_dialect_first_trailing_space_line","best_dialect_num_columns","candidate_dialect","num_columns","autodetect_dialect","handle_first_edit_for_an_empty_doc","change_event","handle_editor_switch","editor","_unused_cursor_event","handle_doc_open","isUntitled","onDidChangeTextDocument","register_csv_copy_paste_for_empty_doc","make_preview","preview_mode","fsPath","size_limit","file_size_in_bytes","statSync","full_orig_doc","file_basename","out_path","open","fd","buffer","alloc","read_begin_pos","read","_num","buffer_str","lastIndexOf","includes","register_csv_hover_info_provider","context","hover_provider","registerHoverProvider","provideHover","token","cancellation_token","isCancellationRequested","_full_text","mds","MarkdownString","appendCodeblock","Hover","make_hover","subscriptions","_token","builder","SemanticTokensBuilder","activate","globalState","rbql_client_uri","joinPath","extensionUri","bytes","asAbsolutePath","lint_cmd","commands","registerCommand","rbql_cmd","set_header_line_cmd","set_comment_prefix_cmd","edit_column_names_cmd","set_join_table_name_cmd","column_edit_before_cmd","choose_dynamic_separator_cmd","choose_dynamic_separator","column_edit_after_cmd","column_edit_select_cmd","set_separator_cmd","set_separator_multiline_cmd","rainbow_off_cmd","sample_head_cmd","sample_tail_cmd","align_cmd","shrink_cmd","copy_back_cmd","internal_test_cmd","doc_open_event","onDidOpenTextDocument","switch_event","onDidChangeActiveTextEditor","deactivate"],"sourceRoot":""}